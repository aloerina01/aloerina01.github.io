<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://aloerina01.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aloerina01.github.io/" rel="alternate" type="text/html" /><updated>2025-05-07T02:54:42+00:00</updated><id>https://aloerina01.github.io/feed.xml</id><title type="html">mille-feuille code</title><subtitle>Web Developer。同じような過ちを繰り返さないように備忘録を残しています。
</subtitle><entry><title type="html">“我々はなぜここにいるのか”の問いを手放した理由 - 心の発達理論から学ぶEMの問いの設計</title><link href="https://aloerina01.github.io/blog/2025-05-07-1" rel="alternate" type="text/html" title="“我々はなぜここにいるのか”の問いを手放した理由 - 心の発達理論から学ぶEMの問いの設計" /><published>2025-05-07T00:00:00+00:00</published><updated>2025-05-07T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-05-07-1">&lt;p&gt;最近1on1やファシリテーションでの問いかけがうまく“効いていない”感覚になることがありました(おそらく昔から効いてない場面はあったのですが、最近それに自覚的になりました)。&lt;/p&gt;

&lt;p&gt;その例のひとつが、「&lt;strong&gt;私/我々はなぜここにいるのか&lt;/strong&gt;」という問いです。&lt;/p&gt;

&lt;p&gt;この問いはアジャイルの文脈等で度々登場します。私/私たちが特定の活動をする根本的な目的や存在意義を明確にするための問いです。&lt;/p&gt;

&lt;p&gt;この問いは、問いかけ方やタイミング、または心理的安全性など最低限のことに気をつければ&lt;strong&gt;万人に有効だという前提&lt;/strong&gt;でこれまで扱ってきました。&lt;/p&gt;

&lt;p&gt;しかし私は、いくつかの実践経験とある理論から、&lt;strong&gt;この問いがそもそも有効でない相手がいる&lt;/strong&gt;ことを理解しました。これまで有用な武器であったこの問いを手放す決断に至った経緯と学びを共有します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#問いがうまく刺さらなかった経験&quot; id=&quot;markdown-toc-問いがうまく刺さらなかった経験&quot;&gt;問いがうまく刺さらなかった経験&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#キーガンの心の発達理論を学ぶ&quot; id=&quot;markdown-toc-キーガンの心の発達理論を学ぶ&quot;&gt;キーガンの「心の発達理論」を学ぶ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot; id=&quot;markdown-toc-発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot;&gt;発達段階は進めば良いわけではない - 理論の詳細を学ぶ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#どういう問いを設計すべきだったか&quot; id=&quot;markdown-toc-どういう問いを設計すべきだったか&quot;&gt;どういう問いを設計すべきだったか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#まとめ---各段階に向けた問いの設計方針&quot; id=&quot;markdown-toc-まとめ---各段階に向けた問いの設計方針&quot;&gt;まとめ - 各段階に向けた問いの設計方針&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#第3段階向け&quot; id=&quot;markdown-toc-第3段階向け&quot;&gt;第3段階向け&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#第4段階向け&quot; id=&quot;markdown-toc-第4段階向け&quot;&gt;第4段階向け&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おまけ---私が目指す自律的チームに必要な発達段階&quot; id=&quot;markdown-toc-おまけ---私が目指す自律的チームに必要な発達段階&quot;&gt;おまけ - 私が目指す「自律的チーム」に必要な発達段階&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おまけ---第3第4への移行支援の3ステップ&quot; id=&quot;markdown-toc-おまけ---第3第4への移行支援の3ステップ&quot;&gt;おまけ - 第3→第4への移行支援の3ステップ&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-外在化暗黙的に信じている価値観前提を言葉にする&quot; id=&quot;markdown-toc-1-外在化暗黙的に信じている価値観前提を言葉にする&quot;&gt;1. “外在化”：暗黙的に信じている価値観・前提を言葉にする&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-相対化信じている枠組みが唯一ではないと気づく&quot; id=&quot;markdown-toc-2-相対化信じている枠組みが唯一ではないと気づく&quot;&gt;2. “相対化”：信じている枠組みが“唯一ではない”と気づく&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-内在化自分の価値観や判断軸をつくり始める&quot; id=&quot;markdown-toc-3-内在化自分の価値観や判断軸をつくり始める&quot;&gt;3. “内在化”：自分の価値観や判断軸をつくり始める&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#移行支援で気をつけること&quot; id=&quot;markdown-toc-移行支援で気をつけること&quot;&gt;移行支援で気をつけること&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;問いがうまく刺さらなかった経験&quot;&gt;問いがうまく刺さらなかった経験&lt;/h3&gt;

&lt;p&gt;「私/我々はなぜここにいるのか」の問いに対して以下のような反応を得たことがありました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「え、えっと…このプロダクトの担当だから？それ以外に理由ってあるの？」(&lt;strong&gt;混乱&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;「そんなに深く考えたことありませんでした」(&lt;strong&gt;防衛的態度&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;「まあ、やっぱり人の役に立ちたいからですかね」(&lt;strong&gt;本音ではない同調&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらの反応から、自身の胸の奥底にあるものを探究する&lt;strong&gt;「内的な意味付け」という行為の難易度は人によって違うかもしれない&lt;/strong&gt;と仮説を立てたことが、今回の発端でした。&lt;/p&gt;

&lt;h3 id=&quot;キーガンの心の発達理論を学ぶ&quot;&gt;キーガンの「心の発達理論」を学ぶ&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;心の発達理論&lt;/strong&gt;または&lt;strong&gt;構成的発達理論&lt;/strong&gt;と呼ばれる考えがあります。&lt;/p&gt;

&lt;p&gt;これは人間の意識の発達を5つの段階で表し、個人がどのように自己と世界を理解し意味付けを行うかが段階的に進化すると説明しています。&lt;/p&gt;

&lt;p&gt;今回注目したいのは、成人が最も多く留まるとされる&lt;strong&gt;第3段階&lt;/strong&gt;です。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;段階&lt;/th&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;特徴&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;第1段階&lt;/td&gt;
      &lt;td&gt;衝動的心性&lt;br /&gt;(Impulsive Mind)&lt;/td&gt;
      &lt;td&gt;幼児期に見られ、感覚や衝動に支配される。自己と他者の区別が未発達。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第2段階&lt;/td&gt;
      &lt;td&gt;帝国的心性&lt;br /&gt;(Imperial Mind)&lt;/td&gt;
      &lt;td&gt;自己中心的で、自分の欲求や利益を最優先する。規則や他者の視点を取り入れることが難しい。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第3段階&lt;/td&gt;
      &lt;td&gt;社会化された心性&lt;br /&gt;(Socialized Mind)&lt;/td&gt;
      &lt;td&gt;他者の期待や社会的規範に基づいて自己を形成する。所属する集団や関係性が自己認識に大きな影響を与える。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第4段階&lt;/td&gt;
      &lt;td&gt;自己主導的心性&lt;br /&gt;(Self-Authoring Mind)&lt;/td&gt;
      &lt;td&gt;自らの価値観や信念に基づいて意思決定を行う。内的なコンパスを持ち、他者の期待から独立した自己を確立する。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第5段階&lt;/td&gt;
      &lt;td&gt;自己変容的心性&lt;br /&gt;(Self-Transforming Mind)&lt;/td&gt;
      &lt;td&gt;自己の枠組みや信念を相対化し、複数の視点を統合する。自己や世界の複雑性を受け入れ、継続的な変化を追求する。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;第3段階(社会化された自己)は、以下のような特徴を持ちます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自己とは&lt;strong&gt;他者との関係の中で規定されるもの&lt;/strong&gt;（自分の価値や存在意義は、外から与えられる）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;「役に立つこと」「期待に応えること」が最優先&lt;/strong&gt;の倫理的指針になる&lt;/li&gt;
  &lt;li&gt;内面的な欲求や信念は未分化で、&lt;strong&gt;「私は何がしたいのか」より「何が求められているか」&lt;/strong&gt;が判断軸になる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;したがって、「なぜここにいるのか？」という内的動機を問う構造は第3段階の枠組みの外にあるため、そもそもピントが合いづらいのです。&lt;/p&gt;

&lt;p&gt;私の事例に戻ると、私が問いかけた相手は決して怠けていたり理解力がないのではなく、&lt;strong&gt;仕事における「なぜ（目的・意義）」を、役割や所属といった外部的な基準で意味づける段階にいる&lt;/strong&gt;ために、内的な意味付けを期待する問いかけは思考様式にそぐわなかったと言えるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot;&gt;発達段階は進めば良いわけではない - 理論の詳細を学ぶ&lt;/h3&gt;

&lt;p&gt;段階は「能力の序列」ではなく、&lt;strong&gt;自己を捉える軸の違い&lt;/strong&gt;です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第3段階は「つながりと忠誠」を大切にする&lt;/li&gt;
  &lt;li&gt;第4段階は「原則と自律性」を土台にする&lt;/li&gt;
  &lt;li&gt;第5段階は「複数の枠組みの統合と脱構築」を受け入れる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;倫理観、善悪、正しさの定義&lt;/strong&gt;も段階で変化します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第3段階：「他者をがっかりさせないこと」が善&lt;/li&gt;
  &lt;li&gt;第4段階：「自らの信念と責任を貫くこと」が善&lt;/li&gt;
  &lt;li&gt;第5段階：「信念や自己概念すら再構成できる柔軟さ」が善&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例えばオペレーション中心の職務では第3段階的な動機づけが力を発揮するなど、職種や役割によってフィットする段階は変わります。なので&lt;strong&gt;段階を進めば良いわけではない&lt;/strong&gt;、ということを強調しておきます。EMとして&lt;strong&gt;メンバーの段階を無理に変化させる気はありません&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;理論を別の切り口で説明してみます。&lt;/p&gt;

&lt;p&gt;心の発達理論(Subject-Object Theory of Development)では、&lt;strong&gt;各段階で「主観（Subject）」として捉えていたものを、次の段階で「客体（Object）」として認識できるようになること&lt;/strong&gt;が発達の鍵とされています。つまり、以前は無意識に影響を受けていた信念や価値観を&lt;strong&gt;意識的&lt;/strong&gt;に捉え、再構築する能力が発達を促進します。&lt;/p&gt;

&lt;h3 id=&quot;どういう問いを設計すべきだったか&quot;&gt;どういう問いを設計すべきだったか&lt;/h3&gt;

&lt;p&gt;第3段階の人に、自分の心の奥を探るきっかけを与えたいのであれば&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「どんなときに“役に立てた”と感じた？」&lt;/li&gt;
  &lt;li&gt;「誰に喜ばれると自分も嬉しい？」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった具合に、&lt;strong&gt;「他者との関係性」を起点とした問い&lt;/strong&gt;が適していたのでしょう。これを考慮せず、全員に同じように「私/私たちはなぜここにいるのか」と問いかけることは不適切だったと今では考えています。&lt;/p&gt;

&lt;h3 id=&quot;まとめ---各段階に向けた問いの設計方針&quot;&gt;まとめ - 各段階に向けた問いの設計方針&lt;/h3&gt;

&lt;p&gt;ここまでの学びを踏まえて、第3段階・第4段階の人に向けてどのように問いを設計するか、方針をまとめます。いずれも、&lt;strong&gt;それぞれの段階の思考様式に沿った問いかけ&lt;/strong&gt;と、&lt;strong&gt;自己の段階を自覚するきっかけになり得る問いかけ&lt;/strong&gt;をすることが基本方針です。&lt;/p&gt;

&lt;h4 id=&quot;第3段階向け&quot;&gt;第3段階向け&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;自己と他者の境界づけの支援&lt;/strong&gt;（アイデンティティと期待の分離を支援する）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;内的対話の導入&lt;/strong&gt;（たとえば「あなたの中の声には複数あるとしたら？」）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;価値観の言語化支援&lt;/strong&gt;（本人がまだ自分の中に持っていない構造に言葉を与える）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;第4段階向け&quot;&gt;第4段階向け&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ロジックやパターンの明確化支援&lt;/strong&gt;（価値基準や信念の明確化を支援する）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;一貫性の問い直し&lt;/strong&gt;（たとえば「それはいつから正しいと感じていますか？」）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;前提を問い直す支援&lt;/strong&gt;（メタ構造の入り口に立たせる）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;おまけ---私が目指す自律的チームに必要な発達段階&quot;&gt;おまけ - 私が目指す「自律的チーム」に必要な発達段階&lt;/h3&gt;

&lt;p&gt;心の発達理論に照らし合わせると、&lt;strong&gt;「自律性」とは第4段階以降で初めて&lt;/strong&gt;内発的な意味をもって成立する概念です。&lt;/p&gt;

&lt;p&gt;言い換えると、第3段階的な「指示を待たずに動く」といった&lt;strong&gt;『表面的な自律的ふるまい』&lt;/strong&gt;と、第4段階的な「自分の軸で判断し責任を持つ」といった&lt;strong&gt;『構造的な自律性』&lt;/strong&gt;は異なると言えます。&lt;/p&gt;

&lt;p&gt;各段階と自律性の関係はこのようになります。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;段階&lt;/th&gt;
      &lt;th&gt;特徴&lt;/th&gt;
      &lt;th&gt;「自律性」との関係&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;第2段階（道具的段階）&lt;/td&gt;
      &lt;td&gt;損得とルールによる行動&lt;/td&gt;
      &lt;td&gt;自律性は存在せず、明確な報酬や罰でしか動けない&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第3段階（他者依存段階）&lt;/td&gt;
      &lt;td&gt;他者の期待に従って行動&lt;/td&gt;
      &lt;td&gt;自律的に見える行動も「評価されるから」であり、本質的には依存的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第4段階（自己主導段階）&lt;/td&gt;
      &lt;td&gt;自分の価値観・原則に基づいて意思決定&lt;/td&gt;
      &lt;td&gt;初めて&lt;strong&gt;内在的な自律性&lt;/strong&gt;が発生し、他者と協働しつつも“自分の意志”で動ける&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第5段階（自己変容段階）&lt;/td&gt;
      &lt;td&gt;自分の枠組みをも相対化できる柔軟性&lt;/td&gt;
      &lt;td&gt;「自律と非自律の揺らぎ」すら受容しながら選択できる次元に&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;これを踏まえると、私が目指す「自律的なチーム」には、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;少なくとも「チーム文化の形成に強く影響を与える中心層」が第4段階以上であることは不可欠&lt;/li&gt;
  &lt;li&gt;第3段階の人が数名いることは問題ではなく、むしろ「信頼されたい」「貢献したい」という彼らの動機は、適切に設計された関係性やフィードバックの中でポジティブに活きる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と考えられます。&lt;/p&gt;

&lt;p&gt;ですので僕は今後、メンバー各々の段階を意識したうえで問いをデザインし、そして万が一「全員が第3段階」なチームである場合のみ、一部のメンバーに対し段階を上げる支援をしようと考えています。&lt;/p&gt;

&lt;h3 id=&quot;おまけ---第3第4への移行支援の3ステップ&quot;&gt;おまけ - 第3→第4への移行支援の3ステップ&lt;/h3&gt;

&lt;p&gt;段階を上げる支援をするならどうするかについても考えてみます。まだ実践していないので「支援の設計」の域を出ていないことに留意して読んでもらえればと思います。&lt;/p&gt;

&lt;p&gt;さて、第3段階の特徴を改めて言語化してみましょう。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;他者の期待&lt;/strong&gt;に強く同一化している&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;「良い人」「求められる自分」でいること&lt;/strong&gt;に価値を感じる&lt;/li&gt;
  &lt;li&gt;自分の意見や価値観は、他者の枠組みに埋もれて見えにくい&lt;/li&gt;
  &lt;li&gt;「どう思われるか」が最重要の意思決定軸になる&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;責任や目的を“自分の内側”から引き出すのが苦手&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを踏まえて移行のステップをこのように考えてみます。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“&lt;strong&gt;外在化&lt;/strong&gt;”：暗黙的に信じている価値観・前提を言葉にする&lt;/li&gt;
  &lt;li&gt;“&lt;strong&gt;相対化&lt;/strong&gt;”：信じている枠組みが“唯一ではない”と気づく&lt;/li&gt;
  &lt;li&gt;“&lt;strong&gt;内在化&lt;/strong&gt;”：自分の価値観や判断軸をつくり始める&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-外在化暗黙的に信じている価値観前提を言葉にする&quot;&gt;1. “外在化”：暗黙的に信じている価値観・前提を言葉にする&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：本人が「自分が当然だと思っていた考え方が“前提”である」と気づくこと&lt;/li&gt;
  &lt;li&gt;方法：本人の言動の背景にある「暗黙のルール（例：期待に応えなければならない）」を探る&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「それをやらないと、何が起こると感じますか？」&lt;/li&gt;
      &lt;li&gt;「そう思うようになったきっかけって、何か心当たりありますか？」&lt;/li&gt;
      &lt;li&gt;「“〜すべき”って、誰が決めたんでしょう？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;2-相対化信じている枠組みが唯一ではないと気づく&quot;&gt;2. “相対化”：信じている枠組みが“唯一ではない”と気づく&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：「他者の期待」と「自分の価値観」が異なる可能性に気づかせる&lt;/li&gt;
  &lt;li&gt;方法：対立する意見や価値観に出会わせ、自己の“内在的軸”の不在を実感させる&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「Aさんのやり方と、あなたのやり方では、どちらが正しいと思いますか？その理由は？」&lt;/li&gt;
      &lt;li&gt;「そのやり方は、“あなたにとって”しっくりきてますか？」&lt;/li&gt;
      &lt;li&gt;「もし誰の期待もなかったとしたら、あなた自身はどうしたいですか？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;3-内在化自分の価値観や判断軸をつくり始める&quot;&gt;3. “内在化”：自分の価値観や判断軸をつくり始める&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：本人の内面からの理由・信念によって意思決定できるようにする&lt;/li&gt;
  &lt;li&gt;方法：小さな選択や挑戦の場で、自分の意志で決め、振り返るプロセスを支援する&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「あなたが“やりたい”と感じる理由は何ですか？」&lt;/li&gt;
      &lt;li&gt;「それを選んだあなたを、どう思いますか？」&lt;/li&gt;
      &lt;li&gt;「その判断は、あなたが大切にしている何を守ろうとしていますか？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;移行支援で気をつけること&quot;&gt;移行支援で気をつけること&lt;/h4&gt;

&lt;p&gt;変化は時間がかかるものですし、そもそも段階を上げることはその個人にとって必要なこととは限りません。あくまで私が「チームにとって必要」と感じただけで、個人に焦点を当てれば、必ずしも段階を変えたいわけではないでしょう。&lt;/p&gt;

&lt;p&gt;ですので、&lt;strong&gt;問いすぎず、導かず、変化を急かさないこと&lt;/strong&gt;に気をつけます。&lt;/p&gt;

&lt;p&gt;また外在化→相対化→内在化の3ステップはすべて問いかけによって行うので、問われたメンバーは「今まで向き合ったことのない問い」と正面から向き合うことになるでしょう。それもやはり時間がかかることであり、頭の中だけでは結論は出しにくいことが多いかもしれません。&lt;/p&gt;

&lt;p&gt;実践による気づきと内省を繰り返すことで少しずつステップが進むと考えられます。その&lt;strong&gt;精神的・時間的余白を十分に確保すること&lt;/strong&gt;を重視します。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;今まで「問いかけ」は聖なる武器であり、中でも様々な書籍等で登場する「私/我々はなぜここにいるのか」という問いは有用な武器だと考えてきました。&lt;/p&gt;

&lt;p&gt;ですが、それは私の心の発達段階というレンズを通しての捉え方でした。人によってはその問いでは適切に自分自身に向き合えないこともあると、理論を通して、同時に肌感をもって分かってきました。&lt;/p&gt;

&lt;p&gt;これを読んでいるEMの中には、これを当たり前に感じる人もいるでしょうし、何を言っているかピンとこない人もいるかもしれません。&lt;/p&gt;

&lt;p&gt;様々な段階にいるであろう読者の方々が、記事を通していくつかの発達段階について理解し、そして私がこっそり仕込んだ各段階の実践例に触れ、1つでも新しい気付きに繋がれば幸いです。&lt;/p&gt;

&lt;p&gt;この機に、改めて私とともに問いの再デザインをしてみるのはいかがでしょう？&lt;/p&gt;</content><author><name></name></author><summary type="html">最近1on1やファシリテーションでの問いかけがうまく“効いていない”感覚になることがありました(おそらく昔から効いてない場面はあったのですが、最近それに自覚的になりました)。</summary></entry><entry><title type="html">「若手が育っていない」「優秀な人に負担が偏っている」と感じたときに立ち返ること</title><link href="https://aloerina01.github.io/blog/2025-03-31-1" rel="alternate" type="text/html" title="「若手が育っていない」「優秀な人に負担が偏っている」と感じたときに立ち返ること" /><published>2025-03-31T00:00:00+00:00</published><updated>2025-03-31T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-03-31-1">&lt;p&gt;チームでプロダクト開発をしているものの、ジュニアエンジニアが十分に成長していない…。1人でやれるタスクは増えているものの、それなりの規模の開発案件を責任を持ってやり遂げるだけのオーナーシップやリーダーシップがなかなか養われない…。&lt;/p&gt;

&lt;p&gt;一方で、難易度の高い案件やスケジュールの厳しい案件などは特定のシニアエンジニアの馬力によって乗り越えているため、特定の人に負荷が集中してばかり…。&lt;/p&gt;

&lt;p&gt;こんなチーム状況が1〜2年近く続いているとしたら、そのチームには改善の余地があります。&lt;/p&gt;

&lt;p&gt;短期的にはシニアエンジニアの馬力頼りで走り切るサバイバルモードが必要な場面もあります。しかしそれが1年以上も続けばシニアエンジニアだって疲弊しますし、「なぜ自分はロクに変化の起きないこのチームの面倒を見続けているのか」と不満を抱きチームを離れる可能性すらあるでしょう。&lt;/p&gt;

&lt;p&gt;つまりいつかは区切りをつけ学習モードへ切り替える必要があり、切り替えが起きない状況は、強い意思を持って手を加える必要があるということです。&lt;/p&gt;

&lt;p&gt;チームによって向き合うべき課題は違うので普遍的に使えるTipsはあまりないですが、上述のような&lt;strong&gt;サバイバル沼に陥りやすい要因&lt;/strong&gt;が経験から見えてきたので、チェックリスト的に共有します。&lt;/p&gt;

&lt;p&gt;……それにしても妙に具体的な”入り”だなと感じた人は勘が鋭いです。つまり私が失敗してきた事例とそこから得た学びを共有するということです。恥ずかしいですが山程失敗してきたので、学びのお裾分けをしてみようと思います。&lt;/p&gt;

&lt;h3 id=&quot;要因1-トップダウン的なタスクアサインをしている&quot;&gt;要因1: トップダウン的なタスクアサインをしている&lt;/h3&gt;

&lt;p&gt;シニアエンジニアやテックリードなどの特定の1人からチームメンバーにタスクを分配しているチームは注意が必要です。タスクを受け取るメンバーからすれば「与えられたタスクをやれば自分の役割を満たせる」と感じます。自分のタスク以外への興味が薄れ、チームとしてのアウトプットを意識しなくなります。&lt;/p&gt;

&lt;p&gt;その結果、チームメンバーはチーム全体やプロジェクト全体を俯瞰する視点を持つ機会や必要性がなく、リード的な視野・視座をいつまでも持てず、反面タスクを分配する特定の1人にのみ負担が集中します。&lt;/p&gt;

&lt;p&gt;おすすめの解決策は&lt;strong&gt;セルフアサイン&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;まずバックログアイテムや案件仕様書を『チーム全員のもの』と捉え、チームでタスク分解します。そして今回のイテレーションで着手する分だけ、各自が手を挙げる形式でセルフアサインします。予定より早く終わったときは分解したタスクの残りから追加でセルフアサインしても良いですし、チームメンバーを手助けしても良いでしょう。&lt;/p&gt;

&lt;p&gt;ポイントは&lt;strong&gt;バックログや案件を『チーム(メンバー全員)のもの』と捉えること&lt;/strong&gt;と、&lt;strong&gt;自らの意思でタスクを選択すること&lt;/strong&gt;です。これにより全体感を捉える視野や、チームのアウトプットを自分ごとと捉える機会が生まれます。&lt;/p&gt;

&lt;h3 id=&quot;要因2-状況の共有頻度が低いまた共有内容に関心がない&quot;&gt;要因2: 状況の共有頻度が低い、また共有内容に関心がない&lt;/h3&gt;

&lt;p&gt;日々の仕事内容についてチームメンバー間での共有頻度が低い場合や、共有内容への関心が薄い場合、要因①と同様にチームメンバーのリーダーシップやオーナーシップが育つチャンスを失います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;チームやプロダクトの状況を把握しそれに応じて自身の行動を調整する&lt;/strong&gt;、という一連の活動の延長線上に『リーダーシップ』が存在します。この行動を促すには、状況を把握する機会、そして自分の行動を調整する機会を増やすことが重要です。&lt;/p&gt;

&lt;p&gt;つまり、状況を知る機会が頻繁にあり、その場の内容に関心をもって臨めると良いというわけです。&lt;/p&gt;

&lt;p&gt;「そんなことは分かっていて、デイリースタンドアップをしているものの惰性的で形骸化している」といった場合は、場をチューニングしてみます。&lt;/p&gt;

&lt;p&gt;個人の進捗共有が目的ではなく、&lt;strong&gt;チームの計画やゴールのための再調整の場&lt;/strong&gt;であると目的を再確認し、それに向かうようファシリテーションすることでチューニングできます。それでも良くならない場合は、そのミーティングを一度消滅させ、新しい名前、新しい時間帯、新しいフォーマットで場作りをし、気分を一新することが効果的かもしれません。&lt;/p&gt;

&lt;h3 id=&quot;要因3-現状に問題がないので働き方のアップデートをしていない&quot;&gt;要因3: 現状に問題がないので働き方のアップデートをしていない&lt;/h3&gt;

&lt;p&gt;ふりかえりで意見が出なかったり、現状の仕事のプロセスに変化が起きなかったりといった状況が長く続くものの、『&lt;strong&gt;特段問題がないから現状維持で良い』という考えがチームに蔓延している場合、実はゆるやかにチームが衰退しているケースが多い&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;逆に考えてみると「現状に問題がある」というのは、問題が顕在化しているということです。&lt;br /&gt;
&lt;strong&gt;「問題がないから改善しない」は「問題が顕在化するまで何もしない」と言い換えられます&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;そして変化が起きない状況が続くにつれて、ますます変化は生まれにくくなります。日常的に新しい試みを積み重ねているチームと比べると、変化してこなかったチームにとって「変化は特別なこと」であり、変化への耐性が身についていません。つまり&lt;strong&gt;変わることへの抵抗感&lt;/strong&gt;が強いです。&lt;/p&gt;

&lt;p&gt;言い換えると、変化を日常的にし、「働き方は自ら考えアップデートするものだ」と捉えることで、チームのプロセスに対するオーナーシップが育ちます。&lt;/p&gt;

&lt;p&gt;オーナーシップが発揮され始めてくると「Aさんはミーティングの効率化に積極的」「Bさんはレビュープロセスへの関心が高い」といった具合に、各々の長所が見えてきます。そうなれば改善は加速し、チームメンバー一人ひとりの積極性ある行動が増え、行動が増えれば学びが増え、チームメンバーもチームも育っていくでしょう。&lt;/p&gt;

&lt;h3 id=&quot;要因4-ふりかえりをしているつもりだが働き方のアップデートをしていない&quot;&gt;要因4: ふりかえりをしているつもりだが、働き方のアップデートをしていない&lt;/h3&gt;

&lt;p&gt;「自分たちは改善活動をしている」と思っているが、その実態が「KPTを実施しているしコードのリファクタリングもしているが、&lt;strong&gt;メンバーの役割や仕事のプロセスについては何もアップデートしていない&lt;/strong&gt;」という状況であれば要注意です。&lt;/p&gt;

&lt;p&gt;「自分たちは継続的な改善活動をしている」と錯覚しやすい例が「(KPTなどの)ふりかえりフレームワークを使っている」「リファクタリングなどの技術的な改善をしている」の2つです。&lt;/p&gt;

&lt;p&gt;たしかにこれらは改善活動ではあります。&lt;/p&gt;

&lt;p&gt;しかし、やみくもに(本来のKPTの狙いを理解せずに)KPTをするだけでは十分な効果は得られません。コンセプトや効果を理解せずにフレームワークを利用するということは、「Reactよく分からないけど流行ってるから導入してみよう」と同じです。想像するまでもなく、その危うさは分かると思います。&lt;/p&gt;

&lt;p&gt;またリファクタリングは改善活動ではありますが、リファクタリングやライブラリのアップデートしか改善活動と呼べる活動がない場合、つまりコードベースに対する改善活動しかない場合、注意が必要です。&lt;/p&gt;

&lt;p&gt;この状況は、イテレーションの長さ・コミュニケーションパス・チーム構成・メンバー一人ひとりの役割等の&lt;strong&gt;『自分たちが従っているルールや条件』を完全に外部から与えられるものと認識していて、「ルールや条件も自分たちで変えていける余地がある」と捉えていない可能性があります&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;特に開発プロセスは、過去に一度組み立てたまま現在も変わらず運用していてチームのスケールに適応できていなかったり、プロダクト立ち上げ直後に突貫工事でつくったルールであり本当はメンテナンスが必要な状態であったりと、アップデートする余地が残っているケースが珍しくありません。&lt;/p&gt;

&lt;p&gt;ですがその問題をに目を向けず、ルールは偉い誰かが決めるものであり自分たちが考える必要はなく、ルールの中でコードを書くことだけが開発チームの仕事だと捉えていては、チームの最大パフォーマンスは発揮されませんしオーナーシップも生まれません。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自分たちのルールや働き方さえも自分たちで変え得るものだ&lt;/strong&gt;と捉えて改善していくことでオーナーシップが育ち、オーナーシップがあることで自然と自らの働き方をふりかえる習慣が生まれることは、なんとなく想像できるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相互に作用する&lt;/strong&gt;ものなので、まずは「自分たちの今の開発プロセスに改善の余地はないか」をチーム全員で見直すことで、良い循環の1歩目を踏み出せます。&lt;/p&gt;

&lt;p&gt;冒頭に挙げた例のように「リーダーシップやオーナーシップの有無」がシニアエンジニアとそうでないエンジニアの差(のひとつ)であるならば、この1歩目が、差を埋めるきっかけになるはずです。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;チームを眺めたときに感じ取れる危機感は他にも様々あります。このセンサーは経験で養えるものだと思うので、私よりも高感度な人もいればそうでない人もいるでしょうし、私自身も1年前より感度が良くなっていますし、来年は更に鋭くなることでしょう。&lt;/p&gt;

&lt;p&gt;ですので焦らず、今の自分たちに感じ取れるものから向き合っていけば良いと思っています。&lt;/p&gt;

&lt;p&gt;その中でも簡単に察知できる部分を、今回は書き出してみました。チームの危機を1つでも見つけるきっかけになれば幸いです。&lt;/p&gt;

&lt;p&gt;上述のように「問題が起きていないから自分たちは大丈夫」「改善活動してるから自分たちは大丈夫」と判断してしまうことがかつて自分にもありましたが、短期的な問題の有無に気を取られ過ぎると、記事タイトルにしたような「いつまでもメンバーのキャリアが前進していない」といった中長期の課題となってはね返ってきます。&lt;/p&gt;

&lt;p&gt;特に「キャリアが前進しているか」や「期待役割が変化しているか」は中〜長期の視点でメンバーと向き合わないと気付けない課題なので、目先のタスクに集中したいサバイバルフェーズでは気付きにくいです。&lt;/p&gt;

&lt;p&gt;理想的なことを言えば、中長期の課題が見つかる前に日々の改善を重ね、変化に慣れ、ひいては変化を歓迎し変化し続ける自律的なチームになることが、タイトルへの回答になります。&lt;/p&gt;

&lt;p&gt;といっても簡単ではないので(本当に簡単ではないので)、お互い地道に一歩ずつやっていきましょう。&lt;/p&gt;</content><author><name></name></author><summary type="html">チームでプロダクト開発をしているものの、ジュニアエンジニアが十分に成長していない…。1人でやれるタスクは増えているものの、それなりの規模の開発案件を責任を持ってやり遂げるだけのオーナーシップやリーダーシップがなかなか養われない…。</summary></entry><entry><title type="html">計画的にロールモデルを活用する</title><link href="https://aloerina01.github.io/blog/2025-02-12-1" rel="alternate" type="text/html" title="計画的にロールモデルを活用する" /><published>2025-02-12T00:00:00+00:00</published><updated>2025-02-12T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-02-12-1">&lt;p&gt;ロールモデルの存在は、&lt;strong&gt;日々の小さな行動改善&lt;/strong&gt;から&lt;strong&gt;キャリアの選択&lt;/strong&gt;まで、多くの場面で役立ちます。&lt;/p&gt;

&lt;p&gt;「ロールモデル」や「モデルケース」と私はよく呼びますが、マネジメントの中で意識的にこれらを活用することで、想像以上に幅広い効果を体感してきました。&lt;/p&gt;

&lt;p&gt;今回は、その事例を紹介します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ロールモデルの活用事例&quot; id=&quot;markdown-toc-ロールモデルの活用事例&quot;&gt;&lt;strong&gt;ロールモデルの活用事例&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#マネージャーにとってもロールモデルが役立つ&quot; id=&quot;markdown-toc-マネージャーにとってもロールモデルが役立つ&quot;&gt;&lt;strong&gt;マネージャーにとってもロールモデルが役立つ&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-フィードバックの空中戦を避ける&quot; id=&quot;markdown-toc-1-フィードバックの空中戦を避ける&quot;&gt;&lt;strong&gt;1. フィードバックの空中戦を避ける&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-チーム文化を根付かせる&quot; id=&quot;markdown-toc-2-チーム文化を根付かせる&quot;&gt;&lt;strong&gt;2. チーム文化を根付かせる&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-新たなマネージャー候補を生み出す&quot; id=&quot;markdown-toc-3-新たなマネージャー候補を生み出す&quot;&gt;&lt;strong&gt;3. 新たなマネージャー候補を生み出す&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ロールモデルとの接点をつくる方法&quot; id=&quot;markdown-toc-ロールモデルとの接点をつくる方法&quot;&gt;&lt;strong&gt;ロールモデルとの接点をつくる方法&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ロールモデルの活用事例&quot;&gt;&lt;strong&gt;ロールモデルの活用事例&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;たとえばジュニアエンジニアがキャリアのレベルアップを考えるとき、&lt;strong&gt;自身とロールモデルを比較することで取るべき行動を浮き彫り&lt;/strong&gt;にできます。成果だけでなく、プロセスや学習の仕方も含めて比較すると、より実践的なヒントが得られるでしょう。&lt;/p&gt;

&lt;p&gt;シニアエンジニアが自身の価値を追求する際にも、ロールモデルは参考になります。&lt;strong&gt;成功パターンをそのまま適用できるケースは少ないですが、共通項を見出したり、体験談を聞いたりすることで、新たな視点を得られる&lt;/strong&gt;ことがあります。&lt;/p&gt;

&lt;p&gt;また、キャリアのステージを問わず、Web業界は数年後の自分の姿が想像しにくいものです。しかし&lt;strong&gt;2〜5年先を歩む先輩の姿がいくつか見えるだけで、将来像を描きやすく&lt;/strong&gt;なります。&lt;br /&gt;
ロールモデルが歩いた道を丁寧にたどるというよりは、&lt;strong&gt;複数のロールモデルの背中を見ながら紆余曲折しその過程で自分の道を発見していく&lt;/strong&gt;というイメージです。&lt;/p&gt;

&lt;p&gt;ここまでいくつか簡単な事例を挙げてみました。&lt;/p&gt;

&lt;p&gt;ロールモデルを意識したことがない人でも、振り返ってみると「あのとき、あの人のやり方を参考にした」という経験があると思います。&lt;strong&gt;この経験が生まれるチャンスを計画的にマネジメントに組み込んでいく&lt;/strong&gt;ことが今回のテーマというわけです。&lt;/p&gt;

&lt;h3 id=&quot;マネージャーにとってもロールモデルが役立つ&quot;&gt;&lt;strong&gt;マネージャーにとってもロールモデルが役立つ&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;ロールモデルを意識することで、&lt;strong&gt;マネジメントする側&lt;/strong&gt;の私自身にも恩恵があります。&lt;/p&gt;

&lt;h4 id=&quot;1-フィードバックの空中戦を避ける&quot;&gt;&lt;strong&gt;1. フィードバックの空中戦を避ける&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;エンジニアがおこなう設計の良し悪しの議論と同様で、フィードバックをする際にも目に見える”モノ”がないと認識のズレが起きがちです。モデルケースが目に見える”モノ”の役割をしてくれることがあります。&lt;/p&gt;

&lt;h4 id=&quot;2-チーム文化を根付かせる&quot;&gt;&lt;strong&gt;2. チーム文化を根付かせる&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;人は所属する集団の”色”に染まる傾向&lt;/strong&gt;にあります。これを利用して、マネージャーやリーダーなど&lt;strong&gt;チームへの影響力を持つ人が、メンバーに推奨したい行動を率先してやることでチームに習慣や文化を根付かせる&lt;/strong&gt;ことができます。&lt;/p&gt;

&lt;p&gt;たとえば「小さなことでも称賛と感謝を忘れないチーム」を目指すのであれば、影響力のあるマネージャー等が称賛と感謝を日々実践しモデルケースとなると効果的でしょう。&lt;/p&gt;

&lt;p&gt;感謝を伝え合うワークショップ等を開催する手もありますが、その場限りで終わりがちです。定着を狙う場合は、&lt;strong&gt;身近なモデルケースによりじわじわ浸透させる&lt;/strong&gt;ことを私は意識します。&lt;/p&gt;

&lt;h4 id=&quot;3-新たなマネージャー候補を生み出す&quot;&gt;&lt;strong&gt;3. 新たなマネージャー候補を生み出す&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;多くのエンジニアにとって、マネージャーは「何をしているか分からない」「楽しそうに見えない」存在になりがちです。プレイヤーだった頃の私にとってもそうでした。&lt;/p&gt;

&lt;p&gt;その結果、&lt;strong&gt;「なりたい」と思われにくい役割になってしまう&lt;/strong&gt;のですが、これを解消するために、メンバーに&lt;strong&gt;マネージャーの仕事内容を説明し、理解を深めた上でマネージャーを観察してもらう&lt;/strong&gt;ことを実践しています。&lt;/p&gt;

&lt;p&gt;マネージャーにとって、次のマネージャー候補を育成する(見つける)ことは難易度の高い課題ですが、この下準備がきっかけとなり新たなマネージャーが生まれた経験があります。&lt;/p&gt;

&lt;p&gt;また、マネージャーを観察することで、&lt;strong&gt;エンジニアがすぐに活かせるTipsを発見していた&lt;/strong&gt;事例もあります。たとえばテックリードが『人を巻き込み大きな成果を導く方法』を学ぶケースや、後輩のメンターを担当するエンジニアが『権限委譲の仕方』を参考にするケースなどがありました。&lt;/p&gt;

&lt;p&gt;こういった経験もまた、いずれマネジメントに興味を持つきっかけになることがあるので、布石としての効果があるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;ロールモデルとの接点をつくる方法&quot;&gt;&lt;strong&gt;ロールモデルとの接点をつくる方法&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;最後に、どのようにロールモデルとチームメンバーとの接点をつくっているかを紹介します。&lt;/p&gt;

&lt;p&gt;私は『&lt;strong&gt;その人の協業者の中からロールモデルを選ぶ&lt;/strong&gt;』方法を取ることが多いです。具体的には、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;協業者の特性、スキル、働き方、価値観、これまでのキャリア等の&lt;strong&gt;情報を集めてマップを描く&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;メンバー各々の状況に合わせて、マップから&lt;strong&gt;適切なロールモデルを選び伝える&lt;/strong&gt;、また&lt;strong&gt;観察する観点を伝える&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;加えて、ロールモデルとメンバーの直接的な関わりの機会をつくりたい場合は、&lt;strong&gt;プロジェクトのふりかえりの場で同じテーブルにつく機会を設ける&lt;/strong&gt;などの工夫をすることもあります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;人を観察することが業務の一環である&lt;/strong&gt;マネージャーにとって、また&lt;strong&gt;チームメンバー各々の現状や次のステップについて誰よりも高解像度に把握している&lt;/strong&gt;マネージャーにとって、さらには&lt;strong&gt;ロールをまたいでコミュニケーションハブになりやすい&lt;/strong&gt;マネージャーにとって、この方法は手間をかけずに実践できます。&lt;/p&gt;

&lt;p&gt;もしかしたら、協業者が多く、各分野の専門家が多い今の職場だから使える手法かもしれませんが、手間をかけずに実践できる「ロールモデルの活用」は、今の私にとって有用な手法のひとつです。&lt;/p&gt;

&lt;p&gt;以上です。&lt;br /&gt;
ぜひ皆さんの回りのロールモデルの事例もお聞かせください。その他感想は&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までどうぞ。&lt;/p&gt;</content><author><name></name></author><summary type="html">ロールモデルの存在は、日々の小さな行動改善からキャリアの選択まで、多くの場面で役立ちます。</summary></entry><entry><title type="html">チームがより自律的になるWorkshopと、チーム成熟度CheatSheetをつくりました</title><link href="https://aloerina01.github.io/blog/2025-01-16-1" rel="alternate" type="text/html" title="チームがより自律的になるWorkshopと、チーム成熟度CheatSheetをつくりました" /><published>2025-01-16T00:00:00+00:00</published><updated>2025-01-16T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-01-16-1">&lt;p&gt;エンジニア一人ひとりの期待役割がスキルやキャリアにより変化するように、&lt;strong&gt;チームも成熟度やフェーズに応じて期待役割が変化します&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;様々な期待役割を持つチームメンバーの活動が重なり合い生まれる『&lt;strong&gt;チームのプロセスや成果&lt;/strong&gt;』&lt;strong&gt;がどうあるべきか&lt;/strong&gt;、がチームの期待役割であると言えます。&lt;strong&gt;チームメンバー各々がこれに目を向ける&lt;/strong&gt;ことで、より効果的に相互作用し、高い成果を出し、&lt;strong&gt;自律的に活動をするチームに近づけます&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;定期的にふりかえりを実施しているチームであっても、「私たちのチームはどのくらい成熟しているのか？」「私たちのチームは周囲からどのような期待を持たれているのか？」といったことを見つめ直す機会はなかなかありません。&lt;/p&gt;

&lt;p&gt;現に私がマネジメントするいくつかのフロントエンドエンジニアチームでも、チームメンバー自身がこれらの問いに向き合う機会はあまりなかったです。&lt;/p&gt;

&lt;p&gt;そこでチームの成熟度と期待役割について共通認識をつくるWorkshopを実施しました。今回はその内容の紹介と、Workshop内で読み合わせたCheatSheetを共有します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#cheatsheetの紹介から&quot; id=&quot;markdown-toc-cheatsheetの紹介から&quot;&gt;CheatSheetの紹介から&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#チームの成熟度目安シート&quot; id=&quot;markdown-toc-チームの成熟度目安シート&quot;&gt;『チームの成熟度目安』シート&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#チームの成熟度に応じた期待役割シート&quot; id=&quot;markdown-toc-チームの成熟度に応じた期待役割シート&quot;&gt;『チームの成熟度に応じた期待役割』シート&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#workshopの流れ&quot; id=&quot;markdown-toc-workshopの流れ&quot;&gt;Workshopの流れ&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#イントロ&quot; id=&quot;markdown-toc-イントロ&quot;&gt;イントロ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step1-成熟度について知る&quot; id=&quot;markdown-toc-step1-成熟度について知る&quot;&gt;Step1. 成熟度について知る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step2-成熟度を測る&quot; id=&quot;markdown-toc-step2-成熟度を測る&quot;&gt;Step2. 成熟度を測る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step3-期待役割と照らし合わせる&quot; id=&quot;markdown-toc-step3-期待役割と照らし合わせる&quot;&gt;Step3. 期待役割と照らし合わせる&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cheatsheetの紹介から&quot;&gt;CheatSheetの紹介から&lt;/h3&gt;

&lt;p&gt;まずはCheatSheetの紹介からします。&lt;/p&gt;

&lt;p&gt;もともとこれを読み物として各チームに共有するつもりだったのですが、読むだけでは理解がはかどらないと思いWorkshop化した経緯があります。ですのでWorkshopで提供するコンテンツの大部分は以下2つのシートになります。&lt;/p&gt;

&lt;h4 id=&quot;チームの成熟度目安シート&quot;&gt;『チームの成熟度目安』シート&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Cheatsheet1.jpg&quot; alt=&quot;『チームの成熟度目安』シート&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;チームの成熟度に応じた期待役割シート&quot;&gt;『チームの成熟度に応じた期待役割』シート&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Cheatsheet2.jpg&quot; alt=&quot;『チームの成熟度に応じた期待役割』シート&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これらを&lt;strong&gt;読み合わせた際に生まれる『コミュニケーション』がWorkshopにおける最大の価値&lt;/strong&gt;となることを意識してWorkshopを設計しました。以下に実際の流れに沿って紹介します。&lt;/p&gt;

&lt;h3 id=&quot;workshopの流れ&quot;&gt;Workshopの流れ&lt;/h3&gt;

&lt;h4 id=&quot;イントロ&quot;&gt;イントロ&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&quot;イントロ&quot; src=&quot;/assets/2025-01-16/Introduction.jpg&quot; style=&quot;border:0.5px solid #CFD8DC;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本記事の冒頭でも述べたように、『個人の期待役割』だけでなく『チームの期待役割』にも向き合う重要性を伝え、Workshopのゴールをすり合わせます。アイスブレイクが必要であればこの前後でやります。&lt;/p&gt;

&lt;h4 id=&quot;step1-成熟度について知る&quot;&gt;Step1. 成熟度について知る&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step1.jpg&quot; alt=&quot;Step1. 成熟度について知る&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CheatSheetの1枚目を使います。&lt;/p&gt;

&lt;p&gt;このシートではチームの成熟度を簡易的に Senior / Middle / Junior の3段階に分けていて、&lt;strong&gt;それぞれの成熟度に到達したチームがどのような状態か&lt;/strong&gt;を表現しています。&lt;/p&gt;

&lt;p&gt;あらかじめ用意している内容は薄く、&lt;strong&gt;参加者の記入をもってCheatSheetとして完成する&lt;/strong&gt;ことを想定しています。たとえば「アウトプットの品質」「ドキュメントの管理状況」「存続期間」「リードタイム」など、様々な観点で成熟度毎の状態を表現できるでしょう。&lt;/p&gt;

&lt;p&gt;メンバー自身がディスカッションを通じてこれを完成させることで、&lt;strong&gt;一人ひとりが持つ「理想的な成熟チームのイメージ」を言語化し認識を合わせる&lt;/strong&gt;ことに役立ちます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&quot;step2-成熟度を測る&quot;&gt;Step2. 成熟度を測る&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step2.jpg&quot; alt=&quot;Step2. 成熟度を測る&quot; /&gt;&lt;/p&gt;

&lt;p&gt;成熟度に応じたチームの姿について共通認識を持てたら、次は自分たちのチームの成熟度がどれくらいかを考えていきます。&lt;/p&gt;

&lt;p&gt;このWorkshopはmiroを使っていて、左側に配置してる『People』コンポーネント上のユーザーアイコンはドラッグ＆ドロップすることができます。「せーの」で数字をいいながら自身のアイコンを右側のエリアにプロットして成熟度の認識を開示し合います。&lt;/p&gt;

&lt;p&gt;自分たちの成熟度を考えるとき「〇〇の場面で△△だったから成熟度nだと考えた」のように具体的なエピソードを思い浮かべることが多いと思います。その内容を付箋に書き出し右側のエリアに貼りながら共有し合います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;具体的なエピソードの共有がWorkshopの要&lt;/strong&gt;で、「どういう行動が称賛されるか」の共通認識づくりに一役買います。チームにジョインして歴の浅いメンバーにとっては、&lt;strong&gt;参考事例を追体験できる機会&lt;/strong&gt;にもなります。&lt;/p&gt;

&lt;p&gt;エピソードの共有を踏まえて、チームの成熟度の共通認識をつくれればStep2は完了です。必ずしも1つの数字を決めきらずとも「〇〇な状況では8だけど、△△のときは5」「人によって見え方は違うけど7〜9あたり」といった具合に曖昧さがあっても良いです。重要なのは&lt;strong&gt;認識を合わせるために議論したという実績&lt;/strong&gt;です。&lt;/p&gt;

&lt;h4 id=&quot;step3-期待役割と照らし合わせる&quot;&gt;Step3. 期待役割と照らし合わせる&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step3.jpg&quot; alt=&quot;Step3. 期待役割と照らし合わせる&quot; /&gt;&lt;/p&gt;

&lt;p&gt;チームの成熟度について共通認識ができたら、最後に成熟度に応じた期待役割を紐解いていきます。CheatSheetでは 『成熟度3段階』×『3つの観点』で期待役割を表現していますが、&lt;strong&gt;会社の方針や組織のミッションによって期待役割は変化するので、Workshop開催前にEM等が自組織に合った内容に書き換えておく&lt;/strong&gt;ことをおすすめしています。&lt;/p&gt;

&lt;p&gt;Workshop参加者は、自分たちのチームの成熟度に合った行を読み合わせます。シートの各項目の達成状況をマルバツ等で表現しても良いでしょう。&lt;/p&gt;

&lt;p&gt;読んでいくと「これはすでにできている」「この行動は意識していなかった」と&lt;strong&gt;チームの強み弱みが浮き彫りになってきます&lt;/strong&gt;。同時にここでも背景にあるエピソードを各自が思い浮かべることになると思うので、付箋に書き出し共有し合います。&lt;/p&gt;

&lt;p&gt;次第に「プロダクト開発はSenior相当にできているが、自律性はMiddleレベルに達していない。だから〇〇をしてみよう」と具体的なアクションの議論が始まるかもしれません。もしくはWorkshop後に個々人が「チームの持続可能性を高めるために〇〇に取り組みします」と個人目標に落とし込むこともあります。&lt;/p&gt;

&lt;p&gt;こういった&lt;strong&gt;行動の変化まで結びつけばWorkshopは120点&lt;/strong&gt;の出来だったと言えます。&lt;/p&gt;

&lt;p&gt;逆にStep1の成熟度に応じたチーム像について何も意見が出ないなど、Workshopのどこかで極端に行き詰まった場合は、「チームメンバーが『チーム』について考える時間を十分に取れていない、チームのモデルケースを見て学ぶ機会がない」と組織課題が浮き彫りになります。&lt;/p&gt;

&lt;p&gt;これはこれでWorkshopの成果と言えるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;実際にチームでやってみて手応えを感じたので、今回共有するに至りました。組織やチームに合わせて多少のアレンジは必要かもしれませんが、ぜひいろいろなチームで試していただきたいです。&lt;/p&gt;

&lt;p&gt;またWorkshopのアップデートは実践を重ねないとできないので、ぜひ実践後のフィードバックを&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までいただければと思います。&lt;/p&gt;</content><author><name></name></author><summary type="html">エンジニア一人ひとりの期待役割がスキルやキャリアにより変化するように、チームも成熟度やフェーズに応じて期待役割が変化します。</summary></entry><entry><title type="html">マネジメントを語るときは具体的で生々しいエピソードを添える</title><link href="https://aloerina01.github.io/blog/2024-12-20-1" rel="alternate" type="text/html" title="マネジメントを語るときは具体的で生々しいエピソードを添える" /><published>2024-12-20T00:00:00+00:00</published><updated>2024-12-20T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-20-1">&lt;p&gt;マネジメントの知見を共有すべくブログを書くとき、その1つ1つに具体的なエピソードを添えることを自分ルールにしています。エピソードにはいくつかの条件を設けています。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;実際に起きた出来事について&lt;/strong&gt;の具体例を出す場合は、多くの現場であるあるな例であり、読者が「たしかに自分もそうなったことあるなぁ」と&lt;strong&gt;実体験に重ねやすい&lt;/strong&gt;ものであること&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;取るべき行動について&lt;/strong&gt;の具体例を出す場合も、多くの現場であるあるな例であり、読者が「こんな場面に出くわしたら真似してみよう」と&lt;strong&gt;実践するイメージを持ちやすい&lt;/strong&gt;ものであること&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;失敗したり恥をかいたりする登場人物は自分だけ&lt;/strong&gt;であること&lt;/li&gt;
  &lt;li&gt;エピソードは&lt;strong&gt;複数&lt;/strong&gt;挙げること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ありがたいことに、ブログを書くと「共感しました」「首がもげそうなくらい頷きました」「同じ状況なので参考にします」等の共感系のコメントをもらうことがあるので、多少は功を奏しているのだと思います。&lt;/p&gt;

&lt;p&gt;一方で具体事例がミスリードになるケースもあるにはあるにはあるのですが、なるべくシチュエーションの違うエピソードを複数挙げることで、その共通項である話の主題に目が向くよう工夫しています。&lt;/p&gt;

&lt;p&gt;それに抽象と具象の行き来はマネジメントに必要なスキルですしね、きっとメリットが勝ると信じています。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;＊ ＊ ＊&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;さて、ここからはなぜ共感を得ることを意識しているかについて語ろうと思います。&lt;strong&gt;私のEMとしての成果や活動の方向性&lt;/strong&gt;について触れます。&lt;/p&gt;

&lt;p&gt;私はマネージャーやスクラムマスターが孤独であることを身をもって知っています。同じ目線で議論やレビューをし合える同僚を社内で見つけることはなかなかに難しいのです。&lt;/p&gt;

&lt;p&gt;社外に目を向ければコミュニティはいくらかあるとは思いますが、マネージャーになったばかりで知見が少なくGiverになれない頃(なれる自信がない頃)は、コミュニティに顔を出してTakerとして振る舞うことに心理的抵抗もありました。もちろん新人を歓迎するコミュニティもあるでしょうが、私自身の性格の問題も相まって参加には至りませんでした。&lt;/p&gt;

&lt;p&gt;目線の合う仲間が身近に少ないこと以外にも、&lt;strong&gt;状況が違うと直面する課題もそれに対するアプローチも全く別のものになるというマネジメント業務の性質&lt;/strong&gt;も、マネージャーの孤独を加速させます。似た境遇で悩んでいる人を探すのに苦労するわけです。&lt;/p&gt;

&lt;p&gt;ですので私は、知見を共有するときには具体的なエピソードを添えて、それに共感してくれる読者の顔(実は身近なマネージャー数名の顔)を想像しながらブログを書いています。&lt;br /&gt;
単にTipsやテクニックを伝えるのではなく、どういうシチュエーションで、どういう意思決定のもと実践に至ったのかを、生々しく伝えたいと思っています。&lt;/p&gt;

&lt;p&gt;多くの人に響くエモさやSNSを沸かす奇抜さはないですが、極小数の似た境遇にいる読者にとって身近で実践的なブログでありたいのです。&lt;/p&gt;

&lt;p&gt;まるで彼らの目の前で実際に試行錯誤する様子を見せるかのように。彼らの壁打ち相手であるかのように。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;＊ ＊ ＊&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;世界のどこかでがんばるEMの壁打ち相手になりたいと思う背景には、マネジメントの成果は&lt;strong&gt;影響力をスケールさせること&lt;/strong&gt;で示せるという考えがあります。&lt;/p&gt;

&lt;p&gt;マネジメントしているエンジニアたちのキャリアが前進し、チームが自律的になり、次のマネージャーが生まれ、チームを引き継ぎ自分は次のチームに向かう。&lt;br /&gt;
そうやってチームを渡り歩きながら、&lt;strong&gt;マネジメント関係が終わった後も活躍し続けられる人やチームを増やしていくこと&lt;/strong&gt;が、私にとって&lt;strong&gt;対外的に見せることのできるマネジメント成果&lt;/strong&gt;なのです。&lt;/p&gt;

&lt;p&gt;もしくはより上位組織のマネジメントにレイヤを移し、複数のマネージャーやチームが生まれる仕組みをつくることでも、私のマネジメントの効力を残すことができるでしょう。&lt;/p&gt;

&lt;p&gt;自分のマネジメントの効力をどこまで広げられるか、言い換えれば、&lt;strong&gt;良い影響を与えることができた人・チーム・組織をどれだけ残せるか&lt;/strong&gt;を追求していくことが当面の私のテーマです。&lt;/p&gt;

&lt;p&gt;もちろん自組織において今現在期待される役割を疎かにするつもりはありませんが、それを全うすると同時に、自分がチームや組織にいなくてもよい状態に着実に近づけることにも意識を向けているということです。&lt;/p&gt;

&lt;p&gt;そしてマネジメント効力は、&lt;strong&gt;ブログを通じてモデルケースを見せる&lt;/strong&gt;ことによって、自分とは直接関わりのないEMにもほんの少しではありますが届けられるのではと考えています。これが読者の目に生々しく姿を描いてもらえるような具体的エピソードを添える理由でした。&lt;/p&gt;

&lt;p&gt;この記事も、たった1人でいいのでどなたかの役に立てれば嬉しい限りです。&lt;/p&gt;</content><author><name></name></author><summary type="html">マネジメントの知見を共有すべくブログを書くとき、その1つ1つに具体的なエピソードを添えることを自分ルールにしています。エピソードにはいくつかの条件を設けています。</summary></entry><entry><title type="html">“頼んだのにやってくれない” “相談にもきてくれない”の処方箋</title><link href="https://aloerina01.github.io/blog/2024-12-11-1" rel="alternate" type="text/html" title="“頼んだのにやってくれない” “相談にもきてくれない”の処方箋" /><published>2024-12-11T00:00:00+00:00</published><updated>2024-12-11T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-11-1">&lt;p&gt;部下や後輩に仕事を依頼する立場を経験すると、1度くらいは&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;頼んだ仕事を進めてくれない&lt;/li&gt;
  &lt;li&gt;一緒に計画を立てたりタスク分解しても進捗が出ない&lt;/li&gt;
  &lt;li&gt;「やり方が分からないときは聞きに来てください」と伝えたけど相談にきてくれない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんてことを経験するかもしれません。自分からいろいろ歩み寄っているつもりなのに相手がうまく仕事をこなしてくれない、という状況です。&lt;/p&gt;

&lt;p&gt;今回はこういったシチュエーションとどう向き合うかの私なりの考え方を書くわけですが、大前提として人に仕事を任せる時間的余裕・精神的余裕がある状況を想定しています。&lt;/p&gt;

&lt;p&gt;部下や後輩に任せるということは、自分がやったほうが早く上手に終えられる可能性や、任せた相手が失敗する可能性があることを承知していて、加えて実践経験から学びを得ることを期待している状況だと思います。&lt;/p&gt;

&lt;p&gt;逆に猫の手も借りたいようなサバイバルフェーズで新しいエンジニアをチームに迎え入れて、ろくなオンボーディングもなしに「頼んだ仕事をやってくれない！」と嘆くのはさすがに自分勝手な言い分ですしね。&lt;/p&gt;

&lt;p&gt;では参ります。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋1-相手を意図通りに動かそうとするのをやめる&quot; id=&quot;markdown-toc-処方箋1-相手を意図通りに動かそうとするのをやめる&quot;&gt;処方箋1: 「相手を意図通りに動かそうとする」のをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋2-やる気がないと決めつけるのをやめる&quot; id=&quot;markdown-toc-処方箋2-やる気がないと決めつけるのをやめる&quot;&gt;処方箋2: 「やる気がない」と決めつけるのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot; id=&quot;markdown-toc-処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot;&gt;処方箋3: 「全ての行動は明快な理屈に基づいている」と思い込むのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot; id=&quot;markdown-toc-処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot;&gt;処方箋4: 「自分のちからで解決できるはず」と思い込むのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#まとめ&quot; id=&quot;markdown-toc-まとめ&quot;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;処方箋1-相手を意図通りに動かそうとするのをやめる&quot;&gt;処方箋1: 「相手を意図通りに動かそうとする」のをやめる&lt;/h3&gt;

&lt;p&gt;いきなりガッカリする結論を、しかし今回の話の根幹になる結論を言いますと&lt;strong&gt;「相手に仕事をしてもらう」ための処方箋は存在しません&lt;/strong&gt;。&lt;strong&gt;あるのは「自分がどう向き合うか」の処方箋だけ&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;どんなに自分が正しいと感じていたとしても、どんなに相手が不適切な行動をしていたとしても、一方的に相手の考えや行動を変える解決策は存在せず、変えられるのは「自分が相手をどのように捉えているか」である、とはよく言われます。言い換えると「&lt;strong&gt;相手との関係性&lt;/strong&gt;」を変えるということです。&lt;/p&gt;

&lt;p&gt;相手を『怠慢』や『無能』と捉え行動を変えさせようとすることが関係性を悪化させて負の循環に迷い込む要因となることがあるので、それを防ぎ、ゆるやかに良い関係を導き、いずれ状況が良くなることを期待するような&lt;strong&gt;根本治療こそが、この状況でできる唯一の手段&lt;/strong&gt;だと考えています&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;処方箋2-やる気がないと決めつけるのをやめる&quot;&gt;処方箋2: 「やる気がない」と決めつけるのをやめる&lt;/h3&gt;

&lt;p&gt;相手の行動が不適切であり、修正するよう指示をしても修正が見て取れないとき、相手に「やる気がない」と決めつけないよう注意が必要です。&lt;/p&gt;

&lt;p&gt;相手の思考や感情を決めつけた上でのコミュニケーションは、それが間違っていたときに状況を大きく悪化させてしまいます(仮に決めつけた通りであったとしても相手にとって気持ちの良い会話にはなり得ません)。&lt;/p&gt;

&lt;p&gt;例えば相手は体調が悪く、しかしそのことを知られたくなくて無理している状況だとします。「無理をしてがんばっているが、仕事が完遂できていない」状況です。このときに「やる気がない」と決めつけたコミュニケーションを取れば、がんばろうとしていた相手の気持ちをどれだけひどく打ち砕くことになるかは想像に難くないでしょう。&lt;/p&gt;

&lt;p&gt;相手が真に何を考えているか、どんな意図があるかは分かりません。あるのは「私の目に相手がどう写っているか」という”主観的な観測”だけです。&lt;br /&gt;
&lt;strong&gt;相手の意図を知らなくても知っていると思い込み、さらにその意図が悪いものであると決めつけてしまうのは、よくある過ちです&lt;/strong&gt;。相手の意図を勝手に作り出さず、理解する姿勢で向き合うのが関係性を変える一歩目です。&lt;/p&gt;

&lt;h3 id=&quot;処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot;&gt;処方箋3: 「全ての行動は明快な理屈に基づいている」と思い込むのをやめる&lt;/h3&gt;

&lt;p&gt;これまでの処方箋にのっとり、相手のやる気や意図を決めつけず「きっと何らかの理由があるはずだ」と性善説的に事態を受け止め、その解消に勤しむことで状況が好転することもあります。&lt;/p&gt;

&lt;p&gt;しかしそれでも解決に近づかない場合、&lt;strong&gt;次にやめるべきことは「相手の全ての行動には理由があり自分が気付けていない論理的な背景がある」と思い込むこと&lt;/strong&gt;です。具体的に言うと&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;やり方が分かれば、仕事を進めてくれるはずだ&lt;/li&gt;
  &lt;li&gt;質問していいよといえば、質問にくるはずだ&lt;/li&gt;
  &lt;li&gt;時間を確保して問いかければ、困っていることを打ち明けてくれるはずだ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった思い込みから脱却しようということです。&lt;/p&gt;

&lt;p&gt;では理屈ではない何が行動の背景にあるのでしょうか。私は&lt;strong&gt;『気持ち』&lt;/strong&gt;に着目します。&lt;/p&gt;

&lt;p&gt;例えば相談しない理由は「あなたを信用していないから」もしくは「信用したくないから」という気持ちが根底にあるかもしれません。仕事を進めない理由は「納得いかないから」かもしれません。「なんか気に食わないから」なんてこともあり得ます。&lt;/p&gt;

&lt;p&gt;人間ですから、そういうことはあります。「仕事なんだから嫌でもやれ」と思うかもしれませんが、「仕事ならば嫌でもやるはずだ」という思い込みもこの状況では役に立ちません。&lt;/p&gt;

&lt;p&gt;では気持ちに着目して、どういう手を打てるのかと言うと、ほとんどやれることはありません。&lt;br /&gt;
粘り強く向き合って信頼関係を築くしかないですが、すでに拒否反応が出ている場合はなかなか態度を変えてくれないこともあるでしょう。人間ですから。&lt;/p&gt;

&lt;p&gt;ですので、こうなる前に、仕事を初めて依頼するときにから、顔を合わせて最初の一言目の会話をするときから、「&lt;strong&gt;私はあなたを信用したいと思っている。これから良い関係を築きたいと思っている。そのための努力をする気がある&lt;/strong&gt;」ということをコミュニケーションの中で示していくしかないでしょう。&lt;/p&gt;

&lt;p&gt;つまり&lt;strong&gt;『気持ち』に着目するのは問題が起きてからではなく、相手と関係を築く一番最初から&lt;/strong&gt;というわけです。当たり前といえば当たり前なんですが、往々にして仕事の場では感情を無視してまるで双方がロボットであるかのように指示と応答をするだけのコミュニケーションが発生したりします。&lt;/p&gt;

&lt;h3 id=&quot;処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot;&gt;処方箋4: 「自分のちからで解決できるはず」と思い込むのをやめる&lt;/h3&gt;

&lt;p&gt;いよいよ元も子もなくなってきましたが、ここまで書いたことをすべて意識して取り組んできても、やっぱり何度言っても期日までにタスクを終えてくれない……なんてことは起きます。繰り返し起きます。&lt;/p&gt;

&lt;p&gt;原因を探求すればキリがないですし、医学的な要因に依ることもあります。そしてそれを知ったところで自分にはどうにもできません。&lt;/p&gt;

&lt;p&gt;なので&lt;strong&gt;「仕事をやってくれない」という事象を自分の力で解決することを諦め、どのような仕事だったらやれるのかを一緒に探す&lt;/strong&gt;よう切り替えが必要なときもあります。&lt;/p&gt;

&lt;p&gt;少なくとも、自分たちで採用しチームに受け入れたメンバーであればその人が成し遂げてきた実績を知っているはずですし、採用の過程で見つけた魅力や長所もあるはずです。それを活かす方法を探すよう舵を切ることも時には必要です。&lt;/p&gt;

&lt;p&gt;ここまでの内容を整理すると、処方箋1〜3は症状を予防するための生活習慣改善で、症状に対する本当の処方が処方箋4の内容になるとも言えますね。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;長くなったのでまとめると&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「相手を変えようとする」のではなく、私自身の「相手の捉え方」を変える&lt;/li&gt;
  &lt;li&gt;相手の意図を決めつけない&lt;/li&gt;
  &lt;li&gt;仕事の会話であっても双方の『気持ち』を軽視しない&lt;/li&gt;
  &lt;li&gt;問題の原因を取り払うのではなく、問題を回避する方法にも目を向ける&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったアプローチを紹介しました。&lt;/p&gt;

&lt;p&gt;先述のとおり、日常生活で発生するコミュニケーションにおいてはどれも当たり前のことなのですが、仕事の場となるとつい&lt;strong&gt;人間的な背景・関係性・感情&lt;/strong&gt;など見落としてしまうことがあり、自分も時間をかけて矯正した部分です。&lt;/p&gt;

&lt;p&gt;おそらく今現在問題に直面していて、その解決法を得たくてこの記事を読んでくれた方にとっては、即効性がなくガッカリする内容だったかもしれません。その点では申し訳なさもありますが、&lt;strong&gt;時間をかけることでしか解消し得ない問題&lt;/strong&gt;なのだと改めて知る機会にしていただければ幸いです。&lt;/p&gt;

&lt;p&gt;思ったより融通が効かず、理屈では動かず、筋が通っていないのが私たち人間です。こんな記事を書きながらもまだまだ上手くできないことの多い私ですが、これからも人間らしさに向き合いながら知見を書き残していこうと思います。&lt;/p&gt;</content><author><name></name></author><summary type="html">部下や後輩に仕事を依頼する立場を経験すると、1度くらいは</summary></entry><entry><title type="html">ファシリテーションの細かい意識の使い分け - Daily Standup 編</title><link href="https://aloerina01.github.io/blog/2024-12-02-1" rel="alternate" type="text/html" title="ファシリテーションの細かい意識の使い分け - Daily Standup 編" /><published>2024-12-02T00:00:00+00:00</published><updated>2024-12-02T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-02-1">&lt;p&gt;私がエンジニアリングマネージャーとしてミーティング等をファシリテーションするとき、その内容に関わらず共通して意識していることがあります。そしてディテールを見れば意識やテクニックを使い分けている部分があります。それらの言語化にトライしてみようと思います。&lt;/p&gt;

&lt;p&gt;ボリュームが出そうなので何本かの記事に分けて書きます。今回はその第1段です。&lt;/p&gt;

&lt;h3 id=&quot;どのミーティングにも共通して意識することまたはemがファシリテーションをする重要な理由&quot;&gt;どのミーティングにも共通して意識すること、またはEMがファシリテーションをする重要な理由&lt;/h3&gt;

&lt;p&gt;ミーティングの成功という目先の結果だけでなく、&lt;strong&gt;その場での経験がメンバーの関係性、習慣、文化に良い影響を与え、未来の変化の材料となること&lt;/strong&gt;を意識します。&lt;/p&gt;

&lt;p&gt;ファシリテーション時の意識を大雑把に分ければ、&lt;strong&gt;①ミーティングを成功させるための意識、②チームが変化していくための布石を打つ意識&lt;/strong&gt;、の2つが存在するということです。
特に後者はEMの役割と密接に関わりますし、チームの将来像を見据えてるEMだからこそ持てる意識だと思います(スクラムチームであればスクラムマスターが同様のことを考えることになると思います)。&lt;/p&gt;

&lt;p&gt;この一連の記事で取り扱うのは②になります。&lt;br /&gt;
①については過去に&lt;a href=&quot;https://aloerina01.github.io/blog/2020-04-16-1&quot; target=&quot;_blank&quot;&gt;レトロスペクティブのファシリテーションガイド&lt;/a&gt;にまとめたことがあるので、よければ併せてご参照ください。&lt;/p&gt;

&lt;h3 id=&quot;daily-standup-で垣間見える自責思考に向き合う&quot;&gt;Daily Standup で垣間見える自責思考に向き合う&lt;/h3&gt;

&lt;p&gt;Daily Standup のファシリテーションでは、チームメンバーの意識の向き先を「個々人の成果」から「チームの成果」に変えるために、考え方の癖の修正してもらうことを意識します。具体例から説明します。&lt;/p&gt;

&lt;p&gt;多くの良心的なメンバーには責任感があり、自責思考が備わっています。分かりやすいであろう事例は「自分の失敗は自分で取り返さねば」という行動です。「思ったより進捗が出ずに遅れが発生し、しかしまだ自分が残業してがんばれば計画通りのペースを取り戻せそうだ」という場面で「今日中に終わらせます」と言ってしまう経験は、エンジニアなら誰でも想像できるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;もちろん責任感が強いの素晴らしいことですが、&lt;strong&gt;もしその遅れがチームにとって致命的であれば、チームの総力をもって解決するほうが良いはず&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;完了できずにいるタスクがチームにとって最優先の仕事であるなら、他のタスクが予定通りに終わっていたとしても、チームの成果としては「一番大事な仕事が終わっていない」となります。それはタスクを終えられなかった個人だけの問題ではなく、「最優先の仕事の進捗よりも優先順位の低い仕事の進捗を優先したチームの判断が間違い」だと捉えられます。&lt;/p&gt;

&lt;p&gt;視野をチームの外に広げて、ステークホルダーの目線で考えてみると「チームの&lt;strong&gt;誰が&lt;/strong&gt;遅れを生んだか」よりも「&lt;strong&gt;チームは&lt;/strong&gt;仕事を優先順位の沿って成し遂げたか」のほうが重要であることが想像できると思います。&lt;/p&gt;

&lt;p&gt;今回は具体例として『遅れ』にフォーカスしましたが、成果をより良くする場面においても考え方は同様です。&lt;strong&gt;主語を『私』から『チーム』に変えて、チームが完遂すべき仕事の優先順位に基づいて個々人のタスクを進行すべきです&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;そのためにDaily Standup を実施しているはずですが、この考え方を定着させる際に自責思考の癖の修正が必要になることがあり、そこでファシリテーションの出番です。&lt;/p&gt;

&lt;h3 id=&quot;ファシリテーションで自責思考を軌道修正する&quot;&gt;ファシリテーションで自責思考を軌道修正する&lt;/h3&gt;

&lt;p&gt;キッパリと考え方を切り替えてもらうように単刀直入な問いかけを利用します。&lt;/p&gt;

&lt;p&gt;先述のような「計画に対する遅れ」の議論をファシリテーションする場合は、例えば以下のような質問を使います。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;話題に上がっている問題はチームにとってどの程度の優先順位ですか？&lt;/li&gt;
  &lt;li&gt;その問題の原因分析にどれだけ時間を割きますか？　今イテレーションに残された時間や仕事の優先順位と比較して判断してください&lt;/li&gt;
  &lt;li&gt;話題に上がっている問題の解決をチームの最優先事項として取り組む場合、誰が何をすると良さそうですか？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「チームの中の誰が責任をとるか」の考え方から「チームの成果を最大にするために何をするか」の考え方へシフトさせるための直接的な問いかけを意識します。&lt;/p&gt;

&lt;p&gt;(今後の記事で紹介する予定の)別のミーティングの事例では、チームメンバーの考え方を尊重しつつ緩やかに変化を起こすような問いかけを使うこともありますが、今回のように考え方をガラッと変えること狙うときは直接的な問いかけをするようにしています。&lt;/p&gt;

&lt;h3 id=&quot;いつも特定の人が遅れる場合は&quot;&gt;いつも特定の人が遅れる場合は&lt;/h3&gt;

&lt;p&gt;そうは言っても、「いつも遅れる人がいる」「全然責任感がない人がいる」など、今回紹介したファシリテーションの意識をすんなり受け入れられないチーム事情もあると思います。&lt;/p&gt;

&lt;p&gt;すべての事例に解答を持っているわけではないですが、いくつかのアプローチを添えて補足とします。&lt;/p&gt;

&lt;p&gt;ジュニアなエンジニアやジョインして間もないエンジニアが、他のメンバーに比べて知識や経験が浅いために計画の精度が低く、結果遅れが生じる場面はしばしばあると思います。&lt;br /&gt;
それに備えるには、&lt;strong&gt;チームは最初から「計画が変更になる前提」でいる&lt;/strong&gt;と良いです。最初につくった計画の精度は40％程度であると捉え、まずは1日手を動かしてみてその実践を材料に計画を修正することを、あらかじめ計画しておきます。&lt;/p&gt;

&lt;p&gt;ここまで読んでAgile 開発経験値の高い人は気付いていると思いますが、Daily Standup の本来の使い方がこれです。&lt;strong&gt;進捗を元に計画の見直しをすることが本来の目的&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;ですので、既にこれは実践しているけれどそれでも遅れ続けている人に困っている事例に対し別の選択肢を提案するなら、&lt;strong&gt;ペアアサイン&lt;/strong&gt;はいかがでしょうか。見積もりが上手い人や、そのタスクへの適正が高い人、仕事の進め方が上手い人などとペアアサインすることで&lt;strong&gt;仕事の仕方を学ぶ機会が増え、同時にそれまでの遅れの原因を発見できる可能性がある&lt;/strong&gt;からです。&lt;/p&gt;

&lt;p&gt;それさえも有効打にならず遅れ続ける人がいる場合、その人の適正の問題やチームメンバーとの関係性の問題などを考えるようにしています。少なくともその人が&lt;strong&gt;故意に遅れているはずはない&lt;/strong&gt;ですし、自分たちが採用して受け入れた人であれば&lt;strong&gt;能力が劣っているはずもありません&lt;/strong&gt;(可能性の話をすれば悪意や能力不足の可能性もゼロではないですが、疑わずに信じることができなければそもそもチームとして破綻しています)。&lt;br /&gt;
&lt;strong&gt;チームメンバーには能力があり、タスクを完遂したい気持ちも責任感もあり、その上で遅れが生じる何らかの要因があると捉え、根気強く原因切り分けをしていくことが重要です&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;今回はDaily Standup のファシリテーション経験を思い出しながら書きました。&lt;/p&gt;

&lt;p&gt;チームメンバーの意識の向き先を「個々人の成果」から「チームの成果」に変えることになぜこんなにもこだわるかと言うと、&lt;strong&gt;その先に自律的なチーム、自己組織化されたチームがある&lt;/strong&gt;と考えているからです。チームが変化していくための布石を打つのは、変化の先にある自律的なチーム像を描き、そこに至るためのステップとしての行動というわけです。&lt;/p&gt;

&lt;p&gt;今後は「ふりかえり」「課題バックログのリファインメント」「チームビルディング系ワークショップ」などのファシリテーションについて書こうと思いますが、他にも聞いてみたい事例があればぜひ&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までご連絡ください。どなたでも大歓迎です。&lt;/p&gt;</content><author><name></name></author><summary type="html">私がエンジニアリングマネージャーとしてミーティング等をファシリテーションするとき、その内容に関わらず共通して意識していることがあります。そしてディテールを見れば意識やテクニックを使い分けている部分があります。それらの言語化にトライしてみようと思います。</summary></entry><entry><title type="html">5年分のマネジメント経験から生まれた実践的フィードバックの型</title><link href="https://aloerina01.github.io/blog/2024-11-06-1" rel="alternate" type="text/html" title="5年分のマネジメント経験から生まれた実践的フィードバックの型" /><published>2024-11-06T00:00:00+00:00</published><updated>2024-11-06T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-11-06-1">&lt;p&gt;私がEMとしてメンバーと向き合うときは「&lt;strong&gt;彼らのポテンシャルやエネルギーを100％発揮できる状態をつくれているか&lt;/strong&gt;」と考えることを心がけています&lt;strong&gt;。『観察』と『フィードバック』&lt;/strong&gt;はこれを実現するための最も大事な手段といえます。&lt;/p&gt;

&lt;p&gt;ここ最近の自分自身のマネジメント業務を振り返ってみると、『フィードバック』のほうはある程度の型ができていると感じます。ベースとなる型があって、それをチームメンバーや状況によってアレンジしながら使っている感覚です。&lt;/p&gt;

&lt;p&gt;そこで今回は私が5年間のマネジメント業務経験で培ってきたフィードバックの型を紹介してみます。世の中には数々のフィードバック方法論があるので体系的な知識はそれらに任せて、ここではより実践値の高い具体的な手法をお伝えします。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#前提---フィードバックのタイミング&quot; id=&quot;markdown-toc-前提---フィードバックのタイミング&quot;&gt;前提 - フィードバックのタイミング&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#観点1現在の期待役割とその達成度&quot; id=&quot;markdown-toc-観点1現在の期待役割とその達成度&quot;&gt;観点1　「現在の期待役割とその達成度」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#観点2一歩先の期待役割と伸びしろ&quot; id=&quot;markdown-toc-観点2一歩先の期待役割と伸びしろ&quot;&gt;観点2「一歩先の期待役割と伸びしろ」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#観点3成果の価値の掘り下げ&quot; id=&quot;markdown-toc-観点3成果の価値の掘り下げ&quot;&gt;観点3「成果の価値の掘り下げ」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#観点4強み&quot; id=&quot;markdown-toc-観点4強み&quot;&gt;観点4「強み」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#観点5挑戦機会&quot; id=&quot;markdown-toc-観点5挑戦機会&quot;&gt;観点5「挑戦機会」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;前提---フィードバックのタイミング&quot;&gt;前提 - フィードバックのタイミング&lt;/h3&gt;

&lt;p&gt;人事評価の時期にはこのあと紹介するフィードバックの観点のすべてを整理し伝えますが、1on1等日々のコミュニケーションの中でも伝えられる内容があるときはすぐ伝えます。言い換えると、&lt;strong&gt;日々の小さなフィードバックを収集して体系化したものが人事評価のタイミングでのフィードバックとなる&lt;/strong&gt;ので、受け取ったメンバーが「半期が終わって評価のタイミングで突然思いも寄らないフィードバックを伝えられた」とはならないはずです。 ……ならないよう心がけています。&lt;/p&gt;

&lt;p&gt;「フィードバックはナマモノ」と言われたりもしますが、&lt;strong&gt;マネージャーとメンバーとの間で期待役割や評価の認識がズレない状態を維持すること&lt;/strong&gt;がフィードバックにおいて最も重要だと考えています。&lt;/p&gt;

&lt;h3 id=&quot;観点1現在の期待役割とその達成度&quot;&gt;観点1　「現在の期待役割とその達成度」&lt;/h3&gt;

&lt;p&gt;期待役割と、現時点でそれをどれほど達成できているかを伝えます。&lt;br /&gt;
グレード、担当業務、職種、スキルなど様々な要因で期待役割は決まりますが、&lt;strong&gt;マネージャーはメンバー一人ひとりの期待役割を解像度高く理解し、彼らにその解像度を共有すること&lt;/strong&gt;が必要です。そしてその期待値をどれだけ満たしているかを併せて伝えることで、メンバーは「今の働き方を継続していこう」「足りない〇〇を意識するよう軌道修正しよう」と日々の行動を修正する指針を得られます。&lt;/p&gt;

&lt;p&gt;期待役割は『やってほしいタスク』ではなく、&lt;strong&gt;ふるまい、責任、成果、インパクト&lt;/strong&gt;等で伝えます。&lt;br /&gt;
これらを伝える際、&lt;strong&gt;ジュニアなエンジニアほど具体的に、シニアなエンジニアほど抽象的に&lt;/strong&gt;伝えることになります。ジュニアメンバーはいわゆる一人前と呼ばれる共通の水準に到達するための段階的な期待役割が設定されることが多いので内容が具体的になりやすく、シニアになるほど「エンジニアリングを通じて事業目標に貢献する」などの抽象度の高い成果が期待されることが増えるからです。&lt;/p&gt;

&lt;p&gt;この観点でのフィードバックの要は、&lt;strong&gt;評価者である自分と被評価者であるメンバーとで、期待役割と現在地についてどれだけ高解像度に目線合わせできるか&lt;/strong&gt;です。そのためにはまずマネージャー自身が解像度を上げる必要があります。&lt;br /&gt;
会社や部署の評価基準が曖昧なままであったり、全社共通のグレード毎の期待役割が抽象的過ぎたりする場合は、それらを掘り下げることが必要になるでしょう。その場合マネージャーひとりでは解決できないですし、ましてやチームメンバー自身で解決するのは不可能なので、有識者や意思決定者を巻き込んで期待役割の掘り下げをすることが最初の一歩となるかもしれません。&lt;/p&gt;

&lt;h3 id=&quot;観点2一歩先の期待役割と伸びしろ&quot;&gt;観点2「一歩先の期待役割と伸びしろ」&lt;/h3&gt;

&lt;p&gt;現在の期待役割と併せて伝えるべき2つ目の観点が、&lt;strong&gt;次の段階のキャリアで求められる期待役割&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;自分自身がチームに属するいちエンジニアとして働いていた頃、あと何をがんばれば自分の評価が伸びるのか、新しい仕事を任せてもらえるのか、より裁量が与えられるのかが分からず悩んだことがあります。この要因は次のステップでの期待役割を理解していなかったこと、ひいては&lt;strong&gt;現状と次ステップとの差分を測れていなかった&lt;/strong&gt;ことにあります。&lt;br /&gt;
この例のように、キャリアアップの伸びしろを示すことが、メンバーが持つエネルギーを適切な方向に放出させることに役立つ場面があります。&lt;strong&gt;努力の方向性を間違えさせない環境づくり&lt;/strong&gt;とも言えます。&lt;/p&gt;

&lt;p&gt;この観点をフィードバックする際に私が気をつけていることは、現状との差分、つまり伸びしろを伝えるようにし、伸びしろを埋める行動はメンバー自身に考え実行してもらうようにすることです。例えば先述した「一人前のエンジニアになること」が次のステップである場合、&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;任された案件の進行中に仕様漏れや見積もりミスなどの問題が発生しても、関係者とともに軌道修正しながら完遂することを期待しています。すでにトラブルのない案件は滞りなく進行できているので、軽微かつ頻出な問題が発生した際にも進行できることで『一人前』の水準に近づきます。&lt;/p&gt;

  &lt;p&gt;他にも、任された案件をこなすだけでなく、プロダクトやチームの課題を自ら見つけ解決に取り組むなどの自主的な行動も一人前のエンジニアに求められる期待役割です。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;といった具合にフィードバックします。『一人前』という期待役割の解像度を上げ複数の視点で伸びしろを伝え、&lt;strong&gt;メンバー自身が差分を埋める具体的な行動を判断し実行すること&lt;/strong&gt;が、彼らのポテンシャルを引き出すことに繋がると信じているからです。&lt;br /&gt;
もちろん行動が思いつかないようであれば具体例を出すこともありますが、メンバー自身が考える余地を残すことに意味があります。&lt;/p&gt;

&lt;p&gt;ところでここで言う『一歩先』とは必ずしも次のグレードを指すわけではありません。メンバー一人ひとりの成長速度や直面する障壁の難易度などによって変わります。「各メンバーが次のフェーズにステップアップするためにどのような階段を登るだろうか」と考えながら、&lt;strong&gt;メンバーによっては1段ずつであったり2段飛ばしであったりと適切な『一歩先の階段』&lt;/strong&gt;をフィードバックするよう意識しています。&lt;/p&gt;

&lt;h3 id=&quot;観点3成果の価値の掘り下げ&quot;&gt;観点3「成果の価値の掘り下げ」&lt;/h3&gt;

&lt;p&gt;メンバーが出した成果にどのような価値があるかを様々な視点から伝えます。&lt;/p&gt;

&lt;p&gt;あるメンバーが「既存のプロダクトにTypeScriptを導入しました。開発スピードが上がり、QA時のバグも減りました」と自身の成果を捉えていたとします。しかしこの成果には他の側面でも価値があります。たとえば&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;今まで通り開発案件をこなしながらTS導入の時間を捻出しやり遂げたことは、開発リードタイムの短縮や効率化など業務改善の成功事例という側面があります&lt;/li&gt;
  &lt;li&gt;デグレを起こすことなく既存のコードをTS化した開発プロセスそのものに価値があります&lt;/li&gt;
  &lt;li&gt;チームメンバー間でTSの技術レベルの差がありながらも導入し、その後もチームのベロシティが落ちていないことから、チームの技術力を底上げする工夫がなされていることが読み取れます&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった具合に様々な側面から成果を捉え、本人が気づいていない価値をフィードバックします。&lt;/p&gt;

&lt;p&gt;加えて、その&lt;strong&gt;成果が期待役割に噛み合っているか&lt;/strong&gt;を伝えること重要です。たとえばジュニア寄りのエンジニアが上述の成果を上げたのであれば「自主的な改善活動は期待に沿う成果です」となるかもしれませんし、シニアエンジニアであれば「その活動が事業に与える効果をステークホルダーに説明するところまでやり遂げることを期待しています」となるかもしれません。これは観点1の『現状の期待役割に対する達成度』のフィードバックとも言えますね。&lt;/p&gt;

&lt;h3 id=&quot;観点4強み&quot;&gt;観点4「強み」&lt;/h3&gt;

&lt;p&gt;多くのマネージャーがすでにしていることと思いますが、マネージャーが観測した強みを伝えることも重要です。これは言葉の通りなのでこれ以上の説明はないですが、私が意識していることは、&lt;strong&gt;1度伝えた内容であってもその強みが見られる事例があった際には何度でも伝える&lt;/strong&gt;ことです。&lt;/p&gt;

&lt;p&gt;強みとは、言い換えれば「苦労したとは思ってないのに人よりうまく出来ていること、評価されていること」だと思います。人より簡単にできてしまうことを特別なスキルや長所だと自覚するのは案外難しかったりするので、繰り返し何度でも伝えようと心がけています。&lt;/p&gt;

&lt;h3 id=&quot;観点5挑戦機会&quot;&gt;観点5「挑戦機会」&lt;/h3&gt;

&lt;p&gt;ここまで紹介した観点1〜4を踏まえて、挑戦機会を提供します。&lt;br /&gt;
メンバーの次のステップの期待役割と現在地との差分を明らかにし、伸びしろを埋めていくためにどんな強みを生かしてどんな挑戦をすると良いかを計画し、日々のマネジメント活動(EMとしてのあらゆる活動)を通じて挑戦機会を見つけてフィードバックします。&lt;/p&gt;

&lt;p&gt;『挑戦』というと目新しい仕事に目が行きがちですが、長く続けている業務の中にも挑戦できるポイントは潜んでいます。もちろん最適な挑戦機会がすぐに見つからない状況もありますが、挑戦機会が必要になって初めて探すこととならないよう、&lt;strong&gt;メンバー各々に対する観点1〜4を頭の中に描きアップデートし続け、適切な挑戦機会を日々探し続けておくこと&lt;/strong&gt;が大切です。&lt;br /&gt;
「今の仕事に飽きてしまったし成長を実感できないので転職を考えています」と打ち明けられてから挑戦機会を探すのでは遅い……ということはマネジメントをしている方々には想像に難くないと思います。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;実践しているフィードバックのうちベースとなる部分を整理して紹介してみました。&lt;br /&gt;
繰り返しになりますが、「フィードバックをしよう」と思ってからこれらの観点について考え始めても手遅れになってしまうので、常にメンバー一人ひとりと各観点を同期し続け、自分と近い解像度を維持してもらうことを意識しながらフィードバックし続けることが重要です。そしてそのためには常に観察し続けることもセットで必要になります。&lt;/p&gt;

&lt;p&gt;私の職場環境だから成り立っている内容も多分にあったかもしれませんが誰かの役に立てれば嬉しいですし、そうでなくとも数年後自分自身で読み返してレベルアップを実感できれば良いなと思って書きました。&lt;/p&gt;

&lt;p&gt;思ったより長くなってしまいました。ここまで読んでくれた方はどうもありがとうございました。&lt;/p&gt;</content><author><name></name></author><summary type="html">私がEMとしてメンバーと向き合うときは「彼らのポテンシャルやエネルギーを100％発揮できる状態をつくれているか」と考えることを心がけています。『観察』と『フィードバック』はこれを実現するための最も大事な手段といえます。</summary></entry><entry><title type="html">“ペイン”と”チャレンジ”に注目して改善サイクルを生み出すふりかえりフレームワーク</title><link href="https://aloerina01.github.io/blog/2024-06-14-1" rel="alternate" type="text/html" title="&quot;ペイン&quot;と&quot;チャレンジ&quot;に注目して改善サイクルを生み出すふりかえりフレームワーク" /><published>2024-06-14T00:00:00+00:00</published><updated>2024-06-14T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-06-14-1">&lt;p&gt;KPTを継続していたものの意見が出にくくなったりTryが実行されなくなったり…といったマンネリ化や改善サイクルの停滞はどのチームも1度くらいは体験するのではないでしょうか。そんなときはふりかえりの方法を少し変えて刺激を得ることが有効な手段のひとつです。&lt;/p&gt;

&lt;p&gt;新しいふりかえり方法は&lt;a href=&quot;https://amzn.to/3xkFIen&quot; target=&quot;blank&quot;&gt;アジャイルレトロスペクティブズ&lt;/a&gt;などから探すこともできますし、もっと自由に、議論したい切り口や進め方を自分たちで考えることもできます。今回は私が関わるチームで実践しているオリジナルの方法を紹介します。&lt;/p&gt;

&lt;h3 id=&quot;コンセプト&quot;&gt;コンセプト&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-06-14/thumbnail.jpg&quot; alt=&quot;&quot; /&gt;
ふりかえり実践イメージ&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;やりなれたKPTから大きく変えず、少しだけ変化させてマンネリ解消する方法であること&lt;/li&gt;
  &lt;li&gt;チームメンバーが感じる不満やアイデアを集めやすい方法であること&lt;/li&gt;
  &lt;li&gt;次のアクションを可視化し、完了までトラッキングできる仕組みであること&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;テンプレートの紹介&quot;&gt;テンプレートの紹介&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-06-14/template.jpg&quot; alt=&quot;ふりかえりテンプレート&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;ペイン&quot;&gt;“ペイン”&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;今イテレーションで困ったこと、苦労したこと、課題に感じていること&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;「〜がしんどかった」「〜で困った」「〜は良くないと思う」と主観的な感情に注目して書き出します。根拠や論理はいらず、気持ちを吐き出すことが大事です。&lt;/p&gt;

&lt;h4 id=&quot;チャレンジ&quot;&gt;“チャレンジ”&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;新しく試してみたいこと&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ペインに対するアイデアでもいいですし、技術的にチャレンジしたいことでもいいです。エンジニアならエンジニアとしての欲求を、PMならPMとしての欲求を素直に書きます。&lt;/p&gt;

&lt;h4 id=&quot;議論中&quot;&gt;“議論中”&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;ペイン・チャレンジの中から選ばれた深堀りしていくトピック&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;このテンプレートは毎イテレーションで意見や議論を継ぎ足ししながら使っていくことを想定しています。1度のミーティングで結論が出なかったものや、ふりかえり後に検証や作業をした後に次回のミーティングで継続して議論したいなど、トピック毎の議論のステータスを表現するエリアです。&lt;/p&gt;

&lt;h4 id=&quot;アクション&quot;&gt;“アクション”&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;次のふりかえりまでに実践するアクション&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ペインとチャレンジは個人の感情や意欲から意見を集めましたが、アクションはチームで議論ながら出していきます。アクションにはいくつかルールがあります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;次回のふりかえりまでに完了できる小さいサイズ&lt;/strong&gt;であること&lt;/li&gt;
  &lt;li&gt;誰が見ても達成したかどうか判断できる&lt;strong&gt;具体的な達成基準&lt;/strong&gt;が書かれていること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この2つを満たすアクションを議論しながら探していきます。アクションはいくつ書き出してもよいですが、このエリアにはもういくつかのルールがあります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;アクションの完了の責任はチーム全体にある(アサインされた個人ではなく)&lt;/li&gt;
  &lt;li&gt;1イテレーションで着手するアクション数が少なめになるようWIP上限を設ける&lt;/li&gt;
  &lt;li&gt;もしアクションが達成できなかった場合は、次のふりかえりで必ずアクションに手を加える
    &lt;ul&gt;
      &lt;li&gt;よりアクションを細かくする&lt;/li&gt;
      &lt;li&gt;個人アサインからペアアサインに変える&lt;/li&gt;
      &lt;li&gt;「イテレーション内で進捗をシェアする」など、アクション達成のためのタスクを追加する&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;done&quot;&gt;“DONE”&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;議論が終わったトピック、完了したアクション&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;このレーンはなくてもよいです。終わったものが山積みになると「これだけ改善行動を起こした」とモチベーションになることがあります。&lt;/p&gt;

&lt;p&gt;また1ヶ月おきなど定期的にDONEの内容を見返し、以前との変化を計測したり、新しいチャレンジを見つけるキッカケにするものよさそうです。&lt;/p&gt;

&lt;h3 id=&quot;ふりかえりの進め方&quot;&gt;ふりかえりの進め方&lt;/h3&gt;

&lt;h4 id=&quot;1-前回のアクションの達成確認をする初回はスキップ&quot;&gt;1. 前回のアクションの達成確認をする(初回はスキップ)&lt;/h4&gt;

&lt;p&gt;WIPアクションについて1つずつ確認し、終わってればDONEに、終わってなければタスクをアップデートします。&lt;/p&gt;

&lt;h4 id=&quot;2-ペインとチャレンジを各々が書き出す&quot;&gt;2. ペインとチャレンジを各々が書き出す&lt;/h4&gt;

&lt;p&gt;5〜10分程度の記入時間を設け、記入が済んだら1件ずつ内容をシェアしながらボードに貼り付けていきます。&lt;/p&gt;

&lt;p&gt;シェアする過程で近い意見をグルーピングしたり、過去に挙げたものの解消してしまった意見を破棄したりと、ペインとチャレンジのエリアを整理しながら意見を集めていきます。チームメンバーの感情や欲求を1つのボードに載せ切ることを目指します。&lt;/p&gt;

&lt;h4 id=&quot;3-議論して深堀りたいトピックを投票する&quot;&gt;3. 議論して深堀りたいトピックを投票する&lt;/h4&gt;

&lt;p&gt;議論したいトピックに投票します。今回のミーティングで議論しなかったとしても、次回以降もペインとチャレンジに出ているトピックは(意図的に破棄しない限り)残り続けるので、『今日この場で』話したいものを選びましょう。&lt;/p&gt;

&lt;h4 id=&quot;4-投票が多かったトピックを議論しアクションに落とし込む&quot;&gt;4. 投票が多かったトピックを議論しアクションに落とし込む&lt;/h4&gt;

&lt;p&gt;アクションにはWIP制限があり、多くのアクションが出ても1イテレーションで消化できる数には限りがあるので、多くのトピックについて議論するより1つ1つのトピックについてじっくりめに議論するほうがおすすめです。&lt;/p&gt;

&lt;p&gt;アクションエリアにどれくらい未着手アクションが溜まっているかや、1トピックの議論にどれだけ時間がかかるかが、ふりかえりミーティングの長さを決めるヒントになります。最初は1時間枠などで開催し、ミーティングの様子を見ながらアップデートしていくとよいです。&lt;/p&gt;

&lt;h4 id=&quot;5-アクションの実行者を決める&quot;&gt;5. アクションの実行者を決める&lt;/h4&gt;

&lt;p&gt;次のイテレーションで完了させるアクションをWIP上限内で決めます。&lt;/p&gt;

&lt;p&gt;アクションごとに人をアサインしてもいいですし、ペアアサインなどにし個人の忙しさに依存しにくい状態を目指してもいいですし、バックログの消化が得意なチームであれば手が空いた人が都度ピックするかたちでもいいです。なんであれ、次のふりかえりミーティングまでにやると決めたものが完了できる方法であればOKです。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;最後に、チームで使ったテンプレートを置いておきます。&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;border:1px solid #CFD8DC&quot; alt=&quot;cheatsheet&quot; src=&quot;/assets/2024-06-14/cheatsheet.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先述のとおり、ふりかえりはKPTにこだわらずもっと自由にやっていいものだと思っているので、これからもチームやプロジェクトに合う方法を探し続けていきたいと思います。それらがどこかで誰かの参考になれば幸いです。&lt;/p&gt;</content><author><name></name></author><summary type="html">KPTを継続していたものの意見が出にくくなったりTryが実行されなくなったり…といったマンネリ化や改善サイクルの停滞はどのチームも1度くらいは体験するのではないでしょうか。そんなときはふりかえりの方法を少し変えて刺激を得ることが有効な手段のひとつです。</summary></entry><entry><title type="html">チーム目標を設定するフレームワークをつくったので紹介したい</title><link href="https://aloerina01.github.io/blog/2024-04-04-1" rel="alternate" type="text/html" title="チーム目標を設定するフレームワークをつくったので紹介したい" /><published>2024-04-04T00:00:00+00:00</published><updated>2024-04-04T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-04-04-1">&lt;p&gt;新年度です。目標を設定するシーズンですね。&lt;/p&gt;

&lt;p&gt;私の職場でも個々人が目標設定をする時期ですし、同時に私が関わるスクラムチームでもチームとしての目標を決める議論がされました。&lt;br /&gt;
それらを見ていて、『チーム目標を議論して決める難しさ』を感じる場面が何度かありました。最終的な理想状態を見据えている人もいれば、直近で達成したい短期目標を意識している人もいます。やりたいことは山のようにあるけれど、それらが最終目標にどれだけ効果的に結びつくかが曖昧なこともあります。&lt;/p&gt;

&lt;p&gt;目線が違う状態でアイデアが多く出る議論を続けるのは難しいので、目標設定のためのフレームワークをつくってみました。目線を合わせた議論や、建設的な目標設定を導くツールです。&lt;/p&gt;

&lt;h3 id=&quot;全体像&quot;&gt;全体像&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_template.jpg&quot; alt=&quot;フレームワークの全体像&quot; /&gt;&lt;/p&gt;

&lt;p&gt;このマトリクスを順に埋めていきます。後述しますが列は増減していいですし、マスを全部埋めなくても適切な目標が見つかればその時点で目標設定完了です。&lt;br /&gt;
順に使い方を紹介していきます。&lt;/p&gt;

&lt;h3 id=&quot;1最終ゴールを右上のマスに記入する&quot;&gt;1．最終ゴールを右上のマスに記入する&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_usage1.jpg&quot; alt=&quot;使い方1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;縦軸・横軸の説明はさておき、まずは右上のマスに現時点で思い描けている『&lt;strong&gt;最終的に到達したい状態または達成したい成果&lt;/strong&gt;』を記入します。抽象的でもいいし、現時点で考えうる最終的目標でOKです。目標はナマモノなので変化していって当然です。&lt;br /&gt;
たとえば&lt;/p&gt;

&lt;p class=&quot;note&quot; style=&quot;margin:16px 0&quot;&gt;
プロダクトバックログを安定的に開発し続けるチームになる
&lt;/p&gt;

&lt;p&gt;このくらいざっくりした目標でも大丈夫です。&lt;/p&gt;

&lt;h3 id=&quot;2-スモールステップを見つける&quot;&gt;2. スモールステップを見つける&lt;/h3&gt;
&lt;p&gt;次に最終目標にたどり着くまでのステップを分けていきましょう。マイルストーンを置いたり、短期目標や中期目標に分解したりするイメージです。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_usage2.jpg&quot; alt=&quot;使い方2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;最終目標から左に向かって考えていきます。十分達成できそうなスモールステップまで掘り下げ、Step1からGoalに向けて見返したときに適切な階段となっていれば上出来です。&lt;/p&gt;

&lt;h3 id=&quot;3-目標を具体化し行動を起こしやすくする&quot;&gt;3. 目標を具体化し行動を起こしやすくする&lt;/h3&gt;
&lt;p&gt;手頃なスモールステップがみつかって、それを目標にして行動が起こせそうであれば目標設定は完了です。ですが抽象度が高く達成のためにどのようなアクションを起こせばよいかが分からない目標である可能性があります。達成手段を自由に柔軟に選択でき、裁量がある目標とも言えます。&lt;/p&gt;

&lt;p&gt;ただチーム目標においては抽象的すぎると解釈の違いが生まれやすく、不適切なアクションが取られる可能性もあります。&lt;br /&gt;
極端な例を挙げるなら、「スプリントゴールを守る」という目標に対するアクションが「守りやすいように消極的なスプリントゴールを設定する」では本末転倒ですし、「残業してでもやりぬく」ではチームの出力は持続できません。&lt;/p&gt;

&lt;p&gt;目標達成にむけたアクションに柔軟性を持たせたい場合は抽象度の高い目標のままにし、逆にミスリードを防いだり決まった道筋で目標達成していきたい場合は目標の具体度を上げます。そのためにマトリクスの縦軸を使います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_usage3.jpg&quot; alt=&quot;使い方3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;どういった成果・要素が積み重なれば最終目標の達成に近づくかを掘り下げていきます。&lt;strong&gt;結果目標・成果目標&lt;/strong&gt;と呼ばれるものです。
たとえば上述した「プロダクトバックログを安定的に開発し続けるチームになる」という最終目標の実現に必要な要素の1つとして&lt;/p&gt;

&lt;p class=&quot;note&quot; style=&quot;margin:16px 0&quot;&gt;
次スプリントで着手するであろうバックログアイテムが相対見積もり済みであり、優先順位順に並んでいる状態を維持する
&lt;/p&gt;

&lt;p&gt;を定義してみます。&lt;br /&gt;
少し具体的になったので、これでチームメンバーが動き出せそうであれば具体化は終了ですが、より指示的な目標にする場合はこれを達成するアクションにまで落とし込むこともできます。&lt;/p&gt;

&lt;p class=&quot;note&quot; style=&quot;margin:16px 0&quot;&gt;
プロダクトバックログリファインメントの場で相対見積もりをし、見積もられているアイテムの総ポイントが【平均ベロシティ+10pt】となる状態を維持する
&lt;/p&gt;

&lt;p&gt;ここまで落とし込むと、「いつ」「なにを」「どれくらい」するかまで明確です。&lt;strong&gt;行動目標&lt;/strong&gt;と呼ばれるもので、一番最初に決めた最終目標と比較するとかなり具体的になったと思います。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_usage4.jpg&quot; alt=&quot;使い方4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;実際には、図のように目標を具体的にするほど数が増えるはずなので、マス目の数にとらわれず腹落ちするまで結果目標や行動目標を考え尽くす必要があります。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;今回紹介したものは、マトリクス型のテンプレートを埋めながら適切な目標を探すためのフレームワークでした。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2024-04-04/framework_overall.jpg&quot; alt=&quot;フレームワークの全体像&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使い方を整理すると&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;右上に最終的なゴールを記入する&lt;/li&gt;
  &lt;li&gt;左に向かって最終目標までのステップをつくる&lt;/li&gt;
  &lt;li&gt;抽象度が高すぎるものは下に向かって具体化する&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という流れです。&lt;/p&gt;

&lt;p&gt;オンラインで目標設定のディスカッションをする際にMiroなどのホワイトボードツールにマトリクスを用意して付箋を重ねながら議論したり、オフラインの場でマトリクスを印刷して指差しながら議論の目線を合わせたりといった使い方を想定しています。もちろん個人の目標設定時にも使えます。&lt;/p&gt;

&lt;p&gt;最後に改めて補足しておくと、マトリクスをすべて埋めることが重要なのではなく、&lt;strong&gt;納得いく目標を見つけること&lt;/strong&gt;が大切です。またチームで議論しながら目標設定する場合は&lt;strong&gt;議論の目線を揃えること&lt;/strong&gt;が重要です。そのために多少なりとも役立てれば幸いです。&lt;/p&gt;</content><author><name></name></author><summary type="html">新年度です。目標を設定するシーズンですね。</summary></entry></feed>