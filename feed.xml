<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://aloerina01.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://aloerina01.github.io/" rel="alternate" type="text/html" /><updated>2025-09-18T09:45:21+00:00</updated><id>https://aloerina01.github.io/feed.xml</id><title type="html">Feel and Code</title><subtitle>Web Developer。同じような過ちを繰り返さないように備忘録を残しています。
</subtitle><entry><title type="html">”資料を渡すだけ”から脱却して効果的なオンボーディングにするための改善事例</title><link href="https://aloerina01.github.io/blog/2025-09-18-1" rel="alternate" type="text/html" title="”資料を渡すだけ”から脱却して効果的なオンボーディングにするための改善事例" /><published>2025-09-18T00:00:00+00:00</published><updated>2025-09-18T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-09-18-1">&lt;p&gt;新メンバーを受け入れるとき、オンボーディングと称して既存資料をドサッと渡して「読んでおいてね」と伝えて済ませてしまうこと、ありませんか？&lt;/p&gt;

&lt;p&gt;私たちのチームもかつてそうでした。&lt;br /&gt;
しかし、このオンボーディングは新メンバーが&lt;strong&gt;最速でパフォーマンスを出すために&lt;/strong&gt;最適なやり方なのでしょうか？&lt;/p&gt;

&lt;p&gt;もっと良いオンボーディングにしたいと思っても、その機会は多くて年に数回。ついつい&lt;strong&gt;メンテナンスは後回し&lt;/strong&gt;にされがち。いざメンテしようにも&lt;strong&gt;どこをどう直せば良くなるのか分からない&lt;/strong&gt;…。&lt;br /&gt;
と、改善意欲があっても手が動かせない状況にも陥りやすいのが、オンボーディングの難しいところですよね。&lt;/p&gt;

&lt;p&gt;今回の記事では、かつて私がマネジメントしていたLINE NEWSのフロントエンドチームのオンボーディング改善事例を紹介します。事例を参考に、ご自身のチームにあったオンボーディングはどういうものか、想像しながら読んでもらえると嬉しいです。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#オンボーディングの真の役割を問い直す&quot; id=&quot;markdown-toc-オンボーディングの真の役割を問い直す&quot;&gt;オンボーディングの真の役割を問い直す&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ターゲットをタイプ分けする&quot; id=&quot;markdown-toc-ターゲットをタイプ分けする&quot;&gt;ターゲットをタイプ分けする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ターゲットのタイプ毎にユーザーストーリーを描く&quot; id=&quot;markdown-toc-ターゲットのタイプ毎にユーザーストーリーを描く&quot;&gt;ターゲットのタイプ毎にユーザーストーリーを描く&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#これまで実践してきたオンボーディングをマッピングする&quot; id=&quot;markdown-toc-これまで実践してきたオンボーディングをマッピングする&quot;&gt;これまで実践してきたオンボーディングをマッピングする&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#アクションのタイムラインを設計する&quot; id=&quot;markdown-toc-アクションのタイムラインを設計する&quot;&gt;アクションのタイムラインを設計する&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#その他のオンボーディングを充実させるtips&quot; id=&quot;markdown-toc-その他のオンボーディングを充実させるtips&quot;&gt;その他のオンボーディングを充実させるTips&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#新メンバーによるオンボーディング改善をオンボーディングに組み込む&quot; id=&quot;markdown-toc-新メンバーによるオンボーディング改善をオンボーディングに組み込む&quot;&gt;「新メンバーによるオンボーディング改善」をオンボーディングに組み込む&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#オンボーディングの責任範囲を明記する&quot; id=&quot;markdown-toc-オンボーディングの責任範囲を明記する&quot;&gt;オンボーディングの責任範囲を明記する&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#過剰なものを削ぎ落とす&quot; id=&quot;markdown-toc-過剰なものを削ぎ落とす&quot;&gt;過剰なものを削ぎ落とす&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ドキュメントを使うものとモブワークを使うものとを分ける&quot; id=&quot;markdown-toc-ドキュメントを使うものとモブワークを使うものとを分ける&quot;&gt;ドキュメントを使うものと、モブワークを使うものとを分ける&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;オンボーディングの真の役割を問い直す&quot;&gt;オンボーディングの真の役割を問い直す&lt;/h3&gt;

&lt;p&gt;オンボーディングは誰のためのものでしょうか？&lt;/p&gt;

&lt;p&gt;私は新メンバーのためだけではないと考えています。新メンバーの&lt;strong&gt;メンター&lt;/strong&gt;のためであり、&lt;strong&gt;受け入れるチームメンバー&lt;/strong&gt;のためでもあります。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;誰のためか&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;どう役立つか&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;新メンバー&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;チームのルールや運用を理解し、最速で力を発揮できる状態に辿り着く&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;メンター&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;たまにしかやらない「メンター業務」のガイドラインになる&lt;br /&gt;誰がメンター役を担っても一定の品質になる&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;受け入れるチームメンバー&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;新メンバーに対する「何を知っていて、何を知らないのか」の期待値が揃い協業しやすくなる&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;三者にとって意味のあるオンボーディングを目指すことが、私たちのオンボーディング改善のスタート地点でした。&lt;/p&gt;

&lt;h3 id=&quot;ターゲットをタイプ分けする&quot;&gt;ターゲットをタイプ分けする&lt;/h3&gt;

&lt;p&gt;オンボーディングとは、資料を読んでもらうことでも、説明会を開くことでもありません。それらは手段の1つにはなり得ますが、目的そのものではありません。&lt;/p&gt;

&lt;p&gt;上述の通り、私たちにとってオンボーディングの目的は&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;新メンバー&lt;/strong&gt;が最速でパフォーマンスを出す(メインターゲット)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;メンター&lt;/strong&gt;が迷うことなくメンタリングでき、かつその品質が一定になる&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;受け入れチーム&lt;/strong&gt;の期待値が揃う&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の3つです。&lt;/p&gt;

&lt;p&gt;この三者の目的を達成するために、&lt;strong&gt;まずはメインターゲットである「新メンバー」がどういう人か解像度を上げることから&lt;/strong&gt;始めてみます。私たちのチームでは4種類に分類しました。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;タイプ&lt;/th&gt;
      &lt;th&gt;特徴&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;新卒&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;エンジニアとしての業務経験が&lt;strong&gt;ない&lt;/strong&gt;、&lt;strong&gt;長期的&lt;/strong&gt;にチームに属する&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;インターン生&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;エンジニアとしての業務経験が&lt;strong&gt;ない&lt;/strong&gt;、&lt;strong&gt;短期間&lt;/strong&gt;の関わりで終了日が決まっている&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;中途採用や社内異動&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;エンジニアとしての業務経験が&lt;strong&gt;ある&lt;/strong&gt;、&lt;strong&gt;長期的&lt;/strong&gt;にチームに属する&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;ヘルプアサイン&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;エンジニアとしての業務経験が&lt;strong&gt;ある&lt;/strong&gt;、&lt;strong&gt;短期間&lt;/strong&gt;の関わり&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;私たちは「エンジニア歴」と「関わる期間の長さ」で分類しましたが、チームによっては「技術領域」や「得意ドメイン」などかもしれません。これまでに受け入れてきた人たちを思い浮かべながら分類すると良いでしょう。&lt;/p&gt;

&lt;h3 id=&quot;ターゲットのタイプ毎にユーザーストーリーを描く&quot;&gt;ターゲットのタイプ毎にユーザーストーリーを描く&lt;/h3&gt;

&lt;p&gt;次に、この4タイプの新メンバーがパフォーマンスを発揮するまでに経験すべきことを描きます。これを「ユーザーストーリー」と呼ぶのは、&lt;strong&gt;ユーザー(新メンバー)の目線&lt;/strong&gt;でどんな体験が必要かを考えるためです。&lt;/p&gt;

&lt;p&gt;ストーリーを考えるための骨組みとして、オンボーディングを4つのフェーズに分けましょう。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;How to &lt;strong&gt;Live&lt;/strong&gt; (職場に適応する)&lt;/li&gt;
  &lt;li&gt;How to &lt;strong&gt;Learn&lt;/strong&gt; (知識・スキルを得る)&lt;/li&gt;
  &lt;li&gt;How to &lt;strong&gt;Work&lt;/strong&gt; (仕事を完遂する、成果を出す)&lt;/li&gt;
  &lt;li&gt;How to &lt;strong&gt;Influence&lt;/strong&gt; (周囲に影響を与える)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;フェーズごとにストーリーを洗い出していきます。&lt;/p&gt;

&lt;p&gt;例えば、1番目の適用するフェーズでは「チームに馴染む」「よく使うコミュニケーション方法を知る」などで、2番目の知識を得るフェーズでは「デプロイフローを知る」「プロダクトの収益モデルを知る」などでしょうか。&lt;/p&gt;

&lt;p&gt;成果を出すまでに必要な体験を&lt;strong&gt;粒度問わず&lt;/strong&gt;洗い出します。&lt;/p&gt;

&lt;p&gt;一通り洗い出し終わったら、先程のターゲットのタイプと掛け合わあせて、「新メンバーのタイプ毎にどのストーリーを経験すべきか」を整理していきます。&lt;/p&gt;

&lt;p&gt;LINE NEWSでは、「4つの新メンバーのタイプ」x 「4つのフェーズ(12のストーリー)」を表にまとめていました。&lt;/p&gt;

&lt;figure style=&quot;margin-left:-30%;margin-right:-30%;margin-bottom:36px;&quot;&gt;
&lt;img style=&quot;border:1px solid #CFD8DC;border-radius:4px;&quot; alt=&quot;オンボーディングストーリー&quot; src=&quot;/assets/2025-09-18-1/stories.jpg&quot; /&gt;
&lt;figcaption style=&quot;text-align:center;font-size:90%;color:#90A4AE;&quot;&gt;(LINE NEWSのオンボーディングストーリー)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;少し表の解説をします。&lt;br /&gt;
&lt;strong&gt;Rowには、オンボーディングの4つのフェーズ(緑色のブロック)と、それぞれのフェーズで必要なストーリー(グレーの行)&lt;/strong&gt;があります。たとえばHow to Liveのフェーズには「チームの雰囲気を知る」「チームメンバーとの関係性をつくる」「Managerと期待値を揃える」の3つのストーリーがあります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Columnには、新メンバーの4つのタイプ&lt;/strong&gt;が並んでいます。&lt;br /&gt;
それぞれのタイプが、各ストーリーを経験すべきかについて「Essential(必須)」「Recommended(推奨)」「Optional(任意)」「空欄(不要)」の4段階で表現しています。&lt;/p&gt;

&lt;p&gt;具体例を1つピックアップして詳細を見てみましょう。&lt;br /&gt;
表の真ん中あたりにあるHow to Learnの&lt;strong&gt;「配属先Small Teamの開発環境・ルールを理解する」ストーリー&lt;/strong&gt;は、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;新卒タイプには Essential&lt;/li&gt;
  &lt;li&gt;インターン生タイプには Optional&lt;/li&gt;
  &lt;li&gt;中途採用タイプには Recommended&lt;/li&gt;
  &lt;li&gt;ヘルプアサインタイプには None&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;となっています。&lt;/p&gt;

&lt;p&gt;当時のLINE NEWSプロジェクトでは、エンジニアは3つのSmall Team(職能横断なスクラムチーム)に分かれて開発をしていました。&lt;/p&gt;

&lt;p&gt;『新卒タイプ』にとっては馴染のない開発体制であろうことから「必須」のストーリーとしましたが、1ヶ月間のみ協業する『インターン生タイプ』に開発環境・ルール・運用をすべて理解してもらうのはオーバーヘッドが高いので「任意」としていました。&lt;/p&gt;

&lt;p style=&quot;text-align:center;&quot;&gt;＊＊＊&lt;/p&gt;

&lt;p&gt;これがオンボーディングの全体像になります。&lt;br /&gt;
どんな新メンバーが何を経験すべきかが明らかになりました。&lt;/p&gt;

&lt;p&gt;上述した三者の目的である&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;新メンバー&lt;/strong&gt;が最速でパフォーマンスを出す(メインターゲット)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;メンター&lt;/strong&gt;が迷うことなくメンタリングでき、かつその品質が一定になる&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;受け入れチーム&lt;/strong&gt;の期待値が揃う&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を満たすアウトラインが整った状態です。あとは&lt;strong&gt;ストーリーを実現する具体的なアクションを埋めていけばオンボーディングが完成する&lt;/strong&gt;であろうことが、すでに感じ取れるのではないでしょうか？&lt;/p&gt;

&lt;h3 id=&quot;これまで実践してきたオンボーディングをマッピングする&quot;&gt;これまで実践してきたオンボーディングをマッピングする&lt;/h3&gt;

&lt;p&gt;これまで実践してきたオンボーディングアクションを&lt;strong&gt;ストーリーにマッピング&lt;/strong&gt;していきます。&lt;/p&gt;

&lt;p&gt;たとえば&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;初日に自己紹介ミーティングに参加する&lt;/li&gt;
  &lt;li&gt;プロダクトコードを修正しPRを作成する&lt;/li&gt;
  &lt;li&gt;マージからデプロイまでの流れを資料で読み、サンプルプロジェクトで試す&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったような具体的なアクションが、どのストーリーに当てはまるかを考えていくわけです。&lt;/p&gt;

&lt;p&gt;もし&lt;strong&gt;該当するストーリーがない場合はストーリーの追加が必要&lt;/strong&gt;か、もしくは&lt;strong&gt;そのアクションが不要&lt;/strong&gt;な可能性を示唆しています。&lt;/p&gt;

&lt;p&gt;マッピングが完了すると、「実践できていないストーリー」や「過剰に取り組んでいるストーリー」が浮き彫りになるはずです。これを1つずつ修正していくことで、&lt;strong&gt;過不足のない&lt;/strong&gt;オンボーディングが出来上がっていきます。&lt;/p&gt;

&lt;figure style=&quot;margin-left:0%;margin-right:0%;margin-bottom:36px;&quot;&gt;
&lt;img style=&quot;border:1px solid #CFD8DC;border-radius:4px;&quot; alt=&quot;オンボーディングストーリーマッピング&quot; src=&quot;/assets/2025-09-18-1/actions.jpg&quot; /&gt;
&lt;figcaption style=&quot;text-align:center;font-size:90%;color:#90A4AE;&quot;&gt;(LINE NEWSのオンボーディングアクションのマッピング例)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;「ストーリーとアクションをマッピングする」アプローチは、マクロとミクロの視点のかけ合わせとも言えます。この作業を通じてオンボーディングの&lt;strong&gt;網羅性&lt;/strong&gt;が高まります。&lt;/p&gt;

&lt;p&gt;「オンボーディングの全体像」と「過不足のないオンボーディングアクション」が出揃ってくると質が高まることはもちろん、&lt;strong&gt;「メンターが何をすべきか」や「オンボーディングを完了したメンバーは何ができるのか、の期待水準」が明らかになる&lt;/strong&gt;のが、イメージできると思います。&lt;/p&gt;

&lt;h3 id=&quot;アクションのタイムラインを設計する&quot;&gt;アクションのタイムラインを設計する&lt;/h3&gt;

&lt;p&gt;ここまででオンボーディングの全体図は完成しました。これにてオンボーディングのメンテナンス完了です！&lt;/p&gt;

&lt;p&gt;…としてもいいのですが「メンターが迷うことなくメンタリングでき、かつその品質が一定になる」目的を果たすためには、もう少し具体的な&lt;strong&gt;メンタリングのガイドライン&lt;/strong&gt;となる側面があっても良さそうです。&lt;br /&gt;
それが&lt;strong&gt;オンボーディングタイムライン&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;まずはLINE NEWSの実例から見てみましょう。&lt;/p&gt;

&lt;figure style=&quot;margin-left:-30%;margin-right:-30%;margin-bottom:36px;&quot;&gt;
&lt;img style=&quot;border:1px solid #CFD8DC;border-radius:4px;&quot; alt=&quot;オンボーディングストーリーマッピング&quot; src=&quot;/assets/2025-09-18-1/timeline.jpg&quot; /&gt;
&lt;figcaption style=&quot;text-align:center;font-size:90%;color:#90A4AE;&quot;&gt;(LINE NEWSのオンボーディングタイムラインの一部)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;横軸を時間軸とし、それぞれのアクションをどのタイミングで実施するかを表現しています。&lt;/p&gt;

&lt;p&gt;付箋の色は&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;単発アクション&lt;/li&gt;
  &lt;li&gt;継続アクション(の初回開催時)&lt;/li&gt;
  &lt;li&gt;資料を使うアクション(メンターが事前に資料の更新状況を確認すべきもの)&lt;/li&gt;
  &lt;li&gt;新メンバーが任意のタイミングで実施すれば良いアクション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;を表します。&lt;/p&gt;

&lt;p&gt;初めて/久々にメンターする人にとって、オンボーディングの流れの可視化されているといくらか安心して臨めるのではないでしょうか。&lt;br /&gt;
新メンバーから「来週からSmall Teamにジョイン予定なんですが、事前に確認しておくべきことはありますか？」と聞かれてオンボーディングアクションの漏れに気づく…なんてこともなくなりますね。&lt;/p&gt;

&lt;p&gt;オンボーディング前に付箋を貼ったり剥がしたりしてプランニングに使うこともできますし、完了したアクションを剥がしてタスク管理することにも使えます。&lt;/p&gt;

&lt;h3 id=&quot;その他のオンボーディングを充実させるtips&quot;&gt;その他のオンボーディングを充実させるTips&lt;/h3&gt;

&lt;h4 id=&quot;新メンバーによるオンボーディング改善をオンボーディングに組み込む&quot;&gt;「新メンバーによるオンボーディング改善」をオンボーディングに組み込む&lt;/h4&gt;

&lt;p&gt;オンボーディングの一環として、オンボーディングそのものに対するフィードバックと修正をしてもらうと、双方にとってハッピーです。新メンバー目線でオンボーディングをより良くできますし、&lt;strong&gt;新メンバーが成果を出す場&lt;/strong&gt;としても機能します。&lt;/p&gt;

&lt;h4 id=&quot;オンボーディングの責任範囲を明記する&quot;&gt;オンボーディングの責任範囲を明記する&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;オンボーディング完了時点で新メンバーがどういう状態になっているか&lt;/strong&gt;を明記することで、オンボーディングの責任範囲が明確になります。例えばLINE NEWSのオンボーディングでは「フロントエンド知識のインプット」は責任範囲外としています。フロントエンドの根源的な知識は採用のタイミングで確認済みで、ライブラリの利用ナレッジ等は業務の中でキャッチアップすることを想定していたからです。&lt;/p&gt;

&lt;h4 id=&quot;過剰なものを削ぎ落とす&quot;&gt;過剰なものを削ぎ落とす&lt;/h4&gt;

&lt;p&gt;今回の改善方法は、足りないものに気づきやすいアプローチです。反面、&lt;strong&gt;オンボーディングのボリュームが増しがち&lt;/strong&gt;です。オンボーディングにどれだけの時間を費やすかは受け入れるチームの状況によって変わるはずです。&lt;/p&gt;

&lt;p&gt;ボリュームがあると感じた場合は、オンボーディングの責任範囲を見直しながら『削ぎ落とし』をすると良いでしょう。私たちも一通りの改善を済ませた後は、新メンバー加入のたびに削ぎ落としをしていました。&lt;/p&gt;

&lt;h4 id=&quot;ドキュメントを使うものとモブワークを使うものとを分ける&quot;&gt;ドキュメントを使うものと、モブワークを使うものとを分ける&lt;/h4&gt;

&lt;p&gt;ドキュメントとして残しやすい形式知と、そうでない暗黙知とを分けることは重要です。うまく分別できれば&lt;strong&gt;「すべてをドキュメントに残さねば」の圧から解放&lt;/strong&gt;されますし、ドキュメントの総量を少なく維持できれば最新性を保ちやすくなります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;暗黙知のほうは、モブワーク(モブプログラミングやモブ環境構築など)で口伝していく&lt;/strong&gt;方法をとっても良いです。特に最初の環境構築はモブワークがおすすめです。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;オンボーディングをターゲット、フェーズ、ストーリー、アクション、タイムラインに分けて考えることで、私たちのオンボーディングのクオリティはグッと高まりました。&lt;/p&gt;

&lt;p&gt;まだまだ改善の余地は残っていますが、&lt;strong&gt;「このオンボーディングが過不足なく、一定のクオリティであること」に根拠を持てる&lt;/strong&gt;ようになりました。感覚ではなくロジックで作り上げたことで、より良くするための&lt;strong&gt;議論のスタート地点&lt;/strong&gt;に立てた、とも言えます。&lt;/p&gt;

&lt;p&gt;オンボーディングの改善は後回しになりがちなタスクです。&lt;br /&gt;
しかし、新たに加わった新メンバーがいち早くパフォーマンスを発揮できるよう、&lt;strong&gt;自らオンボーディングを整えられたチーム&lt;/strong&gt;には、&lt;strong&gt;自律性&lt;/strong&gt;や&lt;strong&gt;持続可能性&lt;/strong&gt;の片鱗があるはずです。&lt;/p&gt;

&lt;p&gt;新メンバーにとってだけでなく、チームにとって重要なオンボーディングの改善に、この知見が少しでも役立てば幸いです。&lt;/p&gt;</content><author><name></name></author><summary type="html">新メンバーを受け入れるとき、オンボーディングと称して既存資料をドサッと渡して「読んでおいてね」と伝えて済ませてしまうこと、ありませんか？</summary></entry><entry><title type="html">議論を“立て直す”ときに使える、力点と作用点を効かせるファシリテーション</title><link href="https://aloerina01.github.io/blog/2025-08-04-1" rel="alternate" type="text/html" title="議論を“立て直す”ときに使える、力点と作用点を効かせるファシリテーション" /><published>2025-08-04T00:00:00+00:00</published><updated>2025-08-04T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-08-04-1">&lt;p&gt;会議のファシリテーションをしていて、「論点がかみ合わない」「発言は出ているのにまとまらない」と感じることはないでしょうか。そんな場面では「どの論点に力を入れれば、どの結論に影響を与えられるのか」がブレてしまっていることがあります。&lt;/p&gt;

&lt;p&gt;これを&lt;strong&gt;議論の『力点』と『作用点』が入り乱れてしまい迷走している&lt;/strong&gt;という視点で捉えると、ファシリテーションの糸口が見えてきます。&lt;/p&gt;

&lt;h3 id=&quot;テコの三要素と議論の対応関係&quot;&gt;テコの三要素と議論の対応関係&lt;/h3&gt;

&lt;p&gt;「テコ」は以下の3つの要素で構成されます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;力点&lt;/strong&gt;：議論で注力すべきテーマや問い&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;作用点&lt;/strong&gt;：議論の結論により影響を与える箇所。現場の困りごとやリターンのある領域&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;支点&lt;/strong&gt;：動かない前提、制約、背景&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「&lt;strong&gt;今どこに力を加えようとしているのか(＝力点)&lt;/strong&gt;」「&lt;strong&gt;何を動かしたいのか(＝作用点)&lt;/strong&gt;」というテコの原理に似た構造が、議論の中には隠れています。
議論が迷走するときはこれらにズレがあり、一直線に繋がっていない可能性があります。ファシリテーターはそれを見極め整理することで、議論を立て直すことができます。&lt;/p&gt;

&lt;p&gt;今回は3つのファシリテーションTipsを紹介します。&lt;/p&gt;

&lt;h3 id=&quot;1まずは作用点何に影響を与えたいかを見極める&quot;&gt;1.まずは「作用点(何に影響を与えたいか)」を見極める&lt;/h3&gt;

&lt;p&gt;「朝会をもう少し短くできないか？」という議論が出たときのことです。&lt;br /&gt;
一見すると議論のテーマは明確ですが、よく聞くとそれぞれの発言者が持っている目的が違うことがあります。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Aさん「会議で作業を中断させたくない」&lt;/li&gt;
  &lt;li&gt;Bさん「冗長な報告が多く、時間を無駄にしたくない」&lt;/li&gt;
  &lt;li&gt;Cさん「必要な情報共有が抜けてしまうのが心配」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このように、同じテーマの下に異なる作用点が混在していると、議論はかみ合いません。&lt;/p&gt;

&lt;p&gt;こういう場面でのファシリテーションは、まずは各々がイメージする作用点──つまり「&lt;strong&gt;何を良くしたくて議論に参加しているのか&lt;/strong&gt;」を明らかにすることを目指します。参加者一人一人の&lt;strong&gt;背景や意図を明らかにする&lt;/strong&gt;ことが議論の準備として必要なわけです。&lt;/p&gt;

&lt;h3 id=&quot;2作用点がバラバラなときは共通する力点議論の焦点を見極める&quot;&gt;2.作用点がバラバラなときは、共通する力点(議論の焦点)を見極める&lt;/h3&gt;

&lt;p&gt;作用点が散っていて収集がつかないときは「&lt;strong&gt;どこに議論の焦点を置けば、複数の作用点に影響を与えられるか&lt;/strong&gt;」を探るようファシリテーションするのが1つの手です。&lt;/p&gt;

&lt;p&gt;前述の朝会の例では、目的が「集中力を維持したい」「作業時間を無駄にしたくない」「情報共有を保ちたい」に分かれていました。&lt;br /&gt;
作用点がバラバラなので、それらに共通する議論の焦点──つまり「&lt;strong&gt;何を変えれば全ての目的を満たせるか&lt;/strong&gt;」を、力点にして議論を進めてみます。それでも解決策が見つからない場合は、「作用点の中で譲れる(譲れない)要素は何か」に論点を移し、のちに「全ての作用点に&lt;strong&gt;ほどほどに効く&lt;/strong&gt;」現実的な解決策を探す議論になっていくかもしれません。&lt;/p&gt;

&lt;p&gt;このように&lt;strong&gt;ファシリテーターは「議論の焦点をその場その場で見極め、段階的に変える」アプローチ&lt;/strong&gt;をとることで議論を前進させていきます。&lt;/p&gt;

&lt;h3 id=&quot;3作用点と力点が入り混じっているときは一時的に力点を絞り込む&quot;&gt;3．作用点と力点が入り混じっているときは、一時的に力点を絞り込む&lt;/h3&gt;

&lt;p&gt;ふりかえりなどのオープンな議論では、参加者ごとに異なる課題意識(作用点)が出され、話の焦点が定まらなくなることがあります。&lt;/p&gt;

&lt;p&gt;たとえば、かつてふりかえりで「開発体験をもっと良くしたい」というテーマで話し合っていたら、以下のような作用点が並びました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;レビューの質を上げたい (コード品質)&lt;/li&gt;
  &lt;li&gt;リリース作業を楽にしたい (運用効率)&lt;/li&gt;
  &lt;li&gt;オンボーディングを整えたい (育成コスト)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;こんなときに有効なのが、「&lt;strong&gt;まずどこから議論するか&lt;/strong&gt;」を合意し、&lt;strong&gt;議論の力点(焦点)を一時的に絞り込む&lt;/strong&gt;アプローチです。私が使う手法をいくつか紹介します。&lt;/p&gt;

&lt;h4 id=&quot;実践しやすい軽量な手法&quot;&gt;実践しやすい軽量な手法&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;参加者の&lt;strong&gt;投票&lt;/strong&gt;で議論する順番を決める&lt;/li&gt;
  &lt;li&gt;「今期中に改善したいものはどれ？」といった&lt;strong&gt;問い&lt;/strong&gt;で絞り込む&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;難易度は高いが効果が高い手法&quot;&gt;難易度は高いが効果が高い手法&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;「重要度と緊急度」「実行しやすさとインパクト」などの&lt;strong&gt;マトリクス&lt;/strong&gt;で整理する&lt;/li&gt;
  &lt;li&gt;トピックを&lt;strong&gt;グルーピング&lt;/strong&gt;したり&lt;strong&gt;矢印で相関関係を整理&lt;/strong&gt;することで、参加者の関心が高いポイントを探る&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上にあるものは簡単に実践できる反面、効果はやや弱めです。&lt;strong&gt;下にあるものは実践難易度は高めですが参加者と一体となって(高い納得感や共感をもって)作用点を絞り込める&lt;/strong&gt;可能性が高いです。&lt;/p&gt;

&lt;p&gt;今回の例では「作用点がバラバラ」な例を挙げましたが、&lt;strong&gt;実際には「力点と作用点が入り乱れた意見が集まる」ことがほとんど&lt;/strong&gt;です。&lt;br /&gt;
たとえば「〜〜だから、〇〇したい」といった提案は、前半の「〜〜」部分は「狙い・意図」であるため作用点となり、後半の「〇〇」部分は「具体策」なので意見が割れる可能性の高い論点であり力点となり得ます。これの整理も同時にやれると更に絞り込みやすいです。&lt;/p&gt;

&lt;p&gt;強調しておくと「作用点」「力点」という言葉はあくまで比喩です。厳密に分類しすぎる必要はありません。&lt;/p&gt;

&lt;p&gt;大切なのは、&lt;strong&gt;「何に影響を与えるために」「ここで何を議論するのがもっとも効果的か」を整理しながら進めること&lt;/strong&gt;です。そして、こうした整理をファシリテーターだけが担うのではなく、&lt;strong&gt;参加者と一緒に行えるようにする工夫&lt;/strong&gt;を持っておくとファシリテーションはグッとしやすくなります。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;議論が迷走や停滞してしまったとき、ファシリテーターにできることの1つは、力点・作用点の構造を見抜きズレを解消することです。そのための3つのTipsを紹介しました。&lt;/p&gt;

&lt;p&gt;「制約が何か（支点）」「効果を出したいところはどこか（作用点）」「そのために今考えるべきポイントはどこか（力点）」の見定めは、&lt;strong&gt;個人で考えごとをしているときには自然とやっていること&lt;/strong&gt;かもしれません。それを&lt;strong&gt;議論の場に広げ、議論全体を1つの思考活動につなぐこと&lt;/strong&gt;が、ファシリテーターの役割です。&lt;/p&gt;

&lt;p&gt;しかし、&lt;strong&gt;参加者の立場や背景によって思い描く作用点が異なる&lt;/strong&gt;という点が、これを難しくします。それらに絶対的な優劣や正解不正解を持ち込んでも意味はありません。&lt;br /&gt;
違って当たり前、対立して当たり前の意見の集合から、&lt;strong&gt;新しい構造を見出し議論を深化させていく&lt;/strong&gt;ことを、&lt;strong&gt;参加者全員で&lt;/strong&gt;できるように導くことがファシリテーションなのだと思います。&lt;/p&gt;

&lt;p&gt;参加者の意見に構造を見出し、&lt;strong&gt;参加者全員が共感・理解・加担できる議論&lt;/strong&gt;へと変化させることができれば、行き詰まっていた議論を立て直すキッカケになるはずです。&lt;/p&gt;

&lt;p&gt;テコの原理を議論に当てはめる考え方が、ファシリテーター自身の思考整理の役に立てれば、ひいては参加者との共有可能な思考のフレームになれば幸いです。&lt;/p&gt;</content><author><name></name></author><summary type="html">会議のファシリテーションをしていて、「論点がかみ合わない」「発言は出ているのにまとまらない」と感じることはないでしょうか。そんな場面では「どの論点に力を入れれば、どの結論に影響を与えられるのか」がブレてしまっていることがあります。</summary></entry><entry><title type="html">1on1再入門 - “傾聴する”から”好奇心を持って問いを設計する”へ</title><link href="https://aloerina01.github.io/blog/2025-05-12-1" rel="alternate" type="text/html" title="1on1再入門 - “傾聴する”から”好奇心を持って問いを設計する”へ" /><published>2025-05-12T00:00:00+00:00</published><updated>2025-05-12T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-05-12-1">&lt;p&gt;「1on1では聞く側に徹しましょう」「8割以上の時間を部下の話に耳を傾けるべき」&lt;br /&gt;
こういったアドバイスに私も従っていた時期がありました。&lt;/p&gt;

&lt;p&gt;当時の私は相手の話にじっと耳を傾け、「うんうん」と相づちを打ち、「それで？」と続きを促す。散々相手に話してもらったものの、1on1の後にどこかすっきりしない気持ちが残る。そんな1on1をやっていました。&lt;/p&gt;

&lt;p&gt;「これは本当に意味のある時間だったのか？」&lt;br /&gt;
「ただ話させて終わってしまったのではないか？」&lt;/p&gt;

&lt;p&gt;こういったモヤモヤの原因は、話を聞くことに集中しすぎて&lt;strong&gt;相手の変化や考えを深めるような「問い」をまったく投げられていなかった&lt;/strong&gt;ことにあったと、今なら分かります。そして当時の自分にどうアドバイスすべきかも明確です。&lt;/p&gt;

&lt;p&gt;今回はそれを書き起こしてみようと思います。&lt;/p&gt;

&lt;p&gt;本題の前に、前提について補足しておきます。&lt;br /&gt;
1on1の目的は組織やチームの文化によって異なりますが、この記事では、1on1を単なる報告や進捗確認の場としてではなく、&lt;strong&gt;相手の内面や成長に向き合う「探索の場」として活用すること&lt;/strong&gt;に重点を置いています。&lt;br /&gt;
「探索により、変化や思考の深化を目指す時間にしたい」という価値観のもと、当時の私の失敗の理由を明らかにし、改善のためのアプローチを書いていきます。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#傾聴は作法ではない結果として現れる状態&quot; id=&quot;markdown-toc-傾聴は作法ではない結果として現れる状態&quot;&gt;傾聴は「作法」ではない、結果として現れる「状態」&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#探索の場における問いをどのように設計するか&quot; id=&quot;markdown-toc-探索の場における問いをどのように設計するか&quot;&gt;探索の場における「問い」をどのように設計するか&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-過去の出来事の意味付けを促す問い&quot; id=&quot;markdown-toc-1-過去の出来事の意味付けを促す問い&quot;&gt;1. 過去の出来事の意味付けを促す問い&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-暗黙的な価値観や前提を言語化させる問い&quot; id=&quot;markdown-toc-2-暗黙的な価値観や前提を言語化させる問い&quot;&gt;2. 暗黙的な価値観や前提を言語化させる問い&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-行動の背景にあるモチベーションや感情を掘り下げる問い&quot; id=&quot;markdown-toc-3-行動の背景にあるモチベーションや感情を掘り下げる問い&quot;&gt;3. 行動の背景にあるモチベーションや感情を掘り下げる問い&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#問いを設計する自分を置いてけぼりにした失敗例&quot; id=&quot;markdown-toc-問いを設計する自分を置いてけぼりにした失敗例&quot;&gt;「問いを設計する自分」を置いてけぼりにした失敗例&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#純粋に会話を楽しむ自分とメタ的に問いを設計する自分を共存させる&quot; id=&quot;markdown-toc-純粋に会話を楽しむ自分とメタ的に問いを設計する自分を共存させる&quot;&gt;「純粋に会話を楽しむ自分」と「メタ的に問いを設計する自分」を共存させる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#まとめ&quot; id=&quot;markdown-toc-まとめ&quot;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;傾聴は作法ではない結果として現れる状態&quot;&gt;傾聴は「作法」ではない、結果として現れる「状態」&lt;/h3&gt;

&lt;p&gt;傾聴とは、&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;相手の話に注意深く、真摯に、共感をもって耳を傾けることで、相手の気持ちや考えを深く理解しようとすること&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;だと言われています。&lt;/p&gt;

&lt;p&gt;ですが「よし、じゃあ今日から傾聴するぞ」と自動詞的に実践するものではなく、「相手に敬意を持ち、純粋な好奇心のもと、相手との対話を楽しむ」その結果として現れる姿勢が「傾聴」だと私は考えています。&lt;/p&gt;

&lt;p&gt;言い換えると&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「1on1の時間になったから話を聞こう」という惰性的スタンス(敬意がない)&lt;/li&gt;
  &lt;li&gt;「マネージャーとして話を聞かなきゃいけない」というやらされ感(好奇心がない)&lt;/li&gt;
  &lt;li&gt;「淡泊に『それで？』と相槌を打つ」などの会話を楽しむ気持ちの欠如&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった状態では、どんなに聞く時間を長く取ったところで傾聴にはならないですし、1on1も機能しないということです。&lt;/p&gt;

&lt;p&gt;加えて、1on1における傾聴をうまく実践するための糸口が「問い」です。&lt;/p&gt;

&lt;p&gt;「&lt;strong&gt;聞く&lt;/strong&gt;」ためには「&lt;strong&gt;話してもらう&lt;/strong&gt;」必要があり、話してもらうには「&lt;strong&gt;問いかける&lt;/strong&gt;」必要があります。この&lt;strong&gt;問いかけの質&lt;/strong&gt;が、1on1で相手の話を&lt;strong&gt;聞く質&lt;/strong&gt;に直結するわけです。&lt;/p&gt;

&lt;p&gt;問いかけの質など全く考えてもいなかった当時の自分にも伝わる表現を意識して、問いの設計方法を深堀りしてみます。&lt;/p&gt;

&lt;h3 id=&quot;探索の場における問いをどのように設計するか&quot;&gt;探索の場における「問い」をどのように設計するか&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1on1を探索の場にする&lt;/strong&gt;という前提に立つと、&lt;strong&gt;「相手が自身のことをより深く理解する」「考えを一歩深める」ような対話が重要&lt;/strong&gt;になります。そのためには、相手の思考の『地図』を広げるような問いが役に立ちます。&lt;/p&gt;

&lt;p&gt;そのためには、以下の3つのいずれかの問いを目指すと良いです。&lt;/p&gt;

&lt;h4 id=&quot;1-過去の出来事の意味付けを促す問い&quot;&gt;1. 過去の出来事の意味付けを促す問い&lt;/h4&gt;

&lt;p&gt;人は経験そのものではなく、「その出来事をどう捉えたか」によって行動や感情が変わります。&lt;br /&gt;
たとえば「そのとき、どんな意味があると感じた？」という問いは相手の&lt;strong&gt;内面で起きていた認知や解釈を引き出し&lt;/strong&gt;、単なる出来事の報告から一歩踏み込み、&lt;strong&gt;体験に意味付けし言語化する&lt;/strong&gt;対話を生み出します。&lt;/p&gt;

&lt;h4 id=&quot;2-暗黙的な価値観や前提を言語化させる問い&quot;&gt;2. 暗黙的な価値観や前提を言語化させる問い&lt;/h4&gt;

&lt;p&gt;人の行動や判断には、無意識のうちに持っている価値観や前提が強く影響します。&lt;br /&gt;
たとえば「それって、どういう状態が理想だと感じてた？」のような問いは本人がふだん意識していない&lt;strong&gt;「自分にとって大切なこと」をあぶり出し&lt;/strong&gt;、自己理解を深めるきっかけになります。&lt;/p&gt;

&lt;h4 id=&quot;3-行動の背景にあるモチベーションや感情を掘り下げる問い&quot;&gt;3. 行動の背景にあるモチベーションや感情を掘り下げる問い&lt;/h4&gt;

&lt;p&gt;表面的な行動だけを聞いても、その人の芯にある行動指針や動機には迫れません。&lt;br /&gt;
「それを選んだとき、どんな感情があった？」のような問いによって行動の背後にある感情にアクセスすることで、より本人にとって意味のある内省が促されます。&lt;/p&gt;

&lt;p&gt;これら3つの問いは、&lt;strong&gt;目に見える「表面的な体験」から、目に見えにくい「内面の揺れ動き」を探索する橋渡し&lt;/strong&gt;をしてくれます。この内面へのアクセスを1on1の場で実践することで、変化や成長のきっかけになったり、内省の習慣づくりになったり、経験を構造的に捉える訓練になったりするわけです。&lt;/p&gt;

&lt;h3 id=&quot;問いを設計する自分を置いてけぼりにした失敗例&quot;&gt;「問いを設計する自分」を置いてけぼりにした失敗例&lt;/h3&gt;

&lt;p&gt;ここまでの話で、当時の自分が良い1on1をするには&lt;strong&gt;適切な問いの設計をする&lt;/strong&gt;必要があったと分かりました。&lt;strong&gt;3つの問いの設計方針&lt;/strong&gt;もある程度言語化できています。&lt;/p&gt;

&lt;p&gt;課題と解決策が揃っているので今はさぞ良い1on1ができているのだろうと思いたいですが……正直なところ今でもまだまだ失敗することがあります。その例を紹介します。&lt;/p&gt;

&lt;p&gt;たとえばある1on1で「あろえさんがやった〇〇の取り組みのおかげでチームが助かっています」といった嬉しいフィードバックをもらったとき、ついその言葉に舞い上がり、「ありがとう！そう思ってくれていたんだね」と会話を弾ませてしまうことがあります。&lt;/p&gt;

&lt;p&gt;しかし終わったあとに冷静にその時間を振り返ると、「その〇〇を自分でもできると思う？」「役立ったと感じた要素って何だと思う？」といったような&lt;strong&gt;相手の内面にダイブしていく問いかけ&lt;/strong&gt;ができていれば、&lt;strong&gt;相手の思考の『地図』新たな観点が描き加えられるような対話&lt;/strong&gt;をできたかもしれません。&lt;br /&gt;
会話を楽しむ自分が前面に出すぎて、『問いを設計しようとする自分』を置き去りにしてしまう失敗を、今でもちょくちょくやらかしています。&lt;/p&gt;

&lt;h3 id=&quot;純粋に会話を楽しむ自分とメタ的に問いを設計する自分を共存させる&quot;&gt;「純粋に会話を楽しむ自分」と「メタ的に問いを設計する自分」を共存させる&lt;/h3&gt;

&lt;p&gt;この失敗談は、「会話を楽しみすぎて問いを設計する観点が抜け落ちた」例でした。&lt;/p&gt;

&lt;p&gt;もちろんその逆の失敗もあります。問いの設計に意識が向きすぎた結果、&lt;strong&gt;会話を俯瞰しすぎて当事者感が薄れ、相手との距離が遠のく感覚&lt;/strong&gt;に陥る失敗です。&lt;br /&gt;
そうなると&lt;strong&gt;相手の感情や表情の変化を見落としてしまったり&lt;/strong&gt;、また自分のリアクションが薄くなったりと&lt;strong&gt;会話を楽しめていないような反応が出てしまったり&lt;/strong&gt;します。&lt;/p&gt;

&lt;p&gt;これらの例からわかるように、1on1をしているときは「&lt;strong&gt;純粋に相手との会話を楽しむ自分&lt;/strong&gt;」と「&lt;strong&gt;会話の流れをメタ的に捉え問いを設計する自分&lt;/strong&gt;」の間を行ったり来たりしています。&lt;br /&gt;
1on1がうまくいっているときは対話の中で頻度高く行き来できますが、振り返って失敗したなと感じるときはどちらかの自分に傾倒していたり、行き来の回数が少なかったりします。&lt;/p&gt;

&lt;p&gt;2つの自分をどのようなバランスで両立するかは、人や状況にとっても異なると思います。ですので&lt;strong&gt;「うまくバランスを取ろう」と思うより、1on1がうまくいかなかったときにバランスを振り返る&lt;/strong&gt;、という捉え方が良いでしょう。&lt;strong&gt;目指すべき指針ではなく、ふりかえりの基準&lt;/strong&gt;ということです。&lt;/p&gt;

&lt;p&gt;そして「2つの自分の往復」という観点では、今の私もまだまだ練習中です。&lt;/p&gt;

&lt;p&gt;ですが、この段階に到達できたのは、問いの設計に慣れてきたからだと言えます。2つの自分の往復に意識を向ける余裕が生まれたなと思ったら、それは問いかけの経験値が十分に溜まった合図なのかもしれませんね。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;私が1on1でやらかした多くの失敗を思い出しながら、当時の1on1を着実に前進させるためのアドバイスを書き表しました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1on1は探索(対話)を通じて、相手の変化や思考の深化を促すもの&lt;/li&gt;
  &lt;li&gt;傾聴は「する」ものではなく、好奇心を持って会話を楽しむ結果として「現れる」もの&lt;/li&gt;
  &lt;li&gt;「聞く」には、「話してもらう」。「話してもらう」には「問いかける」&lt;/li&gt;
  &lt;li&gt;問いを設計する3つのガイド
    &lt;ul&gt;
      &lt;li&gt;過去の出来事の意味付けを促す問い&lt;/li&gt;
      &lt;li&gt;暗黙的な価値観や前提を言語化させる問い&lt;/li&gt;
      &lt;li&gt;行動の背景にあるモチベーションや感情を掘り下げる問い&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;「会話を楽しむ自分」と「会話をメタ的に観察し問いを設計する自分」の行き来がうまくできたか、という基準で1on1をふりかえってみる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった内容でした。&lt;/p&gt;

&lt;p&gt;最後に少し抽象的な話をすると、&lt;strong&gt;今の私にとって「問い」は単なるテクニックではなく「自分のあり方」&lt;/strong&gt;なのだと思います。&lt;/p&gt;

&lt;p&gt;人とどのように関係をつくっていきたいか、人のどのような感情に興味を持つか、相手の変化や成長に伴奏したいという根源的な願いをどう実現させるか、信頼をどう得るか、といったことを&lt;strong&gt;問いを通じて体現している&lt;/strong&gt;のだと思います。&lt;/p&gt;

&lt;p&gt;ですので、たとえ意識的に問いを設計しなくとも、私がする問いかけには&lt;strong&gt;私を構成する要素&lt;/strong&gt;が色濃く出ているでしょうし、それにより相手が私を信頼し、私と良い関係を築いてくれたらとても幸せな気持ちになります。&lt;/p&gt;

&lt;p&gt;「マネージャーになったから1on1をしなきゃ」「ちゃんと傾聴しなきゃ」&lt;br /&gt;
なんて思っていた自分がここまで問いと向き合えるようになったことは、マネージャーとして一回り成長した証なのかもしれません。&lt;/p&gt;

&lt;p&gt;よければ、皆さんも「問い」に向き合ってみてください。&lt;/p&gt;</content><author><name></name></author><summary type="html">「1on1では聞く側に徹しましょう」「8割以上の時間を部下の話に耳を傾けるべき」 こういったアドバイスに私も従っていた時期がありました。</summary></entry><entry><title type="html">“我々はなぜここにいるのか”の問いを手放した理由 - 心の発達理論から学ぶEMの問いの設計</title><link href="https://aloerina01.github.io/blog/2025-05-07-1" rel="alternate" type="text/html" title="“我々はなぜここにいるのか”の問いを手放した理由 - 心の発達理論から学ぶEMの問いの設計" /><published>2025-05-07T00:00:00+00:00</published><updated>2025-05-07T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-05-07-1">&lt;p&gt;最近1on1やファシリテーションでの問いかけがうまく“効いていない”感覚になることがありました(おそらく昔から効いてない場面はあったのですが、最近それに自覚的になりました)。&lt;/p&gt;

&lt;p&gt;その例のひとつが、「&lt;strong&gt;私/我々はなぜここにいるのか&lt;/strong&gt;」という問いです。&lt;/p&gt;

&lt;p&gt;この問いはアジャイルの文脈等で度々登場します。私/私たちが特定の活動をする根本的な目的や存在意義を明確にするための問いです。&lt;/p&gt;

&lt;p&gt;この問いは、問いかけ方やタイミング、または心理的安全性など最低限のことに気をつければ&lt;strong&gt;万人に有効だという前提&lt;/strong&gt;でこれまで扱ってきました。&lt;/p&gt;

&lt;p&gt;しかし私は、いくつかの実践経験とある理論から、&lt;strong&gt;この問いがそもそも有効でない相手がいる&lt;/strong&gt;ことを理解しました。これまで有用な武器であったこの問いを手放す決断に至った経緯と学びを共有します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#問いがうまく刺さらなかった経験&quot; id=&quot;markdown-toc-問いがうまく刺さらなかった経験&quot;&gt;問いがうまく刺さらなかった経験&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#キーガンの心の発達理論を学ぶ&quot; id=&quot;markdown-toc-キーガンの心の発達理論を学ぶ&quot;&gt;キーガンの「心の発達理論」を学ぶ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot; id=&quot;markdown-toc-発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot;&gt;発達段階は進めば良いわけではない - 理論の詳細を学ぶ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#どういう問いを設計すべきだったか&quot; id=&quot;markdown-toc-どういう問いを設計すべきだったか&quot;&gt;どういう問いを設計すべきだったか&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#まとめ---各段階に向けた問いの設計方針&quot; id=&quot;markdown-toc-まとめ---各段階に向けた問いの設計方針&quot;&gt;まとめ - 各段階に向けた問いの設計方針&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#第3段階向け&quot; id=&quot;markdown-toc-第3段階向け&quot;&gt;第3段階向け&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#第4段階向け&quot; id=&quot;markdown-toc-第4段階向け&quot;&gt;第4段階向け&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おまけ---私が目指す自律的チームに必要な発達段階&quot; id=&quot;markdown-toc-おまけ---私が目指す自律的チームに必要な発達段階&quot;&gt;おまけ - 私が目指す「自律的チーム」に必要な発達段階&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おまけ---第3第4への移行支援の3ステップ&quot; id=&quot;markdown-toc-おまけ---第3第4への移行支援の3ステップ&quot;&gt;おまけ - 第3→第4への移行支援の3ステップ&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-外在化暗黙的に信じている価値観前提を言葉にする&quot; id=&quot;markdown-toc-1-外在化暗黙的に信じている価値観前提を言葉にする&quot;&gt;1. “外在化”：暗黙的に信じている価値観・前提を言葉にする&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-相対化信じている枠組みが唯一ではないと気づく&quot; id=&quot;markdown-toc-2-相対化信じている枠組みが唯一ではないと気づく&quot;&gt;2. “相対化”：信じている枠組みが“唯一ではない”と気づく&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-内在化自分の価値観や判断軸をつくり始める&quot; id=&quot;markdown-toc-3-内在化自分の価値観や判断軸をつくり始める&quot;&gt;3. “内在化”：自分の価値観や判断軸をつくり始める&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#移行支援で気をつけること&quot; id=&quot;markdown-toc-移行支援で気をつけること&quot;&gt;移行支援で気をつけること&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;問いがうまく刺さらなかった経験&quot;&gt;問いがうまく刺さらなかった経験&lt;/h3&gt;

&lt;p&gt;「私/我々はなぜここにいるのか」の問いに対して以下のような反応を得たことがありました。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「え、えっと…このプロダクトの担当だから？それ以外に理由ってあるの？」(&lt;strong&gt;混乱&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;「そんなに深く考えたことありませんでした」(&lt;strong&gt;防衛的態度&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;「まあ、やっぱり人の役に立ちたいからですかね」(&lt;strong&gt;本音ではない同調&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これらの反応から、自身の胸の奥底にあるものを探究する&lt;strong&gt;「内的な意味付け」という行為の難易度は人によって違うかもしれない&lt;/strong&gt;と仮説を立てたことが、今回の発端でした。&lt;/p&gt;

&lt;h3 id=&quot;キーガンの心の発達理論を学ぶ&quot;&gt;キーガンの「心の発達理論」を学ぶ&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;心の発達理論&lt;/strong&gt;または&lt;strong&gt;構成的発達理論&lt;/strong&gt;と呼ばれる考えがあります。&lt;/p&gt;

&lt;p&gt;これは人間の意識の発達を5つの段階で表し、個人がどのように自己と世界を理解し意味付けを行うかが段階的に進化すると説明しています。&lt;/p&gt;

&lt;p&gt;今回注目したいのは、成人が最も多く留まるとされる&lt;strong&gt;第3段階&lt;/strong&gt;です。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;段階&lt;/th&gt;
      &lt;th&gt;名称&lt;/th&gt;
      &lt;th&gt;特徴&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;第1段階&lt;/td&gt;
      &lt;td&gt;衝動的心性&lt;br /&gt;(Impulsive Mind)&lt;/td&gt;
      &lt;td&gt;幼児期に見られ、感覚や衝動に支配される。自己と他者の区別が未発達。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第2段階&lt;/td&gt;
      &lt;td&gt;帝国的心性&lt;br /&gt;(Imperial Mind)&lt;/td&gt;
      &lt;td&gt;自己中心的で、自分の欲求や利益を最優先する。規則や他者の視点を取り入れることが難しい。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第3段階&lt;/td&gt;
      &lt;td&gt;社会化された心性&lt;br /&gt;(Socialized Mind)&lt;/td&gt;
      &lt;td&gt;他者の期待や社会的規範に基づいて自己を形成する。所属する集団や関係性が自己認識に大きな影響を与える。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第4段階&lt;/td&gt;
      &lt;td&gt;自己主導的心性&lt;br /&gt;(Self-Authoring Mind)&lt;/td&gt;
      &lt;td&gt;自らの価値観や信念に基づいて意思決定を行う。内的なコンパスを持ち、他者の期待から独立した自己を確立する。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第5段階&lt;/td&gt;
      &lt;td&gt;自己変容的心性&lt;br /&gt;(Self-Transforming Mind)&lt;/td&gt;
      &lt;td&gt;自己の枠組みや信念を相対化し、複数の視点を統合する。自己や世界の複雑性を受け入れ、継続的な変化を追求する。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;第3段階(社会化された自己)は、以下のような特徴を持ちます。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;自己とは&lt;strong&gt;他者との関係の中で規定されるもの&lt;/strong&gt;（自分の価値や存在意義は、外から与えられる）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;「役に立つこと」「期待に応えること」が最優先&lt;/strong&gt;の倫理的指針になる&lt;/li&gt;
  &lt;li&gt;内面的な欲求や信念は未分化で、&lt;strong&gt;「私は何がしたいのか」より「何が求められているか」&lt;/strong&gt;が判断軸になる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;したがって、「なぜここにいるのか？」という内的動機を問う構造は第3段階の枠組みの外にあるため、そもそもピントが合いづらいのです。&lt;/p&gt;

&lt;p&gt;私の事例に戻ると、私が問いかけた相手は決して怠けていたり理解力がないのではなく、&lt;strong&gt;仕事における「なぜ（目的・意義）」を、役割や所属といった外部的な基準で意味づける段階にいる&lt;/strong&gt;ために、内的な意味付けを期待する問いかけは思考様式にそぐわなかったと言えるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;発達段階は進めば良いわけではない---理論の詳細を学ぶ&quot;&gt;発達段階は進めば良いわけではない - 理論の詳細を学ぶ&lt;/h3&gt;

&lt;p&gt;段階は「能力の序列」ではなく、&lt;strong&gt;自己を捉える軸の違い&lt;/strong&gt;です。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第3段階は「つながりと忠誠」を大切にする&lt;/li&gt;
  &lt;li&gt;第4段階は「原則と自律性」を土台にする&lt;/li&gt;
  &lt;li&gt;第5段階は「複数の枠組みの統合と脱構築」を受け入れる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;倫理観、善悪、正しさの定義&lt;/strong&gt;も段階で変化します。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;第3段階：「他者をがっかりさせないこと」が善&lt;/li&gt;
  &lt;li&gt;第4段階：「自らの信念と責任を貫くこと」が善&lt;/li&gt;
  &lt;li&gt;第5段階：「信念や自己概念すら再構成できる柔軟さ」が善&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;例えばオペレーション中心の職務では第3段階的な動機づけが力を発揮するなど、職種や役割によってフィットする段階は変わります。なので&lt;strong&gt;段階を進めば良いわけではない&lt;/strong&gt;、ということを強調しておきます。EMとして&lt;strong&gt;メンバーの段階を無理に変化させる気はありません&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;理論を別の切り口で説明してみます。&lt;/p&gt;

&lt;p&gt;心の発達理論(Subject-Object Theory of Development)では、&lt;strong&gt;各段階で「主観（Subject）」として捉えていたものを、次の段階で「客体（Object）」として認識できるようになること&lt;/strong&gt;が発達の鍵とされています。つまり、以前は無意識に影響を受けていた信念や価値観を&lt;strong&gt;意識的&lt;/strong&gt;に捉え、再構築する能力が発達を促進します。&lt;/p&gt;

&lt;h3 id=&quot;どういう問いを設計すべきだったか&quot;&gt;どういう問いを設計すべきだったか&lt;/h3&gt;

&lt;p&gt;第3段階の人に、自分の心の奥を探るきっかけを与えたいのであれば&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「どんなときに“役に立てた”と感じた？」&lt;/li&gt;
  &lt;li&gt;「誰に喜ばれると自分も嬉しい？」&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった具合に、&lt;strong&gt;「他者との関係性」を起点とした問い&lt;/strong&gt;が適していたのでしょう。これを考慮せず、全員に同じように「私/私たちはなぜここにいるのか」と問いかけることは不適切だったと今では考えています。&lt;/p&gt;

&lt;h3 id=&quot;まとめ---各段階に向けた問いの設計方針&quot;&gt;まとめ - 各段階に向けた問いの設計方針&lt;/h3&gt;

&lt;p&gt;ここまでの学びを踏まえて、第3段階・第4段階の人に向けてどのように問いを設計するか、方針をまとめます。いずれも、&lt;strong&gt;それぞれの段階の思考様式に沿った問いかけ&lt;/strong&gt;と、&lt;strong&gt;自己の段階を自覚するきっかけになり得る問いかけ&lt;/strong&gt;をすることが基本方針です。&lt;/p&gt;

&lt;h4 id=&quot;第3段階向け&quot;&gt;第3段階向け&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;自己と他者の境界づけの支援&lt;/strong&gt;（アイデンティティと期待の分離を支援する）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;内的対話の導入&lt;/strong&gt;（たとえば「あなたの中の声には複数あるとしたら？」）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;価値観の言語化支援&lt;/strong&gt;（本人がまだ自分の中に持っていない構造に言葉を与える）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;第4段階向け&quot;&gt;第4段階向け&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;ロジックやパターンの明確化支援&lt;/strong&gt;（価値基準や信念の明確化を支援する）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;一貫性の問い直し&lt;/strong&gt;（たとえば「それはいつから正しいと感じていますか？」）&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;前提を問い直す支援&lt;/strong&gt;（メタ構造の入り口に立たせる）&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;おまけ---私が目指す自律的チームに必要な発達段階&quot;&gt;おまけ - 私が目指す「自律的チーム」に必要な発達段階&lt;/h3&gt;

&lt;p&gt;心の発達理論に照らし合わせると、&lt;strong&gt;「自律性」とは第4段階以降で初めて&lt;/strong&gt;内発的な意味をもって成立する概念です。&lt;/p&gt;

&lt;p&gt;言い換えると、第3段階的な「指示を待たずに動く」といった&lt;strong&gt;『表面的な自律的ふるまい』&lt;/strong&gt;と、第4段階的な「自分の軸で判断し責任を持つ」といった&lt;strong&gt;『構造的な自律性』&lt;/strong&gt;は異なると言えます。&lt;/p&gt;

&lt;p&gt;各段階と自律性の関係はこのようになります。&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;段階&lt;/th&gt;
      &lt;th&gt;特徴&lt;/th&gt;
      &lt;th&gt;「自律性」との関係&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;第2段階（道具的段階）&lt;/td&gt;
      &lt;td&gt;損得とルールによる行動&lt;/td&gt;
      &lt;td&gt;自律性は存在せず、明確な報酬や罰でしか動けない&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第3段階（他者依存段階）&lt;/td&gt;
      &lt;td&gt;他者の期待に従って行動&lt;/td&gt;
      &lt;td&gt;自律的に見える行動も「評価されるから」であり、本質的には依存的&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第4段階（自己主導段階）&lt;/td&gt;
      &lt;td&gt;自分の価値観・原則に基づいて意思決定&lt;/td&gt;
      &lt;td&gt;初めて&lt;strong&gt;内在的な自律性&lt;/strong&gt;が発生し、他者と協働しつつも“自分の意志”で動ける&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;第5段階（自己変容段階）&lt;/td&gt;
      &lt;td&gt;自分の枠組みをも相対化できる柔軟性&lt;/td&gt;
      &lt;td&gt;「自律と非自律の揺らぎ」すら受容しながら選択できる次元に&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;これを踏まえると、私が目指す「自律的なチーム」には、&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;少なくとも「チーム文化の形成に強く影響を与える中心層」が第4段階以上であることは不可欠&lt;/li&gt;
  &lt;li&gt;第3段階の人が数名いることは問題ではなく、むしろ「信頼されたい」「貢献したい」という彼らの動機は、適切に設計された関係性やフィードバックの中でポジティブに活きる&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;と考えられます。&lt;/p&gt;

&lt;p&gt;ですので僕は今後、メンバー各々の段階を意識したうえで問いをデザインし、そして万が一「全員が第3段階」なチームである場合のみ、一部のメンバーに対し段階を上げる支援をしようと考えています。&lt;/p&gt;

&lt;h3 id=&quot;おまけ---第3第4への移行支援の3ステップ&quot;&gt;おまけ - 第3→第4への移行支援の3ステップ&lt;/h3&gt;

&lt;p&gt;段階を上げる支援をするならどうするかについても考えてみます。まだ実践していないので「支援の設計」の域を出ていないことに留意して読んでもらえればと思います。&lt;/p&gt;

&lt;p&gt;さて、第3段階の特徴を改めて言語化してみましょう。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;他者の期待&lt;/strong&gt;に強く同一化している&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;「良い人」「求められる自分」でいること&lt;/strong&gt;に価値を感じる&lt;/li&gt;
  &lt;li&gt;自分の意見や価値観は、他者の枠組みに埋もれて見えにくい&lt;/li&gt;
  &lt;li&gt;「どう思われるか」が最重要の意思決定軸になる&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;責任や目的を“自分の内側”から引き出すのが苦手&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これを踏まえて移行のステップをこのように考えてみます。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“&lt;strong&gt;外在化&lt;/strong&gt;”：暗黙的に信じている価値観・前提を言葉にする&lt;/li&gt;
  &lt;li&gt;“&lt;strong&gt;相対化&lt;/strong&gt;”：信じている枠組みが“唯一ではない”と気づく&lt;/li&gt;
  &lt;li&gt;“&lt;strong&gt;内在化&lt;/strong&gt;”：自分の価値観や判断軸をつくり始める&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;1-外在化暗黙的に信じている価値観前提を言葉にする&quot;&gt;1. “外在化”：暗黙的に信じている価値観・前提を言葉にする&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：本人が「自分が当然だと思っていた考え方が“前提”である」と気づくこと&lt;/li&gt;
  &lt;li&gt;方法：本人の言動の背景にある「暗黙のルール（例：期待に応えなければならない）」を探る&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「それをやらないと、何が起こると感じますか？」&lt;/li&gt;
      &lt;li&gt;「そう思うようになったきっかけって、何か心当たりありますか？」&lt;/li&gt;
      &lt;li&gt;「“〜すべき”って、誰が決めたんでしょう？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;2-相対化信じている枠組みが唯一ではないと気づく&quot;&gt;2. “相対化”：信じている枠組みが“唯一ではない”と気づく&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：「他者の期待」と「自分の価値観」が異なる可能性に気づかせる&lt;/li&gt;
  &lt;li&gt;方法：対立する意見や価値観に出会わせ、自己の“内在的軸”の不在を実感させる&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「Aさんのやり方と、あなたのやり方では、どちらが正しいと思いますか？その理由は？」&lt;/li&gt;
      &lt;li&gt;「そのやり方は、“あなたにとって”しっくりきてますか？」&lt;/li&gt;
      &lt;li&gt;「もし誰の期待もなかったとしたら、あなた自身はどうしたいですか？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;3-内在化自分の価値観や判断軸をつくり始める&quot;&gt;3. “内在化”：自分の価値観や判断軸をつくり始める&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;ゴール：本人の内面からの理由・信念によって意思決定できるようにする&lt;/li&gt;
  &lt;li&gt;方法：小さな選択や挑戦の場で、自分の意志で決め、振り返るプロセスを支援する&lt;/li&gt;
  &lt;li&gt;使える問い：
    &lt;ul&gt;
      &lt;li&gt;「あなたが“やりたい”と感じる理由は何ですか？」&lt;/li&gt;
      &lt;li&gt;「それを選んだあなたを、どう思いますか？」&lt;/li&gt;
      &lt;li&gt;「その判断は、あなたが大切にしている何を守ろうとしていますか？」&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;移行支援で気をつけること&quot;&gt;移行支援で気をつけること&lt;/h4&gt;

&lt;p&gt;変化は時間がかかるものですし、そもそも段階を上げることはその個人にとって必要なこととは限りません。あくまで私が「チームにとって必要」と感じただけで、個人に焦点を当てれば、必ずしも段階を変えたいわけではないでしょう。&lt;/p&gt;

&lt;p&gt;ですので、&lt;strong&gt;問いすぎず、導かず、変化を急かさないこと&lt;/strong&gt;に気をつけます。&lt;/p&gt;

&lt;p&gt;また外在化→相対化→内在化の3ステップはすべて問いかけによって行うので、問われたメンバーは「今まで向き合ったことのない問い」と正面から向き合うことになるでしょう。それもやはり時間がかかることであり、頭の中だけでは結論は出しにくいことが多いかもしれません。&lt;/p&gt;

&lt;p&gt;実践による気づきと内省を繰り返すことで少しずつステップが進むと考えられます。その&lt;strong&gt;精神的・時間的余白を十分に確保すること&lt;/strong&gt;を重視します。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;今まで「問いかけ」は聖なる武器であり、中でも様々な書籍等で登場する「私/我々はなぜここにいるのか」という問いは有用な武器だと考えてきました。&lt;/p&gt;

&lt;p&gt;ですが、それは私の心の発達段階というレンズを通しての捉え方でした。人によってはその問いでは適切に自分自身に向き合えないこともあると、理論を通して、同時に肌感をもって分かってきました。&lt;/p&gt;

&lt;p&gt;これを読んでいるEMの中には、これを当たり前に感じる人もいるでしょうし、何を言っているかピンとこない人もいるかもしれません。&lt;/p&gt;

&lt;p&gt;様々な段階にいるであろう読者の方々が、記事を通していくつかの発達段階について理解し、そして私がこっそり仕込んだ各段階の実践例に触れ、1つでも新しい気付きに繋がれば幸いです。&lt;/p&gt;

&lt;p&gt;この機に、改めて私とともに問いの再デザインをしてみるのはいかがでしょう？&lt;/p&gt;</content><author><name></name></author><summary type="html">最近1on1やファシリテーションでの問いかけがうまく“効いていない”感覚になることがありました(おそらく昔から効いてない場面はあったのですが、最近それに自覚的になりました)。</summary></entry><entry><title type="html">「若手が育っていない」「優秀な人に負担が偏っている」と感じたときに立ち返ること</title><link href="https://aloerina01.github.io/blog/2025-03-31-1" rel="alternate" type="text/html" title="「若手が育っていない」「優秀な人に負担が偏っている」と感じたときに立ち返ること" /><published>2025-03-31T00:00:00+00:00</published><updated>2025-03-31T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-03-31-1">&lt;p&gt;チームでプロダクト開発をしているものの、ジュニアエンジニアが十分に成長していない…。1人でやれるタスクは増えているものの、それなりの規模の開発案件を責任を持ってやり遂げるだけのオーナーシップやリーダーシップがなかなか養われない…。&lt;/p&gt;

&lt;p&gt;一方で、難易度の高い案件やスケジュールの厳しい案件などは特定のシニアエンジニアの馬力によって乗り越えているため、特定の人に負荷が集中してばかり…。&lt;/p&gt;

&lt;p&gt;こんなチーム状況が1〜2年近く続いているとしたら、そのチームには改善の余地があります。&lt;/p&gt;

&lt;p&gt;短期的にはシニアエンジニアの馬力頼りで走り切るサバイバルモードが必要な場面もあります。しかしそれが1年以上も続けばシニアエンジニアだって疲弊しますし、「なぜ自分はロクに変化の起きないこのチームの面倒を見続けているのか」と不満を抱きチームを離れる可能性すらあるでしょう。&lt;/p&gt;

&lt;p&gt;つまりいつかは区切りをつけ学習モードへ切り替える必要があり、切り替えが起きない状況は、強い意思を持って手を加える必要があるということです。&lt;/p&gt;

&lt;p&gt;チームによって向き合うべき課題は違うので普遍的に使えるTipsはあまりないですが、上述のような&lt;strong&gt;サバイバル沼に陥りやすい要因&lt;/strong&gt;が経験から見えてきたので、チェックリスト的に共有します。&lt;/p&gt;

&lt;p&gt;……それにしても妙に具体的な”入り”だなと感じた人は勘が鋭いです。つまり私が失敗してきた事例とそこから得た学びを共有するということです。恥ずかしいですが山程失敗してきたので、学びのお裾分けをしてみようと思います。&lt;/p&gt;

&lt;h3 id=&quot;要因1-トップダウン的なタスクアサインをしている&quot;&gt;要因1: トップダウン的なタスクアサインをしている&lt;/h3&gt;

&lt;p&gt;シニアエンジニアやテックリードなどの特定の1人からチームメンバーにタスクを分配しているチームは注意が必要です。タスクを受け取るメンバーからすれば「与えられたタスクをやれば自分の役割を満たせる」と感じます。自分のタスク以外への興味が薄れ、チームとしてのアウトプットを意識しなくなります。&lt;/p&gt;

&lt;p&gt;その結果、チームメンバーはチーム全体やプロジェクト全体を俯瞰する視点を持つ機会や必要性がなく、リード的な視野・視座をいつまでも持てず、反面タスクを分配する特定の1人にのみ負担が集中します。&lt;/p&gt;

&lt;p&gt;おすすめの解決策は&lt;strong&gt;セルフアサイン&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;まずバックログアイテムや案件仕様書を『チーム全員のもの』と捉え、チームでタスク分解します。そして今回のイテレーションで着手する分だけ、各自が手を挙げる形式でセルフアサインします。予定より早く終わったときは分解したタスクの残りから追加でセルフアサインしても良いですし、チームメンバーを手助けしても良いでしょう。&lt;/p&gt;

&lt;p&gt;ポイントは&lt;strong&gt;バックログや案件を『チーム(メンバー全員)のもの』と捉えること&lt;/strong&gt;と、&lt;strong&gt;自らの意思でタスクを選択すること&lt;/strong&gt;です。これにより全体感を捉える視野や、チームのアウトプットを自分ごとと捉える機会が生まれます。&lt;/p&gt;

&lt;h3 id=&quot;要因2-状況の共有頻度が低いまた共有内容に関心がない&quot;&gt;要因2: 状況の共有頻度が低い、また共有内容に関心がない&lt;/h3&gt;

&lt;p&gt;日々の仕事内容についてチームメンバー間での共有頻度が低い場合や、共有内容への関心が薄い場合、要因①と同様にチームメンバーのリーダーシップやオーナーシップが育つチャンスを失います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;チームやプロダクトの状況を把握しそれに応じて自身の行動を調整する&lt;/strong&gt;、という一連の活動の延長線上に『リーダーシップ』が存在します。この行動を促すには、状況を把握する機会、そして自分の行動を調整する機会を増やすことが重要です。&lt;/p&gt;

&lt;p&gt;つまり、状況を知る機会が頻繁にあり、その場の内容に関心をもって臨めると良いというわけです。&lt;/p&gt;

&lt;p&gt;「そんなことは分かっていて、デイリースタンドアップをしているものの惰性的で形骸化している」といった場合は、場をチューニングしてみます。&lt;/p&gt;

&lt;p&gt;個人の進捗共有が目的ではなく、&lt;strong&gt;チームの計画やゴールのための再調整の場&lt;/strong&gt;であると目的を再確認し、それに向かうようファシリテーションすることでチューニングできます。それでも良くならない場合は、そのミーティングを一度消滅させ、新しい名前、新しい時間帯、新しいフォーマットで場作りをし、気分を一新することが効果的かもしれません。&lt;/p&gt;

&lt;h3 id=&quot;要因3-現状に問題がないので働き方のアップデートをしていない&quot;&gt;要因3: 現状に問題がないので働き方のアップデートをしていない&lt;/h3&gt;

&lt;p&gt;ふりかえりで意見が出なかったり、現状の仕事のプロセスに変化が起きなかったりといった状況が長く続くものの、『&lt;strong&gt;特段問題がないから現状維持で良い』という考えがチームに蔓延している場合、実はゆるやかにチームが衰退しているケースが多い&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;逆に考えてみると「現状に問題がある」というのは、問題が顕在化しているということです。&lt;br /&gt;
&lt;strong&gt;「問題がないから改善しない」は「問題が顕在化するまで何もしない」と言い換えられます&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;そして変化が起きない状況が続くにつれて、ますます変化は生まれにくくなります。日常的に新しい試みを積み重ねているチームと比べると、変化してこなかったチームにとって「変化は特別なこと」であり、変化への耐性が身についていません。つまり&lt;strong&gt;変わることへの抵抗感&lt;/strong&gt;が強いです。&lt;/p&gt;

&lt;p&gt;言い換えると、変化を日常的にし、「働き方は自ら考えアップデートするものだ」と捉えることで、チームのプロセスに対するオーナーシップが育ちます。&lt;/p&gt;

&lt;p&gt;オーナーシップが発揮され始めてくると「Aさんはミーティングの効率化に積極的」「Bさんはレビュープロセスへの関心が高い」といった具合に、各々の長所が見えてきます。そうなれば改善は加速し、チームメンバー一人ひとりの積極性ある行動が増え、行動が増えれば学びが増え、チームメンバーもチームも育っていくでしょう。&lt;/p&gt;

&lt;h3 id=&quot;要因4-ふりかえりをしているつもりだが働き方のアップデートをしていない&quot;&gt;要因4: ふりかえりをしているつもりだが、働き方のアップデートをしていない&lt;/h3&gt;

&lt;p&gt;「自分たちは改善活動をしている」と思っているが、その実態が「KPTを実施しているしコードのリファクタリングもしているが、&lt;strong&gt;メンバーの役割や仕事のプロセスについては何もアップデートしていない&lt;/strong&gt;」という状況であれば要注意です。&lt;/p&gt;

&lt;p&gt;「自分たちは継続的な改善活動をしている」と錯覚しやすい例が「(KPTなどの)ふりかえりフレームワークを使っている」「リファクタリングなどの技術的な改善をしている」の2つです。&lt;/p&gt;

&lt;p&gt;たしかにこれらは改善活動ではあります。&lt;/p&gt;

&lt;p&gt;しかし、やみくもに(本来のKPTの狙いを理解せずに)KPTをするだけでは十分な効果は得られません。コンセプトや効果を理解せずにフレームワークを利用するということは、「Reactよく分からないけど流行ってるから導入してみよう」と同じです。想像するまでもなく、その危うさは分かると思います。&lt;/p&gt;

&lt;p&gt;またリファクタリングは改善活動ではありますが、リファクタリングやライブラリのアップデートしか改善活動と呼べる活動がない場合、つまりコードベースに対する改善活動しかない場合、注意が必要です。&lt;/p&gt;

&lt;p&gt;この状況は、イテレーションの長さ・コミュニケーションパス・チーム構成・メンバー一人ひとりの役割等の&lt;strong&gt;『自分たちが従っているルールや条件』を完全に外部から与えられるものと認識していて、「ルールや条件も自分たちで変えていける余地がある」と捉えていない可能性があります&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;特に開発プロセスは、過去に一度組み立てたまま現在も変わらず運用していてチームのスケールに適応できていなかったり、プロダクト立ち上げ直後に突貫工事でつくったルールであり本当はメンテナンスが必要な状態であったりと、アップデートする余地が残っているケースが珍しくありません。&lt;/p&gt;

&lt;p&gt;ですがその問題をに目を向けず、ルールは偉い誰かが決めるものであり自分たちが考える必要はなく、ルールの中でコードを書くことだけが開発チームの仕事だと捉えていては、チームの最大パフォーマンスは発揮されませんしオーナーシップも生まれません。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自分たちのルールや働き方さえも自分たちで変え得るものだ&lt;/strong&gt;と捉えて改善していくことでオーナーシップが育ち、オーナーシップがあることで自然と自らの働き方をふりかえる習慣が生まれることは、なんとなく想像できるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相互に作用する&lt;/strong&gt;ものなので、まずは「自分たちの今の開発プロセスに改善の余地はないか」をチーム全員で見直すことで、良い循環の1歩目を踏み出せます。&lt;/p&gt;

&lt;p&gt;冒頭に挙げた例のように「リーダーシップやオーナーシップの有無」がシニアエンジニアとそうでないエンジニアの差(のひとつ)であるならば、この1歩目が、差を埋めるきっかけになるはずです。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;チームを眺めたときに感じ取れる危機感は他にも様々あります。このセンサーは経験で養えるものだと思うので、私よりも高感度な人もいればそうでない人もいるでしょうし、私自身も1年前より感度が良くなっていますし、来年は更に鋭くなることでしょう。&lt;/p&gt;

&lt;p&gt;ですので焦らず、今の自分たちに感じ取れるものから向き合っていけば良いと思っています。&lt;/p&gt;

&lt;p&gt;その中でも簡単に察知できる部分を、今回は書き出してみました。チームの危機を1つでも見つけるきっかけになれば幸いです。&lt;/p&gt;

&lt;p&gt;上述のように「問題が起きていないから自分たちは大丈夫」「改善活動してるから自分たちは大丈夫」と判断してしまうことがかつて自分にもありましたが、短期的な問題の有無に気を取られ過ぎると、記事タイトルにしたような「いつまでもメンバーのキャリアが前進していない」といった中長期の課題となってはね返ってきます。&lt;/p&gt;

&lt;p&gt;特に「キャリアが前進しているか」や「期待役割が変化しているか」は中〜長期の視点でメンバーと向き合わないと気付けない課題なので、目先のタスクに集中したいサバイバルフェーズでは気付きにくいです。&lt;/p&gt;

&lt;p&gt;理想的なことを言えば、中長期の課題が見つかる前に日々の改善を重ね、変化に慣れ、ひいては変化を歓迎し変化し続ける自律的なチームになることが、タイトルへの回答になります。&lt;/p&gt;

&lt;p&gt;といっても簡単ではないので(本当に簡単ではないので)、お互い地道に一歩ずつやっていきましょう。&lt;/p&gt;</content><author><name></name></author><summary type="html">チームでプロダクト開発をしているものの、ジュニアエンジニアが十分に成長していない…。1人でやれるタスクは増えているものの、それなりの規模の開発案件を責任を持ってやり遂げるだけのオーナーシップやリーダーシップがなかなか養われない…。</summary></entry><entry><title type="html">計画的にロールモデルを活用する</title><link href="https://aloerina01.github.io/blog/2025-02-12-1" rel="alternate" type="text/html" title="計画的にロールモデルを活用する" /><published>2025-02-12T00:00:00+00:00</published><updated>2025-02-12T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-02-12-1">&lt;p&gt;ロールモデルの存在は、&lt;strong&gt;日々の小さな行動改善&lt;/strong&gt;から&lt;strong&gt;キャリアの選択&lt;/strong&gt;まで、多くの場面で役立ちます。&lt;/p&gt;

&lt;p&gt;「ロールモデル」や「モデルケース」と私はよく呼びますが、マネジメントの中で意識的にこれらを活用することで、想像以上に幅広い効果を体感してきました。&lt;/p&gt;

&lt;p&gt;今回は、その事例を紹介します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#ロールモデルの活用事例&quot; id=&quot;markdown-toc-ロールモデルの活用事例&quot;&gt;&lt;strong&gt;ロールモデルの活用事例&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#マネージャーにとってもロールモデルが役立つ&quot; id=&quot;markdown-toc-マネージャーにとってもロールモデルが役立つ&quot;&gt;&lt;strong&gt;マネージャーにとってもロールモデルが役立つ&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#1-フィードバックの空中戦を避ける&quot; id=&quot;markdown-toc-1-フィードバックの空中戦を避ける&quot;&gt;&lt;strong&gt;1. フィードバックの空中戦を避ける&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#2-チーム文化を根付かせる&quot; id=&quot;markdown-toc-2-チーム文化を根付かせる&quot;&gt;&lt;strong&gt;2. チーム文化を根付かせる&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#3-新たなマネージャー候補を生み出す&quot; id=&quot;markdown-toc-3-新たなマネージャー候補を生み出す&quot;&gt;&lt;strong&gt;3. 新たなマネージャー候補を生み出す&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ロールモデルとの接点をつくる方法&quot; id=&quot;markdown-toc-ロールモデルとの接点をつくる方法&quot;&gt;&lt;strong&gt;ロールモデルとの接点をつくる方法&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ロールモデルの活用事例&quot;&gt;&lt;strong&gt;ロールモデルの活用事例&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;たとえばジュニアエンジニアがキャリアのレベルアップを考えるとき、&lt;strong&gt;自身とロールモデルを比較することで取るべき行動を浮き彫り&lt;/strong&gt;にできます。成果だけでなく、プロセスや学習の仕方も含めて比較すると、より実践的なヒントが得られるでしょう。&lt;/p&gt;

&lt;p&gt;シニアエンジニアが自身の価値を追求する際にも、ロールモデルは参考になります。&lt;strong&gt;成功パターンをそのまま適用できるケースは少ないですが、共通項を見出したり、体験談を聞いたりすることで、新たな視点を得られる&lt;/strong&gt;ことがあります。&lt;/p&gt;

&lt;p&gt;また、キャリアのステージを問わず、Web業界は数年後の自分の姿が想像しにくいものです。しかし&lt;strong&gt;2〜5年先を歩む先輩の姿がいくつか見えるだけで、将来像を描きやすく&lt;/strong&gt;なります。&lt;br /&gt;
ロールモデルが歩いた道を丁寧にたどるというよりは、&lt;strong&gt;複数のロールモデルの背中を見ながら紆余曲折しその過程で自分の道を発見していく&lt;/strong&gt;というイメージです。&lt;/p&gt;

&lt;p&gt;ここまでいくつか簡単な事例を挙げてみました。&lt;/p&gt;

&lt;p&gt;ロールモデルを意識したことがない人でも、振り返ってみると「あのとき、あの人のやり方を参考にした」という経験があると思います。&lt;strong&gt;この経験が生まれるチャンスを計画的にマネジメントに組み込んでいく&lt;/strong&gt;ことが今回のテーマというわけです。&lt;/p&gt;

&lt;h3 id=&quot;マネージャーにとってもロールモデルが役立つ&quot;&gt;&lt;strong&gt;マネージャーにとってもロールモデルが役立つ&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;ロールモデルを意識することで、&lt;strong&gt;マネジメントする側&lt;/strong&gt;の私自身にも恩恵があります。&lt;/p&gt;

&lt;h4 id=&quot;1-フィードバックの空中戦を避ける&quot;&gt;&lt;strong&gt;1. フィードバックの空中戦を避ける&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;エンジニアがおこなう設計の良し悪しの議論と同様で、フィードバックをする際にも目に見える”モノ”がないと認識のズレが起きがちです。モデルケースが目に見える”モノ”の役割をしてくれることがあります。&lt;/p&gt;

&lt;h4 id=&quot;2-チーム文化を根付かせる&quot;&gt;&lt;strong&gt;2. チーム文化を根付かせる&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;人は所属する集団の”色”に染まる傾向&lt;/strong&gt;にあります。これを利用して、マネージャーやリーダーなど&lt;strong&gt;チームへの影響力を持つ人が、メンバーに推奨したい行動を率先してやることでチームに習慣や文化を根付かせる&lt;/strong&gt;ことができます。&lt;/p&gt;

&lt;p&gt;たとえば「小さなことでも称賛と感謝を忘れないチーム」を目指すのであれば、影響力のあるマネージャー等が称賛と感謝を日々実践しモデルケースとなると効果的でしょう。&lt;/p&gt;

&lt;p&gt;感謝を伝え合うワークショップ等を開催する手もありますが、その場限りで終わりがちです。定着を狙う場合は、&lt;strong&gt;身近なモデルケースによりじわじわ浸透させる&lt;/strong&gt;ことを私は意識します。&lt;/p&gt;

&lt;h4 id=&quot;3-新たなマネージャー候補を生み出す&quot;&gt;&lt;strong&gt;3. 新たなマネージャー候補を生み出す&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;多くのエンジニアにとって、マネージャーは「何をしているか分からない」「楽しそうに見えない」存在になりがちです。プレイヤーだった頃の私にとってもそうでした。&lt;/p&gt;

&lt;p&gt;その結果、&lt;strong&gt;「なりたい」と思われにくい役割になってしまう&lt;/strong&gt;のですが、これを解消するために、メンバーに&lt;strong&gt;マネージャーの仕事内容を説明し、理解を深めた上でマネージャーを観察してもらう&lt;/strong&gt;ことを実践しています。&lt;/p&gt;

&lt;p&gt;マネージャーにとって、次のマネージャー候補を育成する(見つける)ことは難易度の高い課題ですが、この下準備がきっかけとなり新たなマネージャーが生まれた経験があります。&lt;/p&gt;

&lt;p&gt;また、マネージャーを観察することで、&lt;strong&gt;エンジニアがすぐに活かせるTipsを発見していた&lt;/strong&gt;事例もあります。たとえばテックリードが『人を巻き込み大きな成果を導く方法』を学ぶケースや、後輩のメンターを担当するエンジニアが『権限委譲の仕方』を参考にするケースなどがありました。&lt;/p&gt;

&lt;p&gt;こういった経験もまた、いずれマネジメントに興味を持つきっかけになることがあるので、布石としての効果があるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;ロールモデルとの接点をつくる方法&quot;&gt;&lt;strong&gt;ロールモデルとの接点をつくる方法&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;最後に、どのようにロールモデルとチームメンバーとの接点をつくっているかを紹介します。&lt;/p&gt;

&lt;p&gt;私は『&lt;strong&gt;その人の協業者の中からロールモデルを選ぶ&lt;/strong&gt;』方法を取ることが多いです。具体的には、&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;協業者の特性、スキル、働き方、価値観、これまでのキャリア等の&lt;strong&gt;情報を集めてマップを描く&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;メンバー各々の状況に合わせて、マップから&lt;strong&gt;適切なロールモデルを選び伝える&lt;/strong&gt;、また&lt;strong&gt;観察する観点を伝える&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;加えて、ロールモデルとメンバーの直接的な関わりの機会をつくりたい場合は、&lt;strong&gt;プロジェクトのふりかえりの場で同じテーブルにつく機会を設ける&lt;/strong&gt;などの工夫をすることもあります。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;人を観察することが業務の一環である&lt;/strong&gt;マネージャーにとって、また&lt;strong&gt;チームメンバー各々の現状や次のステップについて誰よりも高解像度に把握している&lt;/strong&gt;マネージャーにとって、さらには&lt;strong&gt;ロールをまたいでコミュニケーションハブになりやすい&lt;/strong&gt;マネージャーにとって、この方法は手間をかけずに実践できます。&lt;/p&gt;

&lt;p&gt;もしかしたら、協業者が多く、各分野の専門家が多い今の職場だから使える手法かもしれませんが、手間をかけずに実践できる「ロールモデルの活用」は、今の私にとって有用な手法のひとつです。&lt;/p&gt;

&lt;p&gt;以上です。&lt;br /&gt;
ぜひ皆さんの回りのロールモデルの事例もお聞かせください。その他感想は&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までどうぞ。&lt;/p&gt;</content><author><name></name></author><summary type="html">ロールモデルの存在は、日々の小さな行動改善からキャリアの選択まで、多くの場面で役立ちます。</summary></entry><entry><title type="html">チームがより自律的になるWorkshopと、チーム成熟度CheatSheetをつくりました</title><link href="https://aloerina01.github.io/blog/2025-01-16-1" rel="alternate" type="text/html" title="チームがより自律的になるWorkshopと、チーム成熟度CheatSheetをつくりました" /><published>2025-01-16T00:00:00+00:00</published><updated>2025-01-16T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2025-01-16-1">&lt;p&gt;エンジニア一人ひとりの期待役割がスキルやキャリアにより変化するように、&lt;strong&gt;チームも成熟度やフェーズに応じて期待役割が変化します&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;様々な期待役割を持つチームメンバーの活動が重なり合い生まれる『&lt;strong&gt;チームのプロセスや成果&lt;/strong&gt;』&lt;strong&gt;がどうあるべきか&lt;/strong&gt;、がチームの期待役割であると言えます。&lt;strong&gt;チームメンバー各々がこれに目を向ける&lt;/strong&gt;ことで、より効果的に相互作用し、高い成果を出し、&lt;strong&gt;自律的に活動をするチームに近づけます&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;定期的にふりかえりを実施しているチームであっても、「私たちのチームはどのくらい成熟しているのか？」「私たちのチームは周囲からどのような期待を持たれているのか？」といったことを見つめ直す機会はなかなかありません。&lt;/p&gt;

&lt;p&gt;現に私がマネジメントするいくつかのフロントエンドエンジニアチームでも、チームメンバー自身がこれらの問いに向き合う機会はあまりなかったです。&lt;/p&gt;

&lt;p&gt;そこでチームの成熟度と期待役割について共通認識をつくるWorkshopを実施しました。今回はその内容の紹介と、Workshop内で読み合わせたCheatSheetを共有します。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#cheatsheetの紹介から&quot; id=&quot;markdown-toc-cheatsheetの紹介から&quot;&gt;CheatSheetの紹介から&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#チームの成熟度目安シート&quot; id=&quot;markdown-toc-チームの成熟度目安シート&quot;&gt;『チームの成熟度目安』シート&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#チームの成熟度に応じた期待役割シート&quot; id=&quot;markdown-toc-チームの成熟度に応じた期待役割シート&quot;&gt;『チームの成熟度に応じた期待役割』シート&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#workshopの流れ&quot; id=&quot;markdown-toc-workshopの流れ&quot;&gt;Workshopの流れ&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#イントロ&quot; id=&quot;markdown-toc-イントロ&quot;&gt;イントロ&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step1-成熟度について知る&quot; id=&quot;markdown-toc-step1-成熟度について知る&quot;&gt;Step1. 成熟度について知る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step2-成熟度を測る&quot; id=&quot;markdown-toc-step2-成熟度を測る&quot;&gt;Step2. 成熟度を測る&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#step3-期待役割と照らし合わせる&quot; id=&quot;markdown-toc-step3-期待役割と照らし合わせる&quot;&gt;Step3. 期待役割と照らし合わせる&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#おわりに&quot; id=&quot;markdown-toc-おわりに&quot;&gt;おわりに&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cheatsheetの紹介から&quot;&gt;CheatSheetの紹介から&lt;/h3&gt;

&lt;p&gt;まずはCheatSheetの紹介からします。&lt;/p&gt;

&lt;p&gt;もともとこれを読み物として各チームに共有するつもりだったのですが、読むだけでは理解がはかどらないと思いWorkshop化した経緯があります。ですのでWorkshopで提供するコンテンツの大部分は以下2つのシートになります。&lt;/p&gt;

&lt;h4 id=&quot;チームの成熟度目安シート&quot;&gt;『チームの成熟度目安』シート&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Cheatsheet1.jpg&quot; alt=&quot;『チームの成熟度目安』シート&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;チームの成熟度に応じた期待役割シート&quot;&gt;『チームの成熟度に応じた期待役割』シート&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Cheatsheet2.jpg&quot; alt=&quot;『チームの成熟度に応じた期待役割』シート&quot; /&gt;&lt;/p&gt;

&lt;p&gt;これらを&lt;strong&gt;読み合わせた際に生まれる『コミュニケーション』がWorkshopにおける最大の価値&lt;/strong&gt;となることを意識してWorkshopを設計しました。以下に実際の流れに沿って紹介します。&lt;/p&gt;

&lt;h3 id=&quot;workshopの流れ&quot;&gt;Workshopの流れ&lt;/h3&gt;

&lt;h4 id=&quot;イントロ&quot;&gt;イントロ&lt;/h4&gt;

&lt;p&gt;&lt;img alt=&quot;イントロ&quot; src=&quot;/assets/2025-01-16/Introduction.jpg&quot; style=&quot;border:0.5px solid #CFD8DC;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本記事の冒頭でも述べたように、『個人の期待役割』だけでなく『チームの期待役割』にも向き合う重要性を伝え、Workshopのゴールをすり合わせます。アイスブレイクが必要であればこの前後でやります。&lt;/p&gt;

&lt;h4 id=&quot;step1-成熟度について知る&quot;&gt;Step1. 成熟度について知る&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step1.jpg&quot; alt=&quot;Step1. 成熟度について知る&quot; /&gt;&lt;/p&gt;

&lt;p&gt;CheatSheetの1枚目を使います。&lt;/p&gt;

&lt;p&gt;このシートではチームの成熟度を簡易的に Senior / Middle / Junior の3段階に分けていて、&lt;strong&gt;それぞれの成熟度に到達したチームがどのような状態か&lt;/strong&gt;を表現しています。&lt;/p&gt;

&lt;p&gt;あらかじめ用意している内容は薄く、&lt;strong&gt;参加者の記入をもってCheatSheetとして完成する&lt;/strong&gt;ことを想定しています。たとえば「アウトプットの品質」「ドキュメントの管理状況」「存続期間」「リードタイム」など、様々な観点で成熟度毎の状態を表現できるでしょう。&lt;/p&gt;

&lt;p&gt;メンバー自身がディスカッションを通じてこれを完成させることで、&lt;strong&gt;一人ひとりが持つ「理想的な成熟チームのイメージ」を言語化し認識を合わせる&lt;/strong&gt;ことに役立ちます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&quot;step2-成熟度を測る&quot;&gt;Step2. 成熟度を測る&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step2.jpg&quot; alt=&quot;Step2. 成熟度を測る&quot; /&gt;&lt;/p&gt;

&lt;p&gt;成熟度に応じたチームの姿について共通認識を持てたら、次は自分たちのチームの成熟度がどれくらいかを考えていきます。&lt;/p&gt;

&lt;p&gt;このWorkshopはmiroを使っていて、左側に配置してる『People』コンポーネント上のユーザーアイコンはドラッグ＆ドロップすることができます。「せーの」で数字をいいながら自身のアイコンを右側のエリアにプロットして成熟度の認識を開示し合います。&lt;/p&gt;

&lt;p&gt;自分たちの成熟度を考えるとき「〇〇の場面で△△だったから成熟度nだと考えた」のように具体的なエピソードを思い浮かべることが多いと思います。その内容を付箋に書き出し右側のエリアに貼りながら共有し合います。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;具体的なエピソードの共有がWorkshopの要&lt;/strong&gt;で、「どういう行動が称賛されるか」の共通認識づくりに一役買います。チームにジョインして歴の浅いメンバーにとっては、&lt;strong&gt;参考事例を追体験できる機会&lt;/strong&gt;にもなります。&lt;/p&gt;

&lt;p&gt;エピソードの共有を踏まえて、チームの成熟度の共通認識をつくれればStep2は完了です。必ずしも1つの数字を決めきらずとも「〇〇な状況では8だけど、△△のときは5」「人によって見え方は違うけど7〜9あたり」といった具合に曖昧さがあっても良いです。重要なのは&lt;strong&gt;認識を合わせるために議論したという実績&lt;/strong&gt;です。&lt;/p&gt;

&lt;h4 id=&quot;step3-期待役割と照らし合わせる&quot;&gt;Step3. 期待役割と照らし合わせる&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2025-01-16/Step3.jpg&quot; alt=&quot;Step3. 期待役割と照らし合わせる&quot; /&gt;&lt;/p&gt;

&lt;p&gt;チームの成熟度について共通認識ができたら、最後に成熟度に応じた期待役割を紐解いていきます。CheatSheetでは 『成熟度3段階』×『3つの観点』で期待役割を表現していますが、&lt;strong&gt;会社の方針や組織のミッションによって期待役割は変化するので、Workshop開催前にEM等が自組織に合った内容に書き換えておく&lt;/strong&gt;ことをおすすめしています。&lt;/p&gt;

&lt;p&gt;Workshop参加者は、自分たちのチームの成熟度に合った行を読み合わせます。シートの各項目の達成状況をマルバツ等で表現しても良いでしょう。&lt;/p&gt;

&lt;p&gt;読んでいくと「これはすでにできている」「この行動は意識していなかった」と&lt;strong&gt;チームの強み弱みが浮き彫りになってきます&lt;/strong&gt;。同時にここでも背景にあるエピソードを各自が思い浮かべることになると思うので、付箋に書き出し共有し合います。&lt;/p&gt;

&lt;p&gt;次第に「プロダクト開発はSenior相当にできているが、自律性はMiddleレベルに達していない。だから〇〇をしてみよう」と具体的なアクションの議論が始まるかもしれません。もしくはWorkshop後に個々人が「チームの持続可能性を高めるために〇〇に取り組みします」と個人目標に落とし込むこともあります。&lt;/p&gt;

&lt;p&gt;こういった&lt;strong&gt;行動の変化まで結びつけばWorkshopは120点&lt;/strong&gt;の出来だったと言えます。&lt;/p&gt;

&lt;p&gt;逆にStep1の成熟度に応じたチーム像について何も意見が出ないなど、Workshopのどこかで極端に行き詰まった場合は、「チームメンバーが『チーム』について考える時間を十分に取れていない、チームのモデルケースを見て学ぶ機会がない」と組織課題が浮き彫りになります。&lt;/p&gt;

&lt;p&gt;これはこれでWorkshopの成果と言えるでしょう。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;実際にチームでやってみて手応えを感じたので、今回共有するに至りました。組織やチームに合わせて多少のアレンジは必要かもしれませんが、ぜひいろいろなチームで試していただきたいです。&lt;/p&gt;

&lt;p&gt;またWorkshopのアップデートは実践を重ねないとできないので、ぜひ実践後のフィードバックを&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までいただければと思います。&lt;/p&gt;</content><author><name></name></author><summary type="html">エンジニア一人ひとりの期待役割がスキルやキャリアにより変化するように、チームも成熟度やフェーズに応じて期待役割が変化します。</summary></entry><entry><title type="html">マネジメントを語るときは具体的で生々しいエピソードを添える</title><link href="https://aloerina01.github.io/blog/2024-12-20-1" rel="alternate" type="text/html" title="マネジメントを語るときは具体的で生々しいエピソードを添える" /><published>2024-12-20T00:00:00+00:00</published><updated>2024-12-20T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-20-1">&lt;p&gt;マネジメントの知見を共有すべくブログを書くとき、その1つ1つに具体的なエピソードを添えることを自分ルールにしています。エピソードにはいくつかの条件を設けています。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;実際に起きた出来事について&lt;/strong&gt;の具体例を出す場合は、多くの現場であるあるな例であり、読者が「たしかに自分もそうなったことあるなぁ」と&lt;strong&gt;実体験に重ねやすい&lt;/strong&gt;ものであること&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;取るべき行動について&lt;/strong&gt;の具体例を出す場合も、多くの現場であるあるな例であり、読者が「こんな場面に出くわしたら真似してみよう」と&lt;strong&gt;実践するイメージを持ちやすい&lt;/strong&gt;ものであること&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;失敗したり恥をかいたりする登場人物は自分だけ&lt;/strong&gt;であること&lt;/li&gt;
  &lt;li&gt;エピソードは&lt;strong&gt;複数&lt;/strong&gt;挙げること&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ありがたいことに、ブログを書くと「共感しました」「首がもげそうなくらい頷きました」「同じ状況なので参考にします」等の共感系のコメントをもらうことがあるので、多少は功を奏しているのだと思います。&lt;/p&gt;

&lt;p&gt;一方で具体事例がミスリードになるケースもあるにはあるにはあるのですが、なるべくシチュエーションの違うエピソードを複数挙げることで、その共通項である話の主題に目が向くよう工夫しています。&lt;/p&gt;

&lt;p&gt;それに抽象と具象の行き来はマネジメントに必要なスキルですしね、きっとメリットが勝ると信じています。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;＊ ＊ ＊&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;さて、ここからはなぜ共感を得ることを意識しているかについて語ろうと思います。&lt;strong&gt;私のEMとしての成果や活動の方向性&lt;/strong&gt;について触れます。&lt;/p&gt;

&lt;p&gt;私はマネージャーやスクラムマスターが孤独であることを身をもって知っています。同じ目線で議論やレビューをし合える同僚を社内で見つけることはなかなかに難しいのです。&lt;/p&gt;

&lt;p&gt;社外に目を向ければコミュニティはいくらかあるとは思いますが、マネージャーになったばかりで知見が少なくGiverになれない頃(なれる自信がない頃)は、コミュニティに顔を出してTakerとして振る舞うことに心理的抵抗もありました。もちろん新人を歓迎するコミュニティもあるでしょうが、私自身の性格の問題も相まって参加には至りませんでした。&lt;/p&gt;

&lt;p&gt;目線の合う仲間が身近に少ないこと以外にも、&lt;strong&gt;状況が違うと直面する課題もそれに対するアプローチも全く別のものになるというマネジメント業務の性質&lt;/strong&gt;も、マネージャーの孤独を加速させます。似た境遇で悩んでいる人を探すのに苦労するわけです。&lt;/p&gt;

&lt;p&gt;ですので私は、知見を共有するときには具体的なエピソードを添えて、それに共感してくれる読者の顔(実は身近なマネージャー数名の顔)を想像しながらブログを書いています。&lt;br /&gt;
単にTipsやテクニックを伝えるのではなく、どういうシチュエーションで、どういう意思決定のもと実践に至ったのかを、生々しく伝えたいと思っています。&lt;/p&gt;

&lt;p&gt;多くの人に響くエモさやSNSを沸かす奇抜さはないですが、極小数の似た境遇にいる読者にとって身近で実践的なブログでありたいのです。&lt;/p&gt;

&lt;p&gt;まるで彼らの目の前で実際に試行錯誤する様子を見せるかのように。彼らの壁打ち相手であるかのように。&lt;/p&gt;

&lt;p&gt;&lt;center&gt;＊ ＊ ＊&lt;/center&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;世界のどこかでがんばるEMの壁打ち相手になりたいと思う背景には、マネジメントの成果は&lt;strong&gt;影響力をスケールさせること&lt;/strong&gt;で示せるという考えがあります。&lt;/p&gt;

&lt;p&gt;マネジメントしているエンジニアたちのキャリアが前進し、チームが自律的になり、次のマネージャーが生まれ、チームを引き継ぎ自分は次のチームに向かう。&lt;br /&gt;
そうやってチームを渡り歩きながら、&lt;strong&gt;マネジメント関係が終わった後も活躍し続けられる人やチームを増やしていくこと&lt;/strong&gt;が、私にとって&lt;strong&gt;対外的に見せることのできるマネジメント成果&lt;/strong&gt;なのです。&lt;/p&gt;

&lt;p&gt;もしくはより上位組織のマネジメントにレイヤを移し、複数のマネージャーやチームが生まれる仕組みをつくることでも、私のマネジメントの効力を残すことができるでしょう。&lt;/p&gt;

&lt;p&gt;自分のマネジメントの効力をどこまで広げられるか、言い換えれば、&lt;strong&gt;良い影響を与えることができた人・チーム・組織をどれだけ残せるか&lt;/strong&gt;を追求していくことが当面の私のテーマです。&lt;/p&gt;

&lt;p&gt;もちろん自組織において今現在期待される役割を疎かにするつもりはありませんが、それを全うすると同時に、自分がチームや組織にいなくてもよい状態に着実に近づけることにも意識を向けているということです。&lt;/p&gt;

&lt;p&gt;そしてマネジメント効力は、&lt;strong&gt;ブログを通じてモデルケースを見せる&lt;/strong&gt;ことによって、自分とは直接関わりのないEMにもほんの少しではありますが届けられるのではと考えています。これが読者の目に生々しく姿を描いてもらえるような具体的エピソードを添える理由でした。&lt;/p&gt;

&lt;p&gt;この記事も、たった1人でいいのでどなたかの役に立てれば嬉しい限りです。&lt;/p&gt;</content><author><name></name></author><summary type="html">マネジメントの知見を共有すべくブログを書くとき、その1つ1つに具体的なエピソードを添えることを自分ルールにしています。エピソードにはいくつかの条件を設けています。</summary></entry><entry><title type="html">“頼んだのにやってくれない” “相談にもきてくれない”の処方箋</title><link href="https://aloerina01.github.io/blog/2024-12-11-1" rel="alternate" type="text/html" title="“頼んだのにやってくれない” “相談にもきてくれない”の処方箋" /><published>2024-12-11T00:00:00+00:00</published><updated>2024-12-11T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-11-1">&lt;p&gt;部下や後輩に仕事を依頼する立場を経験すると、1度くらいは&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;頼んだ仕事を進めてくれない&lt;/li&gt;
  &lt;li&gt;一緒に計画を立てたりタスク分解しても進捗が出ない&lt;/li&gt;
  &lt;li&gt;「やり方が分からないときは聞きに来てください」と伝えたけど相談にきてくれない&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;なんてことを経験するかもしれません。自分からいろいろ歩み寄っているつもりなのに相手がうまく仕事をこなしてくれない、という状況です。&lt;/p&gt;

&lt;p&gt;今回はこういったシチュエーションとどう向き合うかの私なりの考え方を書くわけですが、大前提として人に仕事を任せる時間的余裕・精神的余裕がある状況を想定しています。&lt;/p&gt;

&lt;p&gt;部下や後輩に任せるということは、自分がやったほうが早く上手に終えられる可能性や、任せた相手が失敗する可能性があることを承知していて、加えて実践経験から学びを得ることを期待している状況だと思います。&lt;/p&gt;

&lt;p&gt;逆に猫の手も借りたいようなサバイバルフェーズで新しいエンジニアをチームに迎え入れて、ろくなオンボーディングもなしに「頼んだ仕事をやってくれない！」と嘆くのはさすがに自分勝手な言い分ですしね。&lt;/p&gt;

&lt;p&gt;では参ります。&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋1-相手を意図通りに動かそうとするのをやめる&quot; id=&quot;markdown-toc-処方箋1-相手を意図通りに動かそうとするのをやめる&quot;&gt;処方箋1: 「相手を意図通りに動かそうとする」のをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋2-やる気がないと決めつけるのをやめる&quot; id=&quot;markdown-toc-処方箋2-やる気がないと決めつけるのをやめる&quot;&gt;処方箋2: 「やる気がない」と決めつけるのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot; id=&quot;markdown-toc-処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot;&gt;処方箋3: 「全ての行動は明快な理屈に基づいている」と思い込むのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot; id=&quot;markdown-toc-処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot;&gt;処方箋4: 「自分のちからで解決できるはず」と思い込むのをやめる&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#まとめ&quot; id=&quot;markdown-toc-まとめ&quot;&gt;まとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;処方箋1-相手を意図通りに動かそうとするのをやめる&quot;&gt;処方箋1: 「相手を意図通りに動かそうとする」のをやめる&lt;/h3&gt;

&lt;p&gt;いきなりガッカリする結論を、しかし今回の話の根幹になる結論を言いますと&lt;strong&gt;「相手に仕事をしてもらう」ための処方箋は存在しません&lt;/strong&gt;。&lt;strong&gt;あるのは「自分がどう向き合うか」の処方箋だけ&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;どんなに自分が正しいと感じていたとしても、どんなに相手が不適切な行動をしていたとしても、一方的に相手の考えや行動を変える解決策は存在せず、変えられるのは「自分が相手をどのように捉えているか」である、とはよく言われます。言い換えると「&lt;strong&gt;相手との関係性&lt;/strong&gt;」を変えるということです。&lt;/p&gt;

&lt;p&gt;相手を『怠慢』や『無能』と捉え行動を変えさせようとすることが関係性を悪化させて負の循環に迷い込む要因となることがあるので、それを防ぎ、ゆるやかに良い関係を導き、いずれ状況が良くなることを期待するような&lt;strong&gt;根本治療こそが、この状況でできる唯一の手段&lt;/strong&gt;だと考えています&lt;strong&gt;。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;処方箋2-やる気がないと決めつけるのをやめる&quot;&gt;処方箋2: 「やる気がない」と決めつけるのをやめる&lt;/h3&gt;

&lt;p&gt;相手の行動が不適切であり、修正するよう指示をしても修正が見て取れないとき、相手に「やる気がない」と決めつけないよう注意が必要です。&lt;/p&gt;

&lt;p&gt;相手の思考や感情を決めつけた上でのコミュニケーションは、それが間違っていたときに状況を大きく悪化させてしまいます(仮に決めつけた通りであったとしても相手にとって気持ちの良い会話にはなり得ません)。&lt;/p&gt;

&lt;p&gt;例えば相手は体調が悪く、しかしそのことを知られたくなくて無理している状況だとします。「無理をしてがんばっているが、仕事が完遂できていない」状況です。このときに「やる気がない」と決めつけたコミュニケーションを取れば、がんばろうとしていた相手の気持ちをどれだけひどく打ち砕くことになるかは想像に難くないでしょう。&lt;/p&gt;

&lt;p&gt;相手が真に何を考えているか、どんな意図があるかは分かりません。あるのは「私の目に相手がどう写っているか」という”主観的な観測”だけです。&lt;br /&gt;
&lt;strong&gt;相手の意図を知らなくても知っていると思い込み、さらにその意図が悪いものであると決めつけてしまうのは、よくある過ちです&lt;/strong&gt;。相手の意図を勝手に作り出さず、理解する姿勢で向き合うのが関係性を変える一歩目です。&lt;/p&gt;

&lt;h3 id=&quot;処方箋3-全ての行動は明快な理屈に基づいていると思い込むのをやめる&quot;&gt;処方箋3: 「全ての行動は明快な理屈に基づいている」と思い込むのをやめる&lt;/h3&gt;

&lt;p&gt;これまでの処方箋にのっとり、相手のやる気や意図を決めつけず「きっと何らかの理由があるはずだ」と性善説的に事態を受け止め、その解消に勤しむことで状況が好転することもあります。&lt;/p&gt;

&lt;p&gt;しかしそれでも解決に近づかない場合、&lt;strong&gt;次にやめるべきことは「相手の全ての行動には理由があり自分が気付けていない論理的な背景がある」と思い込むこと&lt;/strong&gt;です。具体的に言うと&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;やり方が分かれば、仕事を進めてくれるはずだ&lt;/li&gt;
  &lt;li&gt;質問していいよといえば、質問にくるはずだ&lt;/li&gt;
  &lt;li&gt;時間を確保して問いかければ、困っていることを打ち明けてくれるはずだ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といった思い込みから脱却しようということです。&lt;/p&gt;

&lt;p&gt;では理屈ではない何が行動の背景にあるのでしょうか。私は&lt;strong&gt;『気持ち』&lt;/strong&gt;に着目します。&lt;/p&gt;

&lt;p&gt;例えば相談しない理由は「あなたを信用していないから」もしくは「信用したくないから」という気持ちが根底にあるかもしれません。仕事を進めない理由は「納得いかないから」かもしれません。「なんか気に食わないから」なんてこともあり得ます。&lt;/p&gt;

&lt;p&gt;人間ですから、そういうことはあります。「仕事なんだから嫌でもやれ」と思うかもしれませんが、「仕事ならば嫌でもやるはずだ」という思い込みもこの状況では役に立ちません。&lt;/p&gt;

&lt;p&gt;では気持ちに着目して、どういう手を打てるのかと言うと、ほとんどやれることはありません。&lt;br /&gt;
粘り強く向き合って信頼関係を築くしかないですが、すでに拒否反応が出ている場合はなかなか態度を変えてくれないこともあるでしょう。人間ですから。&lt;/p&gt;

&lt;p&gt;ですので、こうなる前に、仕事を初めて依頼するときにから、顔を合わせて最初の一言目の会話をするときから、「&lt;strong&gt;私はあなたを信用したいと思っている。これから良い関係を築きたいと思っている。そのための努力をする気がある&lt;/strong&gt;」ということをコミュニケーションの中で示していくしかないでしょう。&lt;/p&gt;

&lt;p&gt;つまり&lt;strong&gt;『気持ち』に着目するのは問題が起きてからではなく、相手と関係を築く一番最初から&lt;/strong&gt;というわけです。当たり前といえば当たり前なんですが、往々にして仕事の場では感情を無視してまるで双方がロボットであるかのように指示と応答をするだけのコミュニケーションが発生したりします。&lt;/p&gt;

&lt;h3 id=&quot;処方箋4-自分のちからで解決できるはずと思い込むのをやめる&quot;&gt;処方箋4: 「自分のちからで解決できるはず」と思い込むのをやめる&lt;/h3&gt;

&lt;p&gt;いよいよ元も子もなくなってきましたが、ここまで書いたことをすべて意識して取り組んできても、やっぱり何度言っても期日までにタスクを終えてくれない……なんてことは起きます。繰り返し起きます。&lt;/p&gt;

&lt;p&gt;原因を探求すればキリがないですし、医学的な要因に依ることもあります。そしてそれを知ったところで自分にはどうにもできません。&lt;/p&gt;

&lt;p&gt;なので&lt;strong&gt;「仕事をやってくれない」という事象を自分の力で解決することを諦め、どのような仕事だったらやれるのかを一緒に探す&lt;/strong&gt;よう切り替えが必要なときもあります。&lt;/p&gt;

&lt;p&gt;少なくとも、自分たちで採用しチームに受け入れたメンバーであればその人が成し遂げてきた実績を知っているはずですし、採用の過程で見つけた魅力や長所もあるはずです。それを活かす方法を探すよう舵を切ることも時には必要です。&lt;/p&gt;

&lt;p&gt;ここまでの内容を整理すると、処方箋1〜3は症状を予防するための生活習慣改善で、症状に対する本当の処方が処方箋4の内容になるとも言えますね。&lt;/p&gt;

&lt;h3 id=&quot;まとめ&quot;&gt;まとめ&lt;/h3&gt;

&lt;p&gt;長くなったのでまとめると&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;「相手を変えようとする」のではなく、私自身の「相手の捉え方」を変える&lt;/li&gt;
  &lt;li&gt;相手の意図を決めつけない&lt;/li&gt;
  &lt;li&gt;仕事の会話であっても双方の『気持ち』を軽視しない&lt;/li&gt;
  &lt;li&gt;問題の原因を取り払うのではなく、問題を回避する方法にも目を向ける&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;といったアプローチを紹介しました。&lt;/p&gt;

&lt;p&gt;先述のとおり、日常生活で発生するコミュニケーションにおいてはどれも当たり前のことなのですが、仕事の場となるとつい&lt;strong&gt;人間的な背景・関係性・感情&lt;/strong&gt;など見落としてしまうことがあり、自分も時間をかけて矯正した部分です。&lt;/p&gt;

&lt;p&gt;おそらく今現在問題に直面していて、その解決法を得たくてこの記事を読んでくれた方にとっては、即効性がなくガッカリする内容だったかもしれません。その点では申し訳なさもありますが、&lt;strong&gt;時間をかけることでしか解消し得ない問題&lt;/strong&gt;なのだと改めて知る機会にしていただければ幸いです。&lt;/p&gt;

&lt;p&gt;思ったより融通が効かず、理屈では動かず、筋が通っていないのが私たち人間です。こんな記事を書きながらもまだまだ上手くできないことの多い私ですが、これからも人間らしさに向き合いながら知見を書き残していこうと思います。&lt;/p&gt;</content><author><name></name></author><summary type="html">部下や後輩に仕事を依頼する立場を経験すると、1度くらいは</summary></entry><entry><title type="html">ファシリテーションの細かい意識の使い分け - Daily Standup 編</title><link href="https://aloerina01.github.io/blog/2024-12-02-1" rel="alternate" type="text/html" title="ファシリテーションの細かい意識の使い分け - Daily Standup 編" /><published>2024-12-02T00:00:00+00:00</published><updated>2024-12-02T00:00:00+00:00</updated><id>https://aloerina01.github.io/blog/1</id><content type="html" xml:base="https://aloerina01.github.io/blog/2024-12-02-1">&lt;p&gt;私がエンジニアリングマネージャーとしてミーティング等をファシリテーションするとき、その内容に関わらず共通して意識していることがあります。そしてディテールを見れば意識やテクニックを使い分けている部分があります。それらの言語化にトライしてみようと思います。&lt;/p&gt;

&lt;p&gt;ボリュームが出そうなので何本かの記事に分けて書きます。今回はその第1段です。&lt;/p&gt;

&lt;h3 id=&quot;どのミーティングにも共通して意識することまたはemがファシリテーションをする重要な理由&quot;&gt;どのミーティングにも共通して意識すること、またはEMがファシリテーションをする重要な理由&lt;/h3&gt;

&lt;p&gt;ミーティングの成功という目先の結果だけでなく、&lt;strong&gt;その場での経験がメンバーの関係性、習慣、文化に良い影響を与え、未来の変化の材料となること&lt;/strong&gt;を意識します。&lt;/p&gt;

&lt;p&gt;ファシリテーション時の意識を大雑把に分ければ、&lt;strong&gt;①ミーティングを成功させるための意識、②チームが変化していくための布石を打つ意識&lt;/strong&gt;、の2つが存在するということです。
特に後者はEMの役割と密接に関わりますし、チームの将来像を見据えてるEMだからこそ持てる意識だと思います(スクラムチームであればスクラムマスターが同様のことを考えることになると思います)。&lt;/p&gt;

&lt;p&gt;この一連の記事で取り扱うのは②になります。&lt;br /&gt;
①については過去に&lt;a href=&quot;https://aloerina01.github.io/blog/2020-04-16-1&quot; target=&quot;_blank&quot;&gt;レトロスペクティブのファシリテーションガイド&lt;/a&gt;にまとめたことがあるので、よければ併せてご参照ください。&lt;/p&gt;

&lt;h3 id=&quot;daily-standup-で垣間見える自責思考に向き合う&quot;&gt;Daily Standup で垣間見える自責思考に向き合う&lt;/h3&gt;

&lt;p&gt;Daily Standup のファシリテーションでは、チームメンバーの意識の向き先を「個々人の成果」から「チームの成果」に変えるために、考え方の癖の修正してもらうことを意識します。具体例から説明します。&lt;/p&gt;

&lt;p&gt;多くの良心的なメンバーには責任感があり、自責思考が備わっています。分かりやすいであろう事例は「自分の失敗は自分で取り返さねば」という行動です。「思ったより進捗が出ずに遅れが発生し、しかしまだ自分が残業してがんばれば計画通りのペースを取り戻せそうだ」という場面で「今日中に終わらせます」と言ってしまう経験は、エンジニアなら誰でも想像できるのではないでしょうか。&lt;/p&gt;

&lt;p&gt;もちろん責任感が強いの素晴らしいことですが、&lt;strong&gt;もしその遅れがチームにとって致命的であれば、チームの総力をもって解決するほうが良いはず&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;完了できずにいるタスクがチームにとって最優先の仕事であるなら、他のタスクが予定通りに終わっていたとしても、チームの成果としては「一番大事な仕事が終わっていない」となります。それはタスクを終えられなかった個人だけの問題ではなく、「最優先の仕事の進捗よりも優先順位の低い仕事の進捗を優先したチームの判断が間違い」だと捉えられます。&lt;/p&gt;

&lt;p&gt;視野をチームの外に広げて、ステークホルダーの目線で考えてみると「チームの&lt;strong&gt;誰が&lt;/strong&gt;遅れを生んだか」よりも「&lt;strong&gt;チームは&lt;/strong&gt;仕事を優先順位の沿って成し遂げたか」のほうが重要であることが想像できると思います。&lt;/p&gt;

&lt;p&gt;今回は具体例として『遅れ』にフォーカスしましたが、成果をより良くする場面においても考え方は同様です。&lt;strong&gt;主語を『私』から『チーム』に変えて、チームが完遂すべき仕事の優先順位に基づいて個々人のタスクを進行すべきです&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;そのためにDaily Standup を実施しているはずですが、この考え方を定着させる際に自責思考の癖の修正が必要になることがあり、そこでファシリテーションの出番です。&lt;/p&gt;

&lt;h3 id=&quot;ファシリテーションで自責思考を軌道修正する&quot;&gt;ファシリテーションで自責思考を軌道修正する&lt;/h3&gt;

&lt;p&gt;キッパリと考え方を切り替えてもらうように単刀直入な問いかけを利用します。&lt;/p&gt;

&lt;p&gt;先述のような「計画に対する遅れ」の議論をファシリテーションする場合は、例えば以下のような質問を使います。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;話題に上がっている問題はチームにとってどの程度の優先順位ですか？&lt;/li&gt;
  &lt;li&gt;その問題の原因分析にどれだけ時間を割きますか？　今イテレーションに残された時間や仕事の優先順位と比較して判断してください&lt;/li&gt;
  &lt;li&gt;話題に上がっている問題の解決をチームの最優先事項として取り組む場合、誰が何をすると良さそうですか？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;「チームの中の誰が責任をとるか」の考え方から「チームの成果を最大にするために何をするか」の考え方へシフトさせるための直接的な問いかけを意識します。&lt;/p&gt;

&lt;p&gt;(今後の記事で紹介する予定の)別のミーティングの事例では、チームメンバーの考え方を尊重しつつ緩やかに変化を起こすような問いかけを使うこともありますが、今回のように考え方をガラッと変えること狙うときは直接的な問いかけをするようにしています。&lt;/p&gt;

&lt;h3 id=&quot;いつも特定の人が遅れる場合は&quot;&gt;いつも特定の人が遅れる場合は&lt;/h3&gt;

&lt;p&gt;そうは言っても、「いつも遅れる人がいる」「全然責任感がない人がいる」など、今回紹介したファシリテーションの意識をすんなり受け入れられないチーム事情もあると思います。&lt;/p&gt;

&lt;p&gt;すべての事例に解答を持っているわけではないですが、いくつかのアプローチを添えて補足とします。&lt;/p&gt;

&lt;p&gt;ジュニアなエンジニアやジョインして間もないエンジニアが、他のメンバーに比べて知識や経験が浅いために計画の精度が低く、結果遅れが生じる場面はしばしばあると思います。&lt;br /&gt;
それに備えるには、&lt;strong&gt;チームは最初から「計画が変更になる前提」でいる&lt;/strong&gt;と良いです。最初につくった計画の精度は40％程度であると捉え、まずは1日手を動かしてみてその実践を材料に計画を修正することを、あらかじめ計画しておきます。&lt;/p&gt;

&lt;p&gt;ここまで読んでAgile 開発経験値の高い人は気付いていると思いますが、Daily Standup の本来の使い方がこれです。&lt;strong&gt;進捗を元に計画の見直しをすることが本来の目的&lt;/strong&gt;です。&lt;/p&gt;

&lt;p&gt;ですので、既にこれは実践しているけれどそれでも遅れ続けている人に困っている事例に対し別の選択肢を提案するなら、&lt;strong&gt;ペアアサイン&lt;/strong&gt;はいかがでしょうか。見積もりが上手い人や、そのタスクへの適正が高い人、仕事の進め方が上手い人などとペアアサインすることで&lt;strong&gt;仕事の仕方を学ぶ機会が増え、同時にそれまでの遅れの原因を発見できる可能性がある&lt;/strong&gt;からです。&lt;/p&gt;

&lt;p&gt;それさえも有効打にならず遅れ続ける人がいる場合、その人の適正の問題やチームメンバーとの関係性の問題などを考えるようにしています。少なくともその人が&lt;strong&gt;故意に遅れているはずはない&lt;/strong&gt;ですし、自分たちが採用して受け入れた人であれば&lt;strong&gt;能力が劣っているはずもありません&lt;/strong&gt;(可能性の話をすれば悪意や能力不足の可能性もゼロではないですが、疑わずに信じることができなければそもそもチームとして破綻しています)。&lt;br /&gt;
&lt;strong&gt;チームメンバーには能力があり、タスクを完遂したい気持ちも責任感もあり、その上で遅れが生じる何らかの要因があると捉え、根気強く原因切り分けをしていくことが重要です&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&quot;おわりに&quot;&gt;おわりに&lt;/h3&gt;

&lt;p&gt;今回はDaily Standup のファシリテーション経験を思い出しながら書きました。&lt;/p&gt;

&lt;p&gt;チームメンバーの意識の向き先を「個々人の成果」から「チームの成果」に変えることになぜこんなにもこだわるかと言うと、&lt;strong&gt;その先に自律的なチーム、自己組織化されたチームがある&lt;/strong&gt;と考えているからです。チームが変化していくための布石を打つのは、変化の先にある自律的なチーム像を描き、そこに至るためのステップとしての行動というわけです。&lt;/p&gt;

&lt;p&gt;今後は「ふりかえり」「課題バックログのリファインメント」「チームビルディング系ワークショップ」などのファシリテーションについて書こうと思いますが、他にも聞いてみたい事例があればぜひ&lt;a href=&quot;https://x.com/aloerina_&quot; target=&quot;_blank&quot;&gt;@aloerina_&lt;/a&gt;までご連絡ください。どなたでも大歓迎です。&lt;/p&gt;</content><author><name></name></author><summary type="html">私がエンジニアリングマネージャーとしてミーティング等をファシリテーションするとき、その内容に関わらず共通して意識していることがあります。そしてディテールを見れば意識やテクニックを使い分けている部分があります。それらの言語化にトライしてみようと思います。</summary></entry></feed>